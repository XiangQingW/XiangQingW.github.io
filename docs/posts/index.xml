<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 知识的阶梯</title>
    <link>https://xiangqingw.github.io/posts/</link>
    <description>Recent content in Posts on 知识的阶梯</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 23 Jan 2022 22:08:30 +0800</lastBuildDate><atom:link href="https://xiangqingw.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>为什么Linux比其他操作系统更快？</title>
      <link>https://xiangqingw.github.io/posts/why-is-linux-faster-than-other-os/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:30 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-is-linux-faster-than-other-os/</guid>
      <description>为什么Linux比其他操作系统更快？ 回答 1 我的台式电脑为7岁，我可以在同一台计算机上双启动Linux和Windows时比较（
Linux操作系统一般比其他操作系统快，为什么？
是的。它更快。我每天都使用它。我可以确认。
使用Linux（薄荷）近10年，我可以确认：
我的台式电脑是7岁的，我可以比较我在同一台计算机上双启动Linux和Windows（我已经删除了Windows，因为我没有使用它）。
基本上，我注意到了与澳大利亚IT公司DXM在一个非常基本的笔记本上进行的以下速度测试的差异。 （可能是机械硬盘）。但在我的情况下，我的测量超过了10倍，因为我有SSD和四核处理器。但速比（Linux VS Windows）是相同的。
（信息图表来源）
但为什么？对不起，我不知道为什么！我唯一能说的是我真的更喜欢Linux，而不仅仅是为了它的性能。
让我快速检查&amp;hellip;&amp;hellip;
我的CPU是一个旧的I5-4590（发布日期：2014年5月）：
这里有几个时间我现在在这个旧的设置上获得，具有相当普通的SSD（关键MX 500）。
显然，最明显的差异是更新的速度。再次，根据我的观察结果：
是的，我7岁的Linux电脑击败了平均全新的Windows 10计算机。
回答 2 简而言之，答案是肯定的！
漫长的答案如下&amp;hellip;&amp;hellip;
首先，与常见的信仰相反，Linux不是OS（操作系统）。正式的，Linux是一个内核。这就是为什么他们经常和正确地说GNU / Linux。因为操作系统是GNU。
而GNU的官方内核是HURD。但它到目前为止（和实验）我怀疑你会开始听到GNU / HURD。
我挖掘&amp;hellip;&amp;hellip;我的观点是Linux内核和GNU操作系统都很快。问题是为什么&amp;hellip;&amp;hellip;
有一些答案：
简而言之，答案是肯定的！
漫长的答案如下&amp;hellip;&amp;hellip;
首先，与常见的信仰相反，Linux不是OS（操作系统）。正式的，Linux是一个内核。这就是为什么他们经常和正确地说GNU / Linux。因为操作系统是GNU。
而GNU的官方内核是HURD。但它到目前为止（和实验）我怀疑你会开始听到GNU / HURD。
我挖掘&amp;hellip;&amp;hellip;我的观点是Linux内核和GNU操作系统都很快。问题是为什么&amp;hellip;&amp;hellip;
有一些答案：
您只需使用GNU / Linux即可快速实现差异。
讽刺是，很多开发人员现在正在捕获&amp;hellip;&amp;hellip;例如，现在有很多公司现在在Windows上丢弃了.NET开发并在Linux上向Mono移动。
回到Corel Draw正在实施自己版本的Linux时，他们的主要差异化器（此时）是葡萄酒（Windows仿真器）的大规模投资，这可能在Linux上运行Windows二进制文件。我当时在渥太华学习（他们的总部位于职位），所以我与工程师谈过，他们声称他们在葡萄酒上运行的所有Microsoft应用程序（即：MS Works和MS WordPad &amp;hellip;&amp;hellip;他们的名字是什么）更快在Linux上（模拟）而不是在Windows上自然&amp;hellip;&amp;hellip;现在这很糟糕！
不幸的是，Corel Draw在那时几乎破产了。微软延长融资后几个月（我认为这是一亿美元），Corel Draw宣布他们放弃了所有Linux发布开发。像微软没有参与这个决定，对吧？
回答 3 所以我会以几种方式解决这个问题，是Linux更快，那么其他操作系统和答案是肯定的，整体体验是Linux更快，在某些领域的Windows甚至麦克斯甚至是宏。例如，由于Windows的变化，启动时间（进入登录屏幕）更快，Linux，在Mac上它有点难以确定，但Linux似乎只是一点速度，从登录到全功能桌面，Linux打败了Windows Dank，没有做得很多与麦斯科斯的比较，但似乎可能是一个死堆。打开程序，这就是它变得棘手的地方，如果你打开一个常规的L​​inux包并比较包打开时间到Windows exe文件，那就像vlc linux vs vlc窗口一样，如果您使用的是捕捉，则Linux将更快地打开几秒钟Linux它打开了很少的速度，扁平包更好，但也有点慢于传统的包装。但是，程序的功能在他们打开之后，Linux在这个区域中的excels，一切都很顺利，旋转等等，为什么这是Linux的最大原因是更快的是较低的系统资源。在点的情况下，Windows要求您拥有至少8GB的RAM，这是因为它在空闲时使用4GB的RAM，而其他程序可以轻松地将1GB或更高添加到使用情况下，较近的系统较近的系统速度较慢运行。 Windows上的程序需要更多处理器时间，强制使用多个核心CPU，以及非常快速的CPU来补偿。将此与Linux进行比较，两个系统Hog桌面，GNOME和KDE，KDE使用0.6-0.9GB的RAM空闲，并且应用程序接近完全加载的2.5-5GB，这是推动极端工作负荷，GNOME使用即将到来在1-1.5GB空闲状态下，使用较低的桌面（专为旧硬件设计），在某些用例500KB的RAM到300-500MB的RAM中使用。只有1GB完全装载。此外，它不需要尽可能多的CPU处理能力，因此您将在单个核心CPU上运行Linux的任何问题，这意味着您可以在不再运行Windows无法再运行的时间内运行旧硬件一个系统。在16-20岁的旧硬件上，这将是没有看到的Linux完全罚款。
回答 4 由于Linux的ISO文件与其他操作系统相比，因此我们从未安装过多的应用程序，然后在Linux中需要过多的应用程序。因此，与其他操作系统相比，它运行得更快。
回答 5 你好，蒂姆。</description>
    </item>
    
    <item>
      <title>学习Python编程语言的要求是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-are-the-requirements-for-learning-the-python-programming-language/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:30 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-are-the-requirements-for-learning-the-python-programming-language/</guid>
      <description>学习Python编程语言的要求是什么？ 回答 1 基本上，任何事情都会起作用，在过去10年中制作的任何PC或Mac都是很好的，你可以像覆盆子Pi一样使用其他东西，甚至是amiga或其他东西。
Python非常轻，根本不需要非常多的RAM，你可以基本上运行它。
任何未生锈的计算机都可能运行Python。避免Chromebook可能，iPad也不是伟大的，但真正任何PC或Mac，或Raspberry Pi或类似物都很好。
回答 2 最小硬件要求非常依赖于由给定的蟒蛇/天盖/ vs代码用户开发的特定软件。需要存储内存中的大型数组/对象的应用程序需要更多的RAM，而需要更快地执行众多计算或任务的应用程序需要更快的处理器。
也就是说，我们发现以下列表表示安装Enthough Python和关联应用程序所需的最低要求：
大多数用户会发现近年来购买的任何电脑都会满足（通常超过）这些硬件要求。
回答 3 对于基本Python学习，您的最大因素将是您的编辑/ IDE和OS需求的内存。 Python本身非常细长的线。
如果您开始在复杂的应用程序上工作，请确保，您的Python程序[和IT中的数据]可能需要大量的内存，但除非您打算做一些非常详细的3D建模，复杂的机器学习或大数据库工作，否则您的基本工作笔记本电脑或台式电脑 - 即使是平板电脑或手机也会有能力做到这一点 - 对于手机来说，这可能并不容易，其中一些平板电脑也可能不这样做，但除此之外，几乎没有任何东西使用处理器和操作系统将执行。
当然可以编写使用Python中所有可用内存的笨拙的代码，但这只是一个很好的学习体验，如果您的内存不足，程序很可能是程序而不是计算机的问题有足够的记忆。
回答 4 几乎任何笔记本电脑或PC。
我一直保留了我的索尼VAIO笔记本电脑，我在15-16年前买了它。我用这台笔记本电脑的几件事之一是Python有趣的项目。
您还可以在手机上安装Pythonista应用程序，以在Python中学习一些有用的东西。
回答 5 大家好，
我是Sanaya Rajput，我想回答这个问题。在开始讨论之前，首先让我们了解Python。
什么是python？
Python是最受欢迎和解释的高级编程语言。基本上它用于Web开发，软件开发，数学，科学和数字应用程序。
如何学习Python？
如果要掌握Python编程语言。因此，您可以在线和脱机平台，您可以在这里加入和学习Python。如今，许多在线平台为Python提供了教程和视频。但你应该有好k
大家好，
我是Sanaya Rajput，我想回答这个问题。在开始讨论之前，首先让我们了解Python。
什么是python？
Python是最受欢迎和解释的高级编程语言。基本上它用于Web开发，软件开发，数学，科学和数字应用程序。
如何学习Python？
如果要掌握Python编程语言。因此，您可以在线和脱机平台，您可以在这里加入和学习Python。如今，许多在线平台为Python提供了教程和视频。但是你应该了解哪个平台最适合你的知识？因为您可以通过在实时项目和良好的指导下成为Python编程语言的专家。
学习Python的优点： -
Python课程模块： -
Python训练程序员后的工作角色： -
来自研究所的Python课程： -
最好的研究所为学生提供了现场项目培训，成为Python课程的专家。如果您想学习Python编程语言，那么我会向您建议您为一个非常适合您的Python课程的Jeetech学院。该研究所在Python字段中提供了完整的指导，这对学生来说真正有助于学习关于Python的最佳事物。这所学院的培训师在Python拥有10多年的经验，这对学习者来说非常有帮助。
该研究所可以是学习Python语言的步骤指南。他们根据行业的要求培养学生，并帮助学生在Python领域开发更令人满意的专业。这是德里学习者之间的可能研究所的原因。
为学生做好准备，学生需要最好的学院才能报名。一些像Jeetech Academy这样的流行研究所，为学生提供专家培训。完成课程后，他们还在行业中提供100％的就业安置，以创造学生的光明未来。
谢谢你滚动&amp;hellip;&amp;hellip;
回答 6 这是一种路线图：
第1周
Google Python编程基础和挑选任何好网站。教程或任何其他应该是好的。这应该带你去一周，每天8小时，同时做小脚本，以便执行你的理解。注意：永远不要记住语法，它将自然而然地抬头，每次需要它，直到你最终内化它是前往的方式。
第2周，3,3.5
拿起一个项目并开始努力完成它。在项目上工作时的一些一般提示：
这是一种路线图：
第1周
Google Python编程基础和挑选任何好网站。教程或任何其他应该是好的。这应该带你去一周，每天8小时，同时做小脚本，以便执行你的理解。注意：永远不要记住语法，它将自然而然地抬头，每次需要它，直到你最终内化它是前往的方式。</description>
    </item>
    
    <item>
      <title>学习休息API需要多长时间？</title>
      <link>https://xiangqingw.github.io/posts/how-long-will-it-take-to-learn-rest-api/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:30 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-long-will-it-take-to-learn-rest-api/</guid>
      <description>学习休息API需要多长时间？ 回答 1 这取决于你的经历。 REST API通常很容易学习。如果您已经熟悉HTTP协议，则肯定会有一个头部开始。我会建议您花3-5天的学习休息系统。其余的架构风格适用于MicroServices和Web应用程序。
随时随地了解您遇到的替代和相关技术，如SOAP和RPC。我在微软，Facebook和教育中接受了数百名开发人员作为前SWE。在面试各级开发人员时，我看到的最大弱点是缺少的知识深度。我总是喜欢提出问题，以确保开发人员了解REST API和重叠技术之间的区别。最后一分钟克切一些笔记很容易，但是将使您在面试中发光的是更广泛的理解，休息只是一个玩家。
在您研究时，我建议您查看涵盖休息API的某些基本原理的博客文章：13休息API面试问题您需要知道
回答 2 最多需要2-3天来学习所有RET API概念。但是你需要用不同的场景练习。如果您需要任何帮助，请告诉我，我将分享一些教程。
回答 3 我已经在学习Python大约六个月了。没有每天花8个小时，但更像是一种爱好。我在不到一年前使用HTML，CSS和JavaScript开始。所以我确实启动了Python对什么代码和编程的一些牢固了解。当然，在开始Python时，我坠入爱河和简单的语言优惠。它还允许我轻松了解一些复杂的编程概念，我可以用其他语言使用我有时可以很开心（例如VBA）。在六个月的Python之后，我已经开始了一些项目，这里是我在按时间顺序工作的主要事情：
6个月后，我对我达到的Python级别感到非常高兴。我希望生病会在未来六个月内进行两倍。并且能够在日常生活中尽可能多地申请（当前的工作，个人应用程序，其他项目），以便将其保持为令人兴奋。
我希望这个答案让您了解未来几个月可能对您的样子。
回答 4 RESTFUL API - 也称为RESTful Web服务或R
图像来源： - 谷歌
RESTful API是用于应用程序接口的架构风格，它使用HTTP请求访问和使用数据。该数据可用于获取，放置，邮寄和删除数据类型，这是指读取，更新，创建和删除有关资源的操作。
网站的API是允许两个软件程序彼此通信的代码。 API为开发人员写出了从操作系统或其他应用程序请求服务的程序的正确方法。
RESTful API - 也称为RESTful Web服务或REST API - 基于代表性状态传输，这是一种架构风格和经常用于Web服务开发的通信方法。
REST技术通常优于其他类似技术。这往往是这种情况，因为休息使用较少的带宽，使其更适合高效的互联网使用。 RESTFUL API也可以通过编程语言（如JavaScript或Python）构建。
六个休息API规则
为了完全受益于REST提供的功能，API必须遵循六个要求。 （嗯，技术上五是必需的，一个是可选的。）每个要求为快速和多功能API奠定了基础。
1.客户端 - 服务器分隔
在REST架构下，客户端和服务器只能以单向交互：客户端向服务器发送请求，然后服务器将响应发送回客户端。服务器无法使请求，客户端无法响应 - 客户端启动所有交互。
通过简化客户端和服务器之间的通信，RESTful API保持两个方便独立的。这样，在不担心影响任何其他服务器的情况下，客户端软件可以增长它们的构建，并且可以在不无意中影响客户端的情况下修改服务器内容。
2.统一界面
本指南表示所有请求和所有响应都必须遵循公共协议或格式化其消息的方式。应用程序和服务器用各种不同的语言编写，没有中间人在没有中间人一起工作的巨大工作。统一界面是任何与任何REST API通信的客户端的通用语言。
没有标准化的通信，软件之间的翻译请求和响应将是一个完全杂乱。轻微的差异将导致信息困扰和丢失，并且应用程序必须在API更新时更新他们的请求流程。统一的界面消除了这种可能性。
对于大多数REST API，这种通用语言是HTTP或超文本传输​​协议。 HTTP没有专门为休息而创建。相反，休息采用此通信协议作为使用它的应用程序的标准。
要使用HTTP与REST API，客户端以特定格式发送可能看起来熟悉的请求。例如，对视频数据的YouTube API的请求如下所示：
阅读更多： - 为您的移动应用程序开发选择第三方API的10个提示
回答 5 大约6年前，我不知道JavaScript说话。我在几件jquery的事情中删去了一些东西，但真的没有什么可说的。语法非常喜欢，所以我可以设法做一些事情。但我永远不会说我知道JavaScript。</description>
    </item>
    
    <item>
      <title>是否有可能在3个月内成为区块链开发商？如果是这样，那么怎么样？</title>
      <link>https://xiangqingw.github.io/posts/is-it-possible-to-become-a-blockchain-developer-in-3-months-if-so-then-how/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:30 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-it-possible-to-become-a-blockchain-developer-in-3-months-if-so-then-how/</guid>
      <description>是否有可能在3个月内成为区块链开发商？如果是这样，那么怎么样？ 回答 1 这是不可能的
回答 2 是否有可能在3个月内成为区块链开发商？如果是这样，那么怎么样？
如果你是初学者，你想要学习区块链。在可能对你吓人的一件事上发展是，学习B洛克修道会发动机可能已经花了太多了，你可能已经有其他事情要做，所以你想确保你可以管理你的时间。我将为您提供一些技巧，您可以更快地使整个学习过程方式。
因此，在区间的发展方面的先决条件是网络开发中的一些基本知识。因此，您应该能够使用HTML，CSS和JavaScript创建一些简单的网站。如果您不知道您需要花一些时间覆盖这一部分。因此，对于学习的初学者来说，一些基本的Web开发需要大约2-3个月。
下一个级别是学习区块链条和如果他们是真实的工作，例如，您可以阅读像掌握Andreas Antonopoulos掌握比特币的书籍。这可能会带你在两周和一个月之间。一旦你知道区块链，下一步就是了解稳定性的智能合同编程。这可能需要两个月，之后您需要学习，如何建立一个完整的分散应用程序，不仅具有区块链上的智能合同，而且在网站上的用户界面也是如此。这可能会带你又两个月。
成为区块链开发商需要多长时间？
因此，总计约8个月，但如果您已经知道网络开发，您可以删除三个月。这将是大约五个月。
现在让我们看到一些技巧，你可以更快地让学习过程。所以我提到了持续时间之前，我假设你每天一到三小时就在一到三个小时。我说这是因为如果你工作过时的时间太短，那么你就不会达到那个焦点。例如，吧，不要试图只是学习一小时，然后停止它太短。所以尽量至少2个小时，可能是三个小时的理想。
另一件非常重要的是你真的是一致的。所以如果你设置和学习尺度，那么你真的要坚持你的日程安排，不要开始学习很多日子，然后你不做几个星期，然后你回到它，因为你可以忘记你以前学到的很多事情。所以真的试图保持一致。
开始时它不会以现实的学习时间表开始雄心勃勃的开端，因为你变得更好，更一致，你可以逐步增加你每天的时间。更快地学习的另一个诀窍是专注于教程，真正帮助您构建实际项目，不仅仅是谈论理论。一般来说，大多数人通过做项目来学习最好，并且项目也为您提供了很多信心。
回答 3 但是，另一个课程，对于现在只是学习的人
如果您已经成为一个相当经验丰富的开发人员，这是可能的，而且您只缺少区块链。
例如，我们有一个课程，目标受众基本上是可以用任何语言编程的人（没有问题的人，他们不知道语言的语言），以及完成它似乎没有问题的人作为区块链开发人员寻找工作。 2-3个月是一个现实的时间框架来完成课程，如果你可以完全奉献它（意思，每天7-8小时）。
但是，对于刚才学习写软件的人来说，其他课程需要一年或两两次（取决于你是否重复一些模块）。只有你将从什么开始并在3个月内学习一切，即使你每天24小时不做任何东西，也是不可能的。
回答 4 BlockChain委员会提供的所有区块链认证均为大约6-8小时的持续时间，并作为自学培训完成。获得认证将帮助您深入了解区块链及其实施，并证明您的区块链技能和理解。
回答 5 学习编码并加入开发区块链项目的团队。我建议重新思考三个月的时间框架。在编码项目方面很重要，以确定可实现的目标。事实上，很多人都设定了聪明的目标。
S.具体
M.可衡量的
A.可实现的
R.现实主义
T.时间为基础
回答 6 这个答案是印度语境：
由于我在技术产业工作到过去10年，因此我对这个问题有准确的答案。
答：没有。它将带您大约10年多年的计算机编程练习成为一个国际可采用的块链开发人员[https://indianengineering industry.quora.com/how-to-become-an-employable-blockchain-developer-from-india]。
回答 7 简而言之，这是一个大约需要3到6个月才能成为一个区间的开发人员，具体取决于课程。
成为一个开发人员是许多人的梦想。开发者工作付出良好，有灵活的时间，并具有挑战性。获得区块链开发人员工作更令人兴奋。大多数人认为你必须成为一个合格的编码器，成为一个区间的开发人员。让我们来看看一些获得认证的步骤，并且成为区块链开发人员所需的资格。
如何开始
关于区块链技术的最重要的事情是它的工作原理。一旦你知道它是如何工作的，其余的将会更容易。最重要的是，当您自己学习时，您需要对该技术感到满意。
成为区块链开发人员的第一步是学习如何编程。如果您没有编程经验，请将应用程序的创建者视为封锁。这些应用程序易于使用，将为您教授编码的基础知识，并允许您使用区块链。
第二步是自学。有许多在线教程将允许您学习基础知识。您还可以阅读并观看在线教程，让您更完全了解SlockChain技术如何运作。
代码
一旦您掌握了基础知识，您就可以开始学习如何在JavaScript中代码。 JavaScript是用于在Ethereum BlockChain上编码的编程语言。除非您已经是JavaScript编码器，否则大多数编码资格和证书都要求您学习JavaScript。
什么资格？
编程语言资格，例如在线JavaScript课程，将使您成为区块链开发人员。
在哪所大学？
目前教授Ja​​vaScript的英国顶级大学之一是NTU。您可以通过他们的计算学院在线获得2年的编程学位。
它要多少钱？
作为在线学位，NTU不需要购买教科书或材料。程度的成本为1,898英镑。但是，区块链开发费是3,000英镑。
区块链课程包括
它是一个很好的开始，但如果你想继续前进，请查看像Codebay这样的市场。他们会教你所需的一切。
回答 8 良好地了解区块链架构 - 嘿，如果你认真地成为一个区间的开发人员，是时候熟悉加密毒素等词
嘿！在我们开始探索成为BlockChain开发人员所需的技术技能之前，让我们从基础知识开始，并了解它需要的东西。
首先，作为一个区块链开发人员始终是关于了解SlockChain系统如何工作，使用区块链技术开发智能合同和Web应用程序。现在我们对此进行了一个公平的想法，这里是成为一个城区开发者所需的前6名技术技能：
良好地了解区块链架构 - 嘿，如果你是认真的成为一个区块链开发人员，那是时候熟悉加密哈希函数，共识和分销机构技术等词。</description>
    </item>
    
    <item>
      <title>麦克斯基本上建立在Linux之上吗？</title>
      <link>https://xiangqingw.github.io/posts/is-macos-essentially-built-on-top-of-linux/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:30 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-macos-essentially-built-on-top-of-linux/</guid>
      <description>麦克斯基本上建立在Linux之上吗？ 回答 1 你
在开始，AT＆T创建了UNIX。然而，由于垄断法律，他们允许卖掉它。许多组织许可unix并制作了自己的变体;大多数是商业企业，但加州大学伯克利召开了一个名为BSD的非商业版。
与此同时，理查德斯特尔曼麻省理工学院提出了自由软件的意识形态 - 更常见于今天的开源 - 并启动了一个名为GNU的免费UNIX兼容的操作系统。大多数GNU项目都很顺利，但GNU HURD是核心内核组件，反复延迟。*
一个名叫Linus Torvalds的年轻程序员介入，开始自己的成功项目来创建一个名为Linux的内核。当与GNUS工具结合使用时，Linux提供了一个完整的操作系统，就像UNIX一样，但已经从头开始写并以这样的方式编写，使其将永远持续开放。
基本上，GNU和Linux是Unix的淘汰赛，如BSD - 非常高质量的淘汰赛，可以肯定，但仍然淘汰。所有UNIX变体 - 是否像Linux **这样的BSD或克隆（Linux **）的修改 - 彼此有很小的差异;在实践中，Linux不与任何其他UNIX变体不同。
但是，对于OS X来说，这不是故事的结尾。就像Linux采用的GNU工具一样，但扔掉它的内核，达尔文（UNIX的OS X的一部分）采用了BSDS工具，但抛出了内核。
所以，审查：</description>
    </item>
    
    <item>
      <title>GPU中的OC是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-is-oc-in-a-gpu/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:29 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-oc-in-a-gpu/</guid>
      <description>GPU中的OC是什么？ 回答 1 OC通常代表超频。增加流处理器的速度和/或RAM速度将使GPU更快地工作。它还利用过热GPU并缩短GPU的寿命的风险。严重的超频需要大型散热器或液体冷却设置，如汽车的散热器。
回答 2 OC的叠加。人们超频他们的GPU，CPU和其他PC组件，以使它们更快地运行，但它也会导致部分变得更热。
回答 3 NVIDIA赢得了GPU市场，成为了两个基本因素的一般计算领导者：
无晶圆虫设计
NVIDIA早期与TSMC合作，使他们能够避免建筑物的巨大成本，并运行自己的Fabs.Intel通过建造成本数十亿美元的领先航母（芯片工厂）的资本支出中向其他人推销了这一点。眩晕的时间。由于摩尔的法律，领先的边缘Fab必须在不到两年的时间内摊销。这是每天数百万美元，这就是他们在时钟奔跑的原因，24/7 / 365.Only Intel愿意在设计，建造和跑步，以非常冒险的方式度过这么大的收入，始终筹集了数十亿美元的需求。他们的大多数竞争对手认为他们是疯狂的，但他们原来是疯狂的像狐狸一样。这是不断支出数十亿和数十亿的侵略性的风险是导致他们的收入继续上升的原因，创造了一种反思的良性循环，这是计算历史的一部分。它是快速清楚的是，没有其他芯片公司拥有自己的设计可以与英特尔竞争，它据信他们在计算中实现了近乎永久的垄断。12年间TSMC和Fabless芯片设计公司的出现。没有人认为没有人认为没有人认为没有人认为没有人认为没有人认为没有人认为没有人认为没有人认为， IECompanies专注于制造制造其他设计设计的建设和运行领先的晶圆厂将能够与英特尔竞争。但结果是错误的 - 有足够的主要芯片客户，如Qualcomm，Nvidia，Marvell，Broadcom和Mediatek。带来巨大的收入，使台积电支持自己的流程制造研究，以跟上英特尔。手机革命显然在这方面发挥了重要作用。Intel完全错过了，认为摩尔定律和更快的CPU跑步机不受欢迎诺基亚的诺基亚的手机等小事也没有想到英特尔架构及其遗产的主导地位可以威胁。也可以改变它，另一种分离设计的IP许可模式也是如此.deep学习
它是深度学习和替代形式的计算的兴起，现在被认为是可怜的编程，改变了nvidia fortunes，并使他们成为一般来说的计算领导者，而不是一个（非常）位于利基中的成功领导者博彩市场。特别是计算机和个人电脑利润的乐团基础是，他们通过将最高利润的零件销售最高的利润，这是CPU。所有其他人被拒绝到商品化，如PC制造商这就是为什么CPU曾经是PC中最昂贵的筹码。这不是这种情况，因为顶级GPU是现在最好的PC中最昂贵的筹码。这是通过它来通过，为什么英特尔为什么允许为什么它发生了吗？他们成为自己成功的受害者，因为英特尔架构携带了大量的遗留行李。一般 - 普通的英特尔CPU必须处理诸如缓存，无序问题和执行之类的诸如诸如缓存之类的大量和大量的事物离子，分支预测和深管内等，更不用说辅助功能，例如片上图形。在专门用于实际计算的有效模具区域方面的这一成本很多。例如，一个超线程的四核英特尔CPU有4个核心，每个线程有两个线程，这意味着有8组执行单元，每个都能在理论上并行发出五个或更多指令。现实是顺序代码的实际执行效率小于1.5，意思是，在五个或更多中，只有一个更多的指令都是在平均并行执行每秒的每秒循环。对于多个核心优化，更改了这种情况，但这仍然是相当特异，而不是很常见。在STARK对比度，是一个领先的GPU有数以千计的浮点执行单元，优化了运行专用代码，具有大量的指令级并行性，其先知.SUCH代码仅是一家专门应用的省，如图形和游戏.deep l收入AI Revolution改变了这一切。重点不是代码，而是在数据上，而不是在数据上克服巨大的数量。
回答 4 因此，CPU和GPU之间的主要区别在于架构（如上所示）。 CPU专为各种工作负载而设计，并且对多个任务没有真正的“优化”。但是，GPU在牢记中设计有多任务化，并且通常支持一种类型的工作量：图形处理。
现在举起来，我听到了一些说法，那么为什么我的计算机可以同时管理[该程序]和[该程序]吗？任务经理说我的CPU正在做所有工作！
嗯，是的，这似乎确实是发生的事情，但告诉我一些事情。在任务管理器中，它对“线程”计数有什么看法？还是&amp;rsquo;核心&amp;rsquo;计数？ CPU现在倾向于有多个核心以帮助处理多线程工作负载。 Nintendo GameCube等旧游戏系统没有这样的功能，而是依赖于单一非常快速的核心。这就是出于这个原因，有些计算机遇到了运行ROM黑客的游戏游戏机（特别是90年代后期和早期千年的旧的机构）。
这是另一种放置的方法。 CPU可能有几个核心，但GPU将有更多！这是否意味着GPU更好？不必要。
GPU中的那些核心是一种完全不同的原因。因此，他们的工作完全不同。虽然CPU专注于快速完成完成事物，但GPU专注于获取所做的吨（无论是否需要一段时间）。这是游戏玩家在游戏中经历“滞后”的原因之一。如果GPU对其呈现的任务并不足够快，则会减速或获得波涛汹涌的问题。它会完成（如果游戏不会崩溃），但GPU可能需要一两两个来计算事物。
我相信其他人更知识渊博会继续解释，但我有点饿了。我会休息一会儿，然后回来看看是否有必要的解释。
回答 5 GPU有两种基本类型：集成和离散。集成的GPU根本不在自己的单独卡上播放，而是嵌入CPU嵌入。离散GPU是安装在其自己的电路板上的独特芯片，并且通常附接到PCI Express槽。
集成图形处理单元市场上的大多数GPU实际上是集成的图形。那么，什么是集成的图形以及它在您的计算机中如何工作？在其主板上具有完全集成的GPU的CPU允许更薄和更轻的系统，降低功耗和更低的系统成本。
英特尔®图形技术，包括英特尔®IRIS®Plus和英特尔®Iris®X
E.
图形，是集成图形技术的最前沿。使用英特尔®图形，用户可以在运行冷却器的系统中体验沉浸式图形，并提供长电池寿命。
离散图形处理UnitMany Computing应用程序可以使用集成的GPU运行。然而，对于具有广泛性能需求的更多资源密集型应用程序，可以更适合作业的离散GPU（有时称为专用显卡）。
这些GPU以额外的能耗和热创建的成本增加了处理能力。离散GPU通常需要专用冷却以获得最大性能。
今天的GPU比以往任何时候都更可编程，允许广泛的应用程序超出传统图形渲染。
您可以在⏬中看到集成的GPU图像和专用GPU图像⏬
回答 6 因此，为了衡量这一制造商的一些制造商提出了GPU的游戏线，以更好的冷却系统，有时甚至是额外的力量
超频GPU以提高性能时，您只能超频其核心时钟速度和内存时钟速度。
但是在超频时，GPU在达到应用程序100％的应用时，GPU在更多的负载中，因此消耗更多的电力并更快地加热，然后储存时钟卡（在超频时不断加载的卡片，而超频的卡片将比库存速度快一个由于高温损坏）。
因此，为了抵消这一制造商提出了GPU的GPU的游戏系列，这些制造商可以使用更好的冷却系统，有时甚至额外的电源连接器，以便在超频期间需要提供更多的电源。
但要注意，有些只是拍打一个游戏超级OC版本而不改善卡片来处理它，只需在工厂超频并就像它一样。
考虑到表现，在无数基准中可以在网上找到oc和股票卡之间的差异。像这个：
正如您所见，OC Edition直接从工厂携带几个％的性能提升股票版本，但在大多数情况下，OC小而微不足道，您可以轻松地支付较高的价格，您可以自己轻松OC。匹配OC版本。
对于超频，我建议您使用MSI Arerburner（第一张图片中的程序）。它包装了Rivatuner统计服务器，可用于追踪使用，时钟速度，温度，风扇使用以及许多其他东西，而不仅仅适用于您的GPU，而且为您的CPU和RAM存储器也可以使用。
另一个建议，如果你可以等待今年夏天的新线，现在不要购买。你会后悔你做到了。
如果您还有更多问题，请询问或请告诉我，如果您愿意。
-Meris T.
回答 7 每个GPU都有多个GPC（图形处理群集）。单个GPC包含栅格引擎，GPC包含光栅发动机，最多四个SMS（流式多处理器）也封装了所有关键图形处理单元。GPC可以被认为是自我包含的GPU，所有NVIDIA GPU从费米开始都有GPC。</description>
    </item>
    
    <item>
      <title>JSON对象和JSON字符串之间有什么区别？</title>
      <link>https://xiangqingw.github.io/posts/what-is-the-difference-between-a-json-object-and-a-json-string/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:29 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-the-difference-between-a-json-object-and-a-json-string/</guid>
      <description>JSON对象和JSON字符串之间有什么区别？ 回答 1 JSON对象：</description>
    </item>
    
    <item>
      <title>RAM与DDR3技术仍然值得在2022使用？</title>
      <link>https://xiangqingw.github.io/posts/is-ram-with-ddr3-technology-still-worth-using-in-2022/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:29 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-ram-with-ddr3-technology-still-worth-using-in-2022/</guid>
      <description>RAM与DDR3技术仍然值得在2022使用？ 回答 1 您的意思是值得使用的&amp;hellip;&amp;hellip;您是否使用DDR3插槽具有过时的设备，您必须使用它，或者您有一个较新的设备，您无法使用它。不是一个选择&amp;hellip;&amp;hellip;
回答 2 奇怪的问题。RAM仅在计算系统中有用。它自己是无用的：如果你有一个随机的模块，我会出售如果我能为它买任何钱。
我有一个10岁的计算机，DDR3我仍然用作我的主桌面。去年我添加了一些额外的RAM，所以RAM值得使用，除非我愿意垃圾我的电脑。但这可能是我最后一次触摸DDR3。
回答 3 这两种CPU都绝对可以在现代中间和低端系统中使用，但与DDR3合作的大多数其他CPU（例如，AMD
RAM技术并不是真正的问题，而是支持它的CPU。
DDR3 RAM可以使用。它与DDR4或DDR5不够有效，其带宽较低，但它也具有相对较低的延迟，更便宜（特别是与DDR5相比）。
问题是，没有许多好的CPU支持DDR3。关于最好的CPU，您可以获得支持DDR3是Xeon E5 2678 V3，如果您坚持正常的主流桌面处理器，则为I7-7700K。
这两种CPU都是在现代中间和低端系统中使用的绝对正常，但大多数与DDR3合作的CPU（例如AMD的FX系列CPU和A系列APU，以及基于比Haswell的架构的Antel CPU）真的很合适地在非常低端的PC外，也是非常低效的。
如果我现在正在建立一个新的低端PC，我肯定会考虑使用DDR3 - 不仅是DDR3非常便宜，古老的Xeon处理器和支持它的主板也非常便宜，而且它们可能是一个很好的方式AAA游戏或生产力的大量多线程性能。这些可以在aliexpress上用捆绑包购买。
此示例包括Xeon E5 2678 V3,64GB的DDR3和四通道主板（它提供正常双通道主板的存储器带宽，有效地否定DDR3的带宽缺点仅需340美元。 Xeon E5 2678V3与Ryzen 7 2700x，Ryzen 5 3600或I5-11400F迅速，所有这些都是不可能找到兼容的主板和64GB的RAM以获得相同的价格。
所以它仍然值得在2022年使用DDR3吗？我会说是的，但它真的取决于你有什么CPU（或正在考虑购买）。
回答 4 简而言之，没有。绝对不是，除非你有一个非常奇怪的主板。
DDR3 RAM与DDR4 RAM不同，与DDR4系统不兼容。事实上，RAM模块的制造商包括一个小凹口或键控狭缝，在RAM的每个模块中。这旨在防止您将错误的RAM放入RAM插槽中。这可能根本不起作用，或者可能会严重损坏您的硬件。
有一个例外：混合内存系统。这是一个内存系统，它使用两种RAM（是否桌面或SO-DIMM，或在这种情况下，不同的DDRX版本）在同一主板上。如果您所做的话，这可能是由于主板，也可能是在板上的DDR4 RAM（直接焊接，与RAM插槽分开），或者主板拉动更先进的IMAC G4机动。 （IMAC G4，AKA Sunflower Mac，在另一个插槽中使用了一些桌面RAM和另一个插槽中的SO-DIMM（我认为，这是旨在成为更可达的用户升级插槽。）在这种情况下，这是一种RAM将使用DDR4（可能是桌面模块），另一个将使用DDR3。
现在，我不确定这是可能的。即使存储总线也可以在一个主板中支持多种RAM，我并不完全肯定为什么它在第一个位置。
所以，总之，可能不是。
回答 5 移动DDR（也称为MDDR，低功耗DDR或LPDDR）是移动智能手机和平板电脑应用程序的双数据速率同步DRAM类型。
最重要的是，电源电压从2.5降至1.8 V.额外的节省来自温度补偿刷新（DRAM需要在低温下更少刷新），部分阵列自刷新，以及牺牲所有内存内容的深度掉电模式。此外，芯片较小，使用比其非移动等同物更少的板空间。三星和微米是这项技术的两个主要供应商，它用于平板电脑计算设备，如Apple iPad，三星Galaxy Tab和Motorola Droid X.
（通过维基百科移动DDR）
Double数据速率类型三个SDRAM（DDR3 SDRAM）是一种具有高带宽（双数据速率）接口的同步动态随机存取存储器（SDRAM），并自2007年以来一直在使用。它是DDR的更高速后的继承者DDR4同步动态随机存取存储器（SDRAM）芯片的DDR2和DDR2和前身。由于不同的信令电压，定时和其他因素，DDR3 SDRAM既不是前向，也不兼容任何早期类型的随机存取存储器（RAM）。
DDR3是DRAM接口规范。存储数据的实际DRAM阵列与早期类型类似，具有类似的性能。
DDR3 SDRAM在其直接前任DDR2 SDRAM的主要好处是它能够以两倍的速率转移数据（其内部存储器阵列速度的八倍），实现更高的带宽或峰值数据速率。每周两个循环信号的两个传输，64位宽的DDR3模块可以实现最多可达64倍的传输速率，每秒每秒inmegabytes的存储器时钟速度兆（MHz）。在每个内存模块的时间传输64位数据，DDR3 SDRAM给出了（存储器时钟速率）×4（用于总线时钟乘数）×2（用于数据速率）×64的传输速率（转移的比特数）/ 8 （位/字节数）。因此，随着80 MHz的存储器时钟频率，DDR3 SDRAM提供6400 MB / s的最大传输速率。</description>
    </item>
    
    <item>
      <title>为什么不设房子使用主控制计算机而不是几十个小物体，其中包含自己的计算机，即灯泡，百叶窗，冰箱，洗碗机，加热系统等？</title>
      <link>https://xiangqingw.github.io/posts/why-dont-houses-use-a-main-control-computer-instead-of-dozens-of-small-objects-with-their-own-computers-i-e-light-bulbs-blinds-refrigerators-dishwashers-heating-systems-etc/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:29 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-dont-houses-use-a-main-control-computer-instead-of-dozens-of-small-objects-with-their-own-computers-i-e-light-bulbs-blinds-refrigerators-dishwashers-heating-systems-etc/</guid>
      <description>为什么不设房子使用主控制计算机而不是几十个小物体，其中包含自己的计算机，即灯泡，百叶窗，冰箱，洗碗机，加热系统等？ 回答 1 这是一个很好的问题，因为它可以使用主要控制计算机很有意义。这基本上这几天是汽车所做的。驱动程序推动开关。信号进入计算机。电脑打开和关闭。它可以节省接线，增加可靠性，并提高折准性。因为需要较少的电线，并且大部分电线仅携带信号电压（不是驱动电机，加热器或其他任何）的信号电压（不是驱动电机，加热器或其他）的电压。汽车这样做是因为它全部内置于设计中。达到同一设计水平需要很长时间才能获得相同的设计。即使它确实开始发生，老房子也要围绕50年或更长时间。我的孙子们可以享受合理的家庭自动化。
回答 2 A2A：微控制器非常便宜。通过致力于致力于，制造商完全控制了他们销售的设备的功能，其负责支持的功能。只需管理某些控制器即可使用集中控制器进行通信。如果设备能够自己站立，那么让它这样做是更简单的。
回答 3 主要控制电脑必须非常快，并且有很多存储 - 不是我们能够廉价的东西直到最近。
作为较新的设备可用，完全非技术人员将继续更新计算机？您替换具有一顶帽子具有亮度控制的灯泡具有颜色控制，您需要新的驱动程序和新的应用程序软件。或者新灯泡有它需要的固件。
回答 4 主控制计算机成为可以关闭整个房屋的单点故障。
回答 5 出于某种原因，这是一个梦想（某些人）至少30年。作为一般静脉，我已经安装并拆除了许多系统所做的。虽然其他答案在这里谈到了技术限制，但对集中房屋的主要争论是它不太好。
我已经成为愚蠢的房子的一个大信徒，与它居住的居民一起释放。简单的系统应该保持简单，冰箱是一个可以置于遗嘱的一个可靠的物体。电视或连接的扬声器应该是相同的，集中式真空甚至更糟糕。通常，有线系统在安装时尽快过时。完全想象的电气和通信安装是所需的。
家庭改变并长大，人们进出，或改变他们的习惯或偏好。我们应该使用技术来促进我们的生活，使生活更顺畅，更容易;集中命令只会使事情变得更加复杂。当然，这是可能的。大型安装，如机场，是由中央计算机的全部微型微型，它就像一个魅力，但屏幕后面有一个人，不断更新和检查。对于我的部分，我不希望成为我家里的那个人。我不想和我的锅炉和防晒霜聊天，所以这些物品越自主体，我觉得越好。
回答 6 这就是它在旧科幻中所做的方式。有一个中央大脑控制了一切。当时的作家可能知道计算机对于每个人来说都太贵了，但在未来思考，电脑将便宜。所以每个人都可以拥有一个，所以它可以跑房子。他们没有意识到他们每一个烤面包机都会如此便宜，或者没有意识到在资本主义自由市场经济中，那里有数千个竞争的不兼容品牌的设备。他们可能对真正的计算机或电子产品有多了解，至于您如何实际使计算机打开窗帘。
在现实生活中，它几乎拍摄了一台电脑（无论如何）进行设备可控的设备，以便您可以将其连接到主计算机并处理通信。因此，如果您想要一个语音控制的洗碗机，您可以在躺在海滩上从手机中控制，您没有大型电脑，加热元件，水泵，搅拌器，门锁等，您有一个本地计算机来处理所有的计算机，然后处理到主计算机的WiFi或以太网连接，或者到云的网络接口，然后说Alexa，打开洗碗机。假设洗碗机制造商建立了一台Alexa兼容的机器。
回答 7 微控制器比控制一切的超级CPU更便宜。
回答 8 所有的PE
您可以通过传感器和控制器来控制要控制的所有设备和其他设备。它被称为“福科茨”，并没有真正抓住。古代X10系统使用家用接线连接网络设备，并耐用可靠。自70年代末以来，我的长期客户一直在使用它们不间断。一旦有货运和Atari家庭电脑用串口插入X10，很容易做到，极客一直在用中央计算机控制他们的家园。
除了我所知道的所有人中，除了我之外还有X10控制的设备。他们猜&amp;hellip;&amp;hellip;他们猜&amp;hellip;&amp;hellip;
如果是一个好主意，人们就会在他们的Gizmos上做更多的WiFi，蓝牙和有线以太网接口，并乞求家庭自动化应用程序的软件房屋，我们知道哪些是最好的。
正如现在，有几十个家庭自动化应用程序，他们还无法获得任何或大量的市场渗透。
这些都弹出谷歌搜索&amp;rsquo;家庭自动化应用程序&#39;。欢迎您来检查出来，看看最先进：
最好的智能家庭应用程序
10个智能家庭应用程序在2021年在2021年使您的生活更轻松 - 更新
电器的微控制器只花费一两美元，并试图使他们朝着标准工作可能会推动成本。而且，试图控制来自“中央计算机”的一切将使中央失败点。
已插入网络的任何东西都将成为许多家庭中的“非托管资产”，特别是如果它是无线的，将成为攻击家庭系统的另一个载体。我不希望我的恒温器，冰箱，范围，微波，发电机，热水器，以及网络上的房子里的每一个自由式的东西，宁愿自己拥有它们。我喜欢在x10上有灯光，有些运动传感器，但不想要其他&amp;rsquo;集中&#39;&amp;hellip;
回答 9 这个问题有三个答案，在一起，使这是一个可怕的想法。
回答 10 看看Control4.com。基本上就是它。 Control4确实亮起，加热，AV，门入口，CCTV，洒水喷头等。指定和设计时的技巧是尽量不具有单点故障。我经常安装热线机。这是工作独立的，而且还与Control4合作。因此，如果Control4处理器失败，系统仍然可以使用热敏手应用程序。如果热敏器处理器失败，则每个恒温器将独立工作。
Control4远程替换了遥控器（电视，Apple TV，SAT Box，AV接收器，DVD）。如果这是失败的，你只需把其他人拿出橱柜。对于灯光，我使用Rako或Lutron。再次，这些有或没有控制的工作。当我离开房子时，我设置了警报。这也消除了所有的灯，关闭了任何电视，音乐，并将恒温器丢弃10度。所以它确实改善了事情，但没有真正的单点失败（除了电力之外！）。
回答 11 这可以完成，但是，在一般房主和租房者不愿意徒步票据需要，也不是他们感兴趣的事情！
回答 12 单点故障 - 当主计算机失败时;所有对象都是依赖的。
单点故障，也称为SPOF，是系统的任何组件，如果失败，则导致整个系统停止工作。&amp;hellip;例如，计算机可以实现RAID存储，以便如果单个磁盘发生故障，系统可以继续操作。在更大的范围内，网站可以复制应用程序服务器。
回答 13 问题不一定为什么
让我们从中央计算机开始。
正是与其他，同样的智能电脑谈论它是什么意思？缺乏任何计算能力的洗碗机可以以某种方式从中央计算机获取订单的想法无意义。
就此而言，今天没有任何内容能够阻止中央计算机能够与对象通信，这些物体本身包含除了两个设备不能共享相同的通信协议和能力之外的计算机之外的计算机的一部分。分享资讯。
问题不一定是为什么没有中央计算机，而是为什么这些设备缺乏与中央计算机通信所需的通信能力？
在事实上，他们中的许多人和“中央计算机”与包括在智能手机上运行的应用程序进行通信。乳清他们无法与PC通信是另一个问题吗？缺乏应用程序？ Windows 11据称将允许智能手机应用程序运行它，因此可能不会长，直到家居设备可以与中央计算机交谈而不是智能手机。不会那么好。</description>
    </item>
    
    <item>
      <title>在计算机科学中的&lt;/&gt;均值是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-does-mean-in-computer-science/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:29 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-does-mean-in-computer-science/</guid>
      <description>在计算机科学中的&amp;lt;/&amp;gt;均值是什么？ 回答 1 我在任何编程语言中都没有使用此标志&amp;lt;/&amp;gt;。但这个特殊的标志在Web开发中非常重要。如果您实际尝试过Web开发，那么您可能会意识到此标志。
如果您想使用任何标记语言，例如HTML或XML，这个符号非常重要，并且在这些语言的基础上。
这些语言是基于标记的语言，并且要调用您需要使用此&amp;lt;&amp;gt;符号之间的标记名称来定义它的任何标记。用于在HTML中调用任何标记，例如，，，和等。并且以相同的方式完成我们必须使用符号使用关闭标签的标签&amp;lt;/ &amp;gt;例如&amp;lt;/ html&amp;gt;，&amp;lt;/ body&amp;gt;，&amp;lt;/ p&amp;gt;，&amp;lt;/ h1&amp;gt;和&amp;lt;/ head&amp;gt;等。
图片： - 来自我的投资组合网站的示例HTML程序。
几乎所有标记都需要结束标签，但有一些标签不需要任何闭合标记，并且这些标签通常被称为空标记。
例如 - ，标签是HTML中使用的空标记。
因此，基本上此符号&amp;lt;/&amp;gt;用于关闭代码中的任何正在进行的标记。
P.S.-许多人不要将HTML或XML视为任何编程语言，但我认为您应该学习它可能是什么，它基本上在Web开发中很容易而非常有用。
回答 2 这与计算机科学有效地与计算机科学有关。
它只是可扩展标记语言（XML）Closing Tag.xml的结构是一种基于标记的格式，而HTML，用于显示网页，是XML的衍生品。
标签用于分隔一段信息并给予您想要的含义，或者在HTML中，标签意味着的含义（有有限数量的预定标记 - 但您可以创建一个，但您可以创建一个，而无需进入详细信息） 。
HTML示例：</description>
    </item>
    
    <item>
      <title>如果没有需要编程，它是否有可能找到一份计算机工程师的工作？</title>
      <link>https://xiangqingw.github.io/posts/is-it-possible-find-a-good-job-as-a-computer-engineer-without-the-need-to-program/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:29 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-it-possible-find-a-good-job-as-a-computer-engineer-without-the-need-to-program/</guid>
      <description>如果没有需要编程，它是否有可能找到一份计算机工程师的工作？ 回答 1 电脑工程师是一个很广泛的术语，你看到自己为这家公司做什么？升级RAM，修复打印机等？当然，你可以在没有编程的情况下做到这一点。
回答 2 是的。计算机工程不一定是关于设计，开发或编程。需要连接连接解决方​​案或连接问题的公司（更先进的问题，它处理接线以太网）需要计算机工程师。可以弄清楚为什么设备未连接或通信的人，它们之间的协议是什么或者硬件或软件存在问题。任务可能包括现场接线和设备配置。 CE可以通过它来重叠的任务，但通常它的性质通常是它的IT个人设置OS和网络的电力。
回答 3 详细解释公司将如何从雇用您获益。
每天到日期，您将如何为公司提供价值？
告诉我们一台电脑工程师每天8小时，每周5天，每年50周，每年5天？
回答 4 在不了解代码的情况下，真的很难设计任何类型的计算机芯片。特别是硬件描述语言（HDL），如Verilog或VHDL。上次我检查了其中任何一个都是非常代码的。
在无需计划的情况下，在软件或计算机工程中工作很难。事实上，我要去说，可以打电话给自己这些事情中的任何一个，不能写代码。
回答 5 有许多
看这个链接¶
https://youtu.be/xd9it1i9irc
希望我的写作帮助您，请覆盖和评论。
回答 6 *用户体验设计师 - 用户体验设计人员（UX）创建具有最终用户的产品。他们的主要目标是提高用户满意度。*用户界面设计器 - 这类似于UX，但用户界面设计（UI）更加强调界面的设计。UI设计人员建立了软件界面的外观和感受。
*软件质量测试仪 - 软件质量测试仪（SQTS）在公开发布前测试软件产品的质量，以确保它们&amp;hellip;
回答 7 计算机科学与计算机工程/软件工程之间的差异就像比较苹果和橘子。
科学是对理解我们的现实的物理和自然现象的研究和观察。通过科学假设，我们制定科学知识。另一方面，工程是科学知识的应用，以提高我们的现实。
假设，计算机科学是Apple和计算机工程/软件启动器是橙色。逻辑上讲，计算机科学和计算机工程/软件工程在“计算机”的区域内本质上可关联，就像苹果和橘子属于相同的集合或名为“果实”的组。
两者都属于相同的领域和相同的软件工程保持。人们经常混淆所有三个领域。实际上，计算机科学是群体中最具理论的。
计算机工程涉及计算机和电子产品中硬件和软件的集成。另一方面，软件工程涉及软件的开发，开发和维护。
计算机科学两种工程领域都存在共同的交叉点。实际不同的是计算机科学消除了对硬件的过度担忧，对编码不太感兴趣。计算机科学家应对一系列紧密对齐数学家的研究兴趣（通过计算）。计算机科学是苹果。它涉及了解计算理论，人工智能的行为，人工智能，密码学/加密货币，算法，机器学习以及大量的酷炫的东西，与上层数学（超越微积分 - 我不会破坏您可以研究这）。
计算机科学的范围比信息技术（IT）和软件开发更进一步。一旦您获得编程语言采集的感觉，学士学位在计算机科学中的相关性就会逐渐消失，这是软件工程最重要的技能。事实上，计算机科学最多主要教授三到四到四种编程语言。那里有一整个编程语言。祝你好运。
回答 8 短暂的答案是肯定的。我有一个B.S.在机械工程中，并在洛克希德降落了软件工程师工作。但它的声音并不容易。这就是我的方式：
我已经在Java，C＃和Android应用程序开发方面学习了一些东西。
我当时正在驾驶卡车，所以在我的空闲时间在路上，我读了关于如何成功的书籍。我大多出来的书就是得到一个导师。
我姐姐的妈妈有一个堂兄，在洛克希德工作，他在公司拥有一个管理职位（记住这一点，重要的是）。
我让他把我带到他的翅膀下
短暂的答案是肯定的。我有一个B.S.在机械工程中，并在洛克希德降落了软件工程师工作。但它的声音并不容易。这就是我的方式：
我已经在Java，C＃和Android应用程序开发方面学习了一些东西。
我当时正在驾驶卡车，所以在我的空闲时间在路上，我读了关于如何成功的书籍。我大多出来的书就是得到一个导师。
我姐姐的妈妈有一个堂兄，在洛克希德工作，他在公司拥有一个管理职位（记住这一点，重要的是）。
我让他把我带到他的翅膀下，倾听他的建议。三个月过去了，他与他的一位同事接触，他有一个启动。我已经在Java中制作了一个蛇游戏，并在这一点上发布了一个简单的Android应用程序到Google Play商店（所以我很认真）。
他的同事让我写一个教学手册我如何制作那个蛇游戏。我用漂亮的图形和片段写了它，他喜欢它。他雇用了6个月的实习（需要经验，以渗透编程世界）。
在这个实习期间，我听了，工作并给出了我的导师的同事。我完成了我不知道的东西，如RESTful API，开发网站，Photoshop并使用Gi​​t for Bitbucket。目的是我学习了软件开发周期的过程以及它如何与业务有关。
经过六个月，实习结束，我的导师告诉我他公司的一份工作。他告诉我，在作业描述中使用关键字编辑我的简历。我这样做了，让他审查它。我提交，筛选人力资源在2天内给我打电话给我。
人力资源们说我有电话采访。我告诉我的导师，我的导师开始与经理谈论，希望招聘这个职位（软件工程师）。他正在提出问题，就像经理在候选人中寻找的是什么样的。
他把信息传给了我，然后我有手机面试。当我说我完全了解了该说法的时候，我在这次采访中确切地说。 10个最佳采访中的10个。
五天过去了，我收到了一个电话。我说，你好，这是我。他们说，洛克希德愿意延长一个要约的方式。这对你的声音是如何对你的声音？我说，这将是。挂在厕所里。
其余的是历史。
回答 9 说明</description>
    </item>
    
    <item>
      <title>软件开发人员或软件开发团队实践与生产代码中的软件错误（错误）相关联？</title>
      <link>https://xiangqingw.github.io/posts/what-software-developer-or-software-development-team-practices-correlate-with-fewer-software-errors-bugs-in-production-code/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:29 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-software-developer-or-software-development-team-practices-correlate-with-fewer-software-errors-bugs-in-production-code/</guid>
      <description>软件开发人员或软件开发团队实践与生产代码中的软件错误（错误）相关联？ 回答 1 招聘。
关于Bug免费代码开发人员您将雇用哪种热情 - 与Prod中较少的软件错误相关联。
当我在2004年加入MSFT时，在7天内
向我们发送（Microsoft）关于质量的备忘录 - 一个关于质量的30个幻灯片。
它是关于
VM。
这个论点是 - 如何在地球上写一个完全达到40个人的整个允许的操作系统 - 它发布了0个已知的错误和美国国家航空航天局用于将卫星发送到空间？
它被释放为0个测试人员。测试团队H.
招聘。
关于Bug免费代码开发人员您将雇用哪种热情 - 与Prod中较少的软件错误相关联。
当我在2004年加入MSFT时，在7天内
向我们发送（Microsoft）关于质量的备忘录 - 一个关于质量的30个幻灯片。
它是关于
VM。
这个论点是 - 如何在地球上写一个完全达到40个人的整个允许的操作系统 - 它发布了0个已知的错误和美国国家航空航天局用于将卫星发送到空间？
它被释放为0个测试人员。测试团队有0个尺寸。
答案 - wa wa不朽的词是自我。一旦开发人员开始就他们的自我接受他/她的代码中的错误是自然的灾难，并且不允许 - 质量在内部流动。
因此，论证只是一种练习，有助于发货伟大的产品。找到合适的，能够和热情的人关于质量。
这正是它正在招聘。
我几乎肯定有100000人来自咨询背景将跳过这个答案 - 并争辩为什么我应该允许生活 - 但事实仍然存在。
质量永远无法确保 - 它甚至没有与任何可以创造的过程相关。任何声称展示的人甚至都没有理解非线性。
在我在过去的12年里，我采访时的1000+接受采访 - 我可以古丽的人你有不到5％的人表明纠正错误的激情 - 并超越超越。
这种激情推动了一切。
流程不会驱使人们。
人们遵循进程，当时它直接受益时，会引发遵循。
阅读更多：
因此，我休息了我的案子。招聘它是。
回答 2 这里有一些：
*测试驱动的开发（TDD）。我们不会因采用它而运送单位级逻辑缺陷。*行为驱动的开发，AKA规范按示例。不，这并不意味着使用黄瓜;它意味着构建一个过程，其中通过示例的前面，商定的，共同拥有的规范的定义来源。*暴徒编程。随着团队中的所有代码的所有眼睛，一次一件事，缺陷更浅。你也会得到&amp;hellip;
回答 3 您无法依赖于软件工程师的商誉，相反，您需要添加机制和流程，以确保运送到生产的代码是标准和质量。
你可以做的一些事情：
回答 4 练习</description>
    </item>
    
    <item>
      <title>零有史以来是否成为一个数字？</title>
      <link>https://xiangqingw.github.io/posts/does-zero-ever-become-a-number/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:29 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/does-zero-ever-become-a-number/</guid>
      <description>零有史以来是否成为一个数字？ 回答 1 零是一个数字。永远都是。永远会是。永恒。
人类总是称之为吗？少某些，但不是非常相关。我们使用的是什么单词以及这些词语随着时间的变化而发生了变化，但这与我们目前的意味着零和数字几乎没有。这些目前的意义是我在第一段中使用的。
回答 2 这取决于您定义的数字。数字是用于描述几组值之一的常规术语。某些引用呼叫数或自然数的一组正整数{1,2,3，&amp;hellip;}不包括零。但是，我们认为数字的大多数集合都包括零，包括整数集，RATITE号，代数，实数，复数等。一些数字不包括排除零。例如，非理性数定义为所有不是合理数字的实数。由于零是一个有理数，因此定义不是不合理的数字。
在大约五年或六世纪之前，数学家并没有想到零作为一个数字，而是一个概念（思考没有绵羊），没有象征。但这并不意味着它不是一个数字，这只是意味着在那个时候我们没有以这种方式使用它。就像在17世纪以前一样，科学家们今天没有想到元素。这并不意味着，说，磷并不存在，这只是人类不了解它们（元素）也不了解它们。零作为一个数字/数字在中世纪晚期的欧洲没有共同用过，尽管世界各地的其他文明一直在使用它几个世纪。
回答 3 这个问题，为什么任何数字升级到零的电量等于一个，但零升高到零的力量给出没有答案？是self-contradictory.it断言任何数字（不陈述构成一个数字）向指数提出1没有任何例外（例如通过除___之外的任何数字等文件的文本），然后继续断言0‖没有答案。由于0是数字，因此第一个断言方式0‖= 1，而第二个断言说0⁰未定义 - 我们不能拥有真实。事实上，第一个断言应该被视为无条件的真实，第二个断言为假;因此，0⁰= 1.调用0⁰的常规参数被视为未定义的：
处理最常见的参数，用于证明0⁰是未定义的，所以现在提出了一个问题，即如果应该定义任何值，如果任何值应该定义为？基本参数涉及应用于乘法的零操作原理。没有因素的产品必须被视为乘法身份1;符号，Π0i= 1xi =1πi= 10xi = 1。（用于计算x⁰，xi = xxi = x;用于计算0！，xi = i0！，xi = i。）此属性不依赖于是否所有候选人xixi是非零，或者有些是非零，有些是0，或者所有人都没有例外情况。如果没有任何例外情况，我们有0！= 1，我们有x∈= 0而没有限制所有四边形（不仅仅是所有的数量，不仅仅是所有复数），所以0⁰= 1.其他关键标准是有用的..对于他们的研究是有用的，其他关键标准是有用的。如果一个定义没有用，则没有指向它，所以0⁰= 1实际上很有用，除了空产品规则的观点外吗？答案是一个响亮的肯定。exex的电源系列：ex =Σ∞i= 0xii！ex =Σi=0∞xii！.mathematicians已证明这一点此电源系列为所有复数x收敛，结果确实是exex.since 0是一个复杂的数字，这个功率系列适用于所有复数，它必须为x = 0llet的首次展开求和：Ex = x 00！+ X11！+ X22！+ &amp;hellip; EX = X00！+ X11！+ X22！+ &amp;hellip;&amp;hellip;，x = 0发生了什么？我们有：e0 = 000！+011！+022！+ 022！+ &amp;hellip; .e0 = 000！+011！+022！+ &amp;hellip;&amp;hellip;我们知道0升到正指数的0，它适用于除=右侧的第一个之外的所有术语。所有这些条款都没有做出它们可以消失。我们还知道升级到0的指数的任何非零复数号等于1，而e是一个非零复数，所以e0 = 1e0 = 1.因此，我们现在有： 1 = 000！1 = 000！.</description>
    </item>
    
    <item>
      <title>为什么块哈希必须验证很多零点才能验证吗？那些零意味着什么？</title>
      <link>https://xiangqingw.github.io/posts/why-does-the-block-hash-have-to-be-started-with-lots-of-zero-to-be-verified-what-does-those-zero-mean/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:28 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-does-the-block-hash-have-to-be-started-with-lots-of-zero-to-be-verified-what-does-those-zero-mean/</guid>
      <description>为什么块哈希必须验证很多零点才能验证吗？那些零意味着什么？ 回答 1 我假设你在谈论比特币。
您可以将256位散列作为数字解释。通过要求下一个块具有低于一定值的散列来调整当前难度。较小的数字在其前导数字中有更多的零。
所以，例如，如果我说将我的名字命名为1000，然后将其表示为32位整数，它将有很多初始零。就是这样，他们并不意味着什么比这更重要。
如果您尝试发出一个不会遵守所有规则的块（包括查找与当前难度不一致的散列），那么另一个节点将拒绝它。
回答 2 散列用于创建文档或其他数据块的代表性摘要，该块是固定大小的，并且如果在原始数据中更改了任何位或比特的组合，则会更改（急剧！）。这用于（例如示例）用于在网络上发送数据包的校验和，以确保它们以其剩余的相同内容到达。
一个加密保护的哈希标志着，第三方希望恶意改变数据，以这样的方式仍然是相同的;这很重要，因为加密签名基本上是用公钥加密加密的哈希，所以如果您可以保留哈希，则可以声称您在发起者或公平的证人签署了一份文件，当实际上是一个不同的文件一个签名。
对哈希的攻击的严重程度取决于您如何强迫碰撞。最严重的是您可以创建一个您希望匹配的哈希的任意文档。第二个最严重的是您可以生成两个将提供相同哈希的文档，但无法提前确定哈希将是什么（即，您必须并行改变两个文件以实现这一目标）
在后一种情况下，您必须说服受害者签署其中一个文件，而无需以任何方式更改它，因此您可以申请第二个文件是实际签名的文件。
回答 3 哈希基本上是一种单向功能，在其中输入可变长度的输入并获得固定长度的唯一输出。并且随机数基本上意味着一次使用的数字，现在在比特币区块链中是一个值，它是您在块前面添加的值，以匹配比特币中的当前难度是块的哈希散列开始时的一定数量的零。所以你收集你的数据并获得一个固定的哈希现在，您必须添加一个annce值，直到您等于或更接近难度级别。
在Ethereum中，Nonce是从给定地址发送的事务数。随着该地址的交易数量增加，与地址相关的随机值增加。
回答 4 作为领先的零的难度是一种错误的过度过度简化，对难度如何工作，我在这里的其他答案中解释了这一点。
但是，是的，如果一个块超出难度要求，它被接受。困难只是所需的最低质量。
回答 5 什么是区块链散列？
哈希是由散列算法产生的数据的独特指纹。就像每个人都有一个独特的指纹一样，每一条数据都有自己独特的哈希。
当事务被提交到区块链时，使用散列算法散列。然后使用得到的散列来验证交易是否有效。如果哈希不符合BlockChain协议指定的标准，则交易将被拒绝。
哈希以一定数量的零点开始的要求被称为零字节规则。大多数区块链要求哈希以一定数量的零点开始，以确保它们有效。但是，这并不总是如此，并且取决于散列算法和正在散列的数据。随着区块链技术的发展，我们可以期望看到有效哈希所需的前导零数量的变化。
这是一个常见的误解，碉堡哈希需要从17个零点开始。这源于在使用SHA-256哈希函数的比特币中，有效事务将使其Merkle Root算法逐出到低于或等于当前目标阈值的值。这意味着，这意味着平均一半的尝试必须成功，并且在此过程中，它们将产生大约34个零字节的字符串。
散列的最大可能数量为80，因此在参考目标哈希的开头时，它将描述为需要18个零点的比特币协议规则。实际上，在验证时，领先的17很重要，最后一个是序列的简单延续。
实际上，在那个零中开始一个区块链条是不必要的，这取决于实现的需要程度。散列中所需的零点越多，任何给定交易的哈希成本就越大。如果有5个Zeroes而不是17，那么所有尝试都会失败，这意味着只需尝试一半的哈希，而且反过来将需要两倍，只需计算两倍，每次尝试都需要散列硬件的四倍由于每次尝试都会产生两倍的碰撞（或“非唯一”结果）。
比特币网络自动调整其目标阈值，以确保每10分钟大约挖掘新块。它以17 zeroes开头的原因是，因为这种值会在每4年结合挖掘奖励的减半时导致正确的平均块时间。如果哈希所需的零数是改变，则目标阈值也会如此，因此平均块时间也会发生变化。
为了使事情保持一致，即使可以改变底层算法，哈希开始时的零点的数量需要保持静止。这就是为什么以非散列算法（SHA-3）而不是比特币的为什么，仍然需要它的哈希以20个零点开始。其他算法可能需要不同数量的前导零，以便产生具有特定数量的零字节的散列。
BlockChain哈希以一定数量的零点开始的要求不仅仅是散列算法的函数，还不仅仅是散列数据的函数。使用多个散列算法可以进一步复杂化东西，因为每个算法可能具有对前导零的自己的要求。例如，Etereum使用的Keccak算法要求哈希以至少6个零开始。
因此，虽然大多数区块链确实需要哈希以一定数量的零点开始，但情况并非总是如此。这取决于散列算法和正在散列的数据。随着区块链技术的发展，我们可以期望看到有效哈希所需的零数量的变化。
回答 6 它的东西往往会混淆程序员。
它不是一个像存储器地址中的指针，这是编码器的指针意味着什么。相反，它是数据结构的关键。
更简单：哈希指针是链中每个块的一部分。它包含上一个块的哈希。您可以称之为数据字段，其有帮助。
哈希指针确保不再更改来自上一个块的数据。更改上一个块中的数据将改变该块的哈希值，从而使当前块的散列指针无效。
这就是你如何判断有人试图何时何
它的东西往往会混淆程序员。
它不是一个像存储器地址中的指针，这是编码器的指针意味着什么。相反，它是数据结构的关键。
更简单：哈希指针是链中每个块的一部分。它包含上一个块的哈希。您可以称之为数据字段，其有帮助。
哈希指针确保不再更改来自上一个块的数据。更改上一个块中的数据将改变该块的哈希值，从而使当前块的散列指针无效。
这就是你如何判断有人试图操纵数据（重写历史记录）。这种机制使块状不变。
回答 7 限制参数：0 ^ 0的限制参数都不是valivarguments。在点PIS处采用函数F的限制的唯一时间是在P处连续时计算f（p）的有效方法。 functionf（x，y）= x ^ y在p点p =（0,0）中不连续.thus，限制参数没有0 ^ 0的轴承，这是来自这些论点的一个取消的唯一一个，就是作者忽略或不了解限制与连续性之间的关系。
对于那些认为限制争论的人是建立牵引的唯一方法，请记住，在19世纪起源之前，在这些局限性起来之前已经是1的0 ^ 0。有许多有效的方法（无限制）以确定0 ^ 0的值。在最简单的形式写入时，该值直接从定义中。它可以通过坚持符合符合符合的一致性来导出，或者可以源自广泛接受的数学定理，例如二项式定理等。人们经历不必要的麻烦以避免定义0 ^ 0。例如，递归定义从x ^ 1 = x而不是从x ^ 0开始的唯一原因= 1是毫无根据的恐惧。同样，唯一的原因给出递归定义（而不是更短的： x ^ n是x的n拷贝的乘积，再次努力避免0 ^ 0。最终，这些努力是徒劳的，因为仍然有许多定理通过裂缝，即，仍然意味着0 ^ 0 = 1。当然，这种感知的问题不是一个实际问题，因为数学是非常一致的，这意味着每个暗示0 ^ 0的值的每个定理和每个一致的参数将始终意味着相同的值。</description>
    </item>
    
    <item>
      <title>什么品质使得一个好的编码器？</title>
      <link>https://xiangqingw.github.io/posts/what-qualities-make-a-good-coder/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:28 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-qualities-make-a-good-coder/</guid>
      <description>什么品质使得一个好的编码器？ 回答 1 打电话给自己一个伟大的程序员听到了自命不凡，所以我会忽略那个一点并解释为什么我是一个非常好的程序员以及我如何发展我的技能。
这一切都归结为一个简单的想法。
我喜欢创造软件。这对我来说很有趣。
这为我提供了对其他程序员的巨大优势。我正在编写代码和创建软件作为孩子，因为这是我想做的。
所以，我会坐下来脱离好奇心的软件，或者只是因为我想要它存在。即使我没有得到报酬。如果我很高兴建立它，我会。
这是我实际写的关键部分
打电话给自己一个伟大的程序员听到了自命不凡，所以我会忽略那个一点并解释为什么我是一个非常好的程序员以及我如何发展我的技能。
这一切都归结为一个简单的想法。
我喜欢创造软件。这对我来说很有趣。
这为我提供了对其他程序员的巨大优势。我正在编写代码和创建软件作为孩子，因为这是我想做的。
所以，我会坐下来脱离好奇心的软件，或者只是因为我想要它存在。即使我没有得到报酬。如果我很高兴建立它，我会。
这一关键部分也是我实际上写下我想要构建的软件。有一天不仅仅是一个有趣的想法，有一天会很酷。我把头的想法变成了软件。
这有很大的不同。我不只是阅读代码，我写它。我不梦想软件，我做到了。
我相信上一对几十年来，软件的乐趣让我足以练习我的工艺。
如果有什么让我成为一个伟大的程序员，就是这样。
 武器
P.S.我也在其他地方写下代码&amp;hellip;&amp;hellip;  回答 2 我是一个可怕的程序员。我认为今天的一天和年龄的更多程序员也不太了解。原因很简单：技术永远不会一致;它总是改变。
我花了几个月的学习Verilog，只是为了弄清楚直接与装配，字节代码和C一起工作，并且C是更高的级别，摘要避免了艰难的指令到执行代码。核心不是你今天编程的，除非你对时机和优化非常精确。
Web开发人员也是如此。您可能会理解HTML和CSS，但是当React出来时，您完全迷失了，并使大页清洁，优雅的代码。并且机会是，反应代码为10，可能比没有库的溢出的SQL实现效率100倍。
机器学习工程师也是如此。您可以理解CV2，但可能需要更快的实现，即您不知道其许多算法（例如特征提取或角落检测）。
这在密码学和区块链中也非常明显。可能在此之前可能从未读过的文件可以为大部分计算分配天然气费用。
你可能不同意我。但Vlad，我不学习基本面，我学习最新的编程语言，并使用优化的库保持最新。不，你真的没有。新的研究论文每天都在优化代码上公布，您仍然陷入困境和Python2中的循环和断言。
我是非常苛刻的，所以这是好消息：
也许在未来，我们将全部成为伟大的程序员。我们将达到一种抽象级别，其中编码任何简化语言都是不可能的。
但直到那时，让我们全都利用我们今天的基本知识来改善明天的系统。
-vlad.
回答 3 1.能够总结问题陈述，并决定您需要做什么。能够在我们的头脑中可视化系统设计。编写清洁代码并使用良好的铭文进行变量。这对于大型项目来说非常非常重要，因为代码大小开始变得无法管理，这些是唯一会救援的东西。此外，如果您在一个月后无法识别您自己的代码，您认为其他人如何做同样并帮助您（如果您需要一些）.4。能够调试自己的代码（涉及改变我永远不会出错的Mindset，或者我在繁琐的思想过程后写了这一点，不能错过）。根据任何其他人类活动进行编程的实现可以在任何阶段出现问题，从解释要设计将解决方案转换为代码的解决方案的问题陈述是必需的。能够与截止日期合作（如果您渴望成为一个成功的专业程序员，我必须致命。我对此非常糟糕，希望能够改进）.6。非常好，至少一种语言，即能够用您选择的语言翻译解决方案。如果您对一种语言良好，您可以随时将解决方案转换为您选择的语言，然后对所需语言进行相同的方式将不会花时间。渴望学习，找不到和relearn。这些是我现在可以想到的一些事情，就像我想出更多的时候就会继续增加它。
回答 4 免责声明：任何觉得敦促或需要的人来宣传自己是一个伟大的程序员，不是一个伟大的程序员。我是一位富有成效而有效的工匠，与熟练工电工或理发师一样，可以在繁忙的星期六提供几十人良好的理发。
以下是我寻求继续体现的品质：
回答 5 简而言之：当我被要求在你之后的代码上工作时，我可以。当我们谈话时，它正在令人振奋。
我很容易明白你的代码在做什么。您的测试抓住了我的错误，并告诉我如何使用代码的详细信息。它足以解耦，因此我可以安全地进行改变，并知道在哪里制作它们。
这就是我的想法，渴望让程序员伟大。
我比我更近的是，也许生病了仍然更接近！
回答 6 有各种各样的技能和知识，需要成为一个伟大的程序员。经验，灵活性和创造力对该领域的成功至关重要。程序员能力和优势的实际测试是基于他或她的人格特质和思维能力。
虽然技术能力和使用正确的工具在这一领域可能非常有帮助，但在没有延迟的情况下快速思考和解决问题的能力高于您拥有的认证金额或您拥有的工作经验。以下是一个良好程序员的五个基本品质，可以导致该领域的成功。
1.学习的开放性
技术不断发展并经历变化。因此，程序员需要跟上这些变化和趋势，以保持在其领域相关。一个伟大的程序员是一个永恒的学生。在最新进展之后，继续持续教育机会对于程序员成功至关重要。学习新语言并跟上旧语言的演变可能是非常有帮助的。
2.解决问题或调试
很多程序员的工作包括设计和创建代码。但是，当某些东西不正常时，程序员需要能够找到问题的根源，并有效地进行更改。这涉及调查技能和对他们合作的代码或系统的圆满了解。许多人将编程等同于解决困难的数学方程式。伟大的程序员找到解决问题的方法，并使事情在他们需要的方式上工作。
3.在压力下冷却
虽然编程作业可以被搁置，但是被要求在时间限制和解决或任务完成时使用的时间来工作。能够在更加紧张的情况下保持酷炫，并继续在高级工作对于程序员至关重要。
4.时间管理
许多编程项目有紧张的截止日期。这意味着能够根据这些截止日期制定和优先考虑目标和工作。远见并能够评估任务的需求和障碍对于成功和良好的时期管理至关重要。许多程序员在编写代码之前设计程序结构，以便最佳计划并实现分配的不同阶段。
5.坚持不懈
就像任何工作一样，有一些编程分配非常有趣和创造性。然而，其他作业是更多的时间和脑造成的。亨克勒斯下来并专注于特定任务或写作不像其他作业的代码的能力是创建有趣的代码和程序的编程的一部分。当程序员面临有问题的错误或代码行时，有必要持久地解决问题并提出可能的解决方案。一致性对程序员来说很重要，这也可以帮助解决问题。
如果你喜欢我的答案，请升空
♥
回答 7 良好的编码器具有以下特征：
回答 8 对我来说，一个伟大的程序员是多件事的混合：
回答 9 我的计划工作。</description>
    </item>
    
    <item>
      <title>如何从Python中的另一个函数调用变量？</title>
      <link>https://xiangqingw.github.io/posts/how-do-i-call-a-variable-from-another-function-in-python/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:28 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-i-call-a-variable-from-another-function-in-python/</guid>
      <description>如何从Python中的另一个函数调用变量？ 回答 1 Aloha !!
如果U R要求如何调用1个函数的变量，则可能的方式是 -
第一路</description>
    </item>
    
    <item>
      <title>如何创建与令牌不同的加密素？</title>
      <link>https://xiangqingw.github.io/posts/how-is-creating-a-cryptocoin-different-from-a-token/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:28 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-is-creating-a-cryptocoin-different-from-a-token/</guid>
      <description>如何创建与令牌不同的加密素？ 回答 1 解决所有手机黑客问题，编程和在线培训
电子邮件：lindawhitehacker@gmail.com.
whatsapp：+ 1（217）9532876
认证在线私人调查员和网络解决方案专家
 完全访问黑客
所有类型的手机/设备
*陷入所有社交媒体帐户的不明​​解黑客
*修复信用评分
*修复公共纪录
*恢复和乘以比特币
*云和电子邮件数据提取
*位置跟踪
*被勒索 - 我们将追溯到它后面的来源和人员 -
联系WhatsApp或电子邮件
whatsapp：+1（217）9532876
解释W.
解决所有手机黑客问题，编程和在线培训
电子邮件：lindawhitehacker@gmail.com.
whatsapp：+ 1（217）9532876
认证在线私人调查员和网络解决方案专家 完全访问黑客
所有类型的手机/设备
*陷入所有社交媒体帐户的不明​​解黑客
*修复信用评分
*修复公共纪录
*恢复和乘以比特币
*云和电子邮件数据提取
*位置跟踪
*被勒索 - 我们将追溯到它后面的来源和人员 -
联系WhatsApp或电子邮件
whatsapp：+1（217）9532876
电子邮件：lindawhitehacker@gmail.com.
解释你想要的东西，直行到这一点。
提供目标详细信息。
并简单地替换监控设备。  回答 2 主流谅解是，令牌居住在智能合同能力区块链上作为“租户”。
令牌创作者通常不会照顾潜在的区块链条。
另一方面，一个加密硬币具有它们的区块链，并且必须处理区块链节点网络的操作。
特定区块链上的令牌和硬币交易在硬币的金额中应支付。
一个例子 - eth是一个硬币，在国内主人和其他一些区块链上的令牌。 Evereum Mainnet上的USDT转移的燃气费可应付
主流谅解是，令牌居住在智能合同能力区块链上作为“租户”。
令牌创作者通常不会照顾潜在的区块链条。
另一方面，一个加密硬币具有它们的区块链，并且必须处理区块链节点网络的操作。
特定区块链上的令牌和硬币交易在硬币的金额中应支付。
一个例子 - eth是一个硬币，在国内主人和其他一些区块链上的令牌。 Evereum Mainnet上的USDT转移的燃气费可应付在Eth。</description>
    </item>
    
    <item>
      <title>如果我真的擅长项目欧拉，我应该为（学术界外）的目标是什么？</title>
      <link>https://xiangqingw.github.io/posts/if-i-m-really-good-at-project-euler-what-job-should-i-aim-for-outside-academia/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:28 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/if-i-m-really-good-at-project-euler-what-job-should-i-aim-for-outside-academia/</guid>
      <description>如果我真的擅长项目欧拉，我应该为（学术界外）的目标是什么？ 回答 1 我假设你还询问了谷歌。
大多数写电脑软件的人都不适用于项目欧拉问题上的问题。你几乎肯定需要研究生学位，找到一份你保证解决这样的问题，甚至那么，它就不会是你的所有工作。
我认为你应该认真考虑成为一个数学老师。有很大的需要，你可以产生很大的影响。
回答 2 A2A：显而易见的答案是计算机程序员。项目欧拉不缩小。
我建议您应该为更大的问题获得一些经验开发代码。找到一些对您感兴趣的示例代码。然后开始愚弄它来使它表现不同，并且对您感兴趣的类似事情。它有助于拥有一个体面的体系体验，以便在求职面试中谈论。
回答 3 我曾经有一个最有趣的争论与英国商人。我的案子是，从计算机科学家的角度来看，大多数商业计算问题都是微不足道的。
他的论点是，寻找“八个皇后子问题”或仅生成素数的公式的方面是无用的。我说，我有一项薪资计划，备受支付每个员工的工作;扣除多少税;如何考虑加班和病假。它必须在一周后绝对可靠的一周内解释数十个法律要求。我必须支持员工和工资的变化，并每次规定发生变化时修改。你的学术问题是微不足道的。
我看过项目欧拉的一些问题，他们似乎有利于培训是创意计算机程序员。所以呢？
在考虑到什么样的工作之前，你应该检查你的个人生活野心。通过发明更好的方法来预测股市，您可能会成为亿万富翁。这已经完成了。但这意味着您将重视个人财富高于做任何富有成效或有用的东西的愿望。我见过的最聪明的人之一是一名教授，他说我欺骗了世界，因为如果没有必要全部工作，我会舒适地生活。
我们生活在一个好奇的世界，在那些做大多数有用工作的人都受到了低估和低估的，而我们筹集了那些利用他人的人。你能成功和有用吗？
良好的问题解决方案肯定有巨大的机会。一些看似格鲁本和界定的项目结果是在数学上有趣。股票控制，交通管理和土地使用规划是良好的例子。
回答 4 虽然在我在谷歌时，情况可能发生了变化，但是当我在那里时，答案可能是任何事情。我是一个编译专家在我加入谷歌时完成了编制的年份（如30+）。他们试图与我匹配的作业是编译器相关的，正则表达式相关，自动机相关等。我所获得的作业，它与任何关系一样，是因为我知道UNIX，以及涉及设计的实际工作SQL数据库。 （如果我愿意搬迁到SF，我可能会通过在Android上工作稍微更好地善良，但我的家人在Ma，所以我需要在剑桥工作。）仍然是比最初的工作更好尝试与YouTube的匹配，我可能没有相关技能。
这么多人想在谷歌工作，他们可以选择相对较好的工程师，然后他们经常需要他们做的，相对平凡的工作。
因此，虽然谷歌是在津贴和同事方面工作的好地方。它通常不是您在实际工作方面的最佳选择。在这方面，我会在MathWorks工作更好。在那里，他们希望我使用我的优化器知识来改善LLVM。这将是很棒的工作。然而，谷歌的股票期权让我在两年内退休，这赋予工作缺乏工作，是正确的选择。生活涉及许多权衡。所以，在谷歌工作。
您想在某个地方做最先进的工作，看看实际的工作机会，而不是信笺上的名字。谷歌是一个很好的地方，但不是每个人都在推动现有技术。事实上，大多数员工都没有。不要在那里工作。
回答 5 如果我曾经看到一个提到这一点的简历，我的反应可能是这样，他们真的没有什么可以投入他们的简历或者什么？
这是两个问题的组合：
有一个没有Clue的人有一个没有Clue的机会，这是一个项目欧拉是您的成就对印象深刻的影响 - 因为，你知道，前6％可能听起来很酷等。也许世界上第60000名甚至可以冷却？。或最高如果你也计算在项目欧拉没有注册的人的人中，世界上的那些百分比？..对于任何线索的人来说，这根本不是一个成就，无论你是如何短语的。
回答 6 我目前有366个问题解决了。
Project Euler Friend Key：168255_A66B65BFF9ADDC97B2558F668858C11D
回答 7 我强烈建议采摘不同的指标。
项目欧拉是一组完全不同的技能的考验。大多数问题在实施方面都不具备挑战。轻松的任务要求您将琐碎的想法转换为代码，并且在您到达一些更难的任务时 - 通常是了解特定算法，想法，技巧，定理等，可能是对给定主题进行一些研究。一旦他们知道解决方案，合理的程序员就应该能够编写大多数项目欧拉问题 - 但是解决方案是具有挑战性的部分。而这一具有挑战性的部分与行业程序员的典型体验毫无关系。
我愿意与项目欧拉相比，甚至有竞争力的编程是一种更好的工具，可以衡量您的编程技巧 - 但它几乎与此目的同样差。如果您有兴趣查看竞争性编程，您可以在Codeforces和AtCoder等网站上尝试。
仍然是衡量你的编程技能的好方法&amp;hellip;&amp;hellip;并做一些现实生活中的更多事情不会为您提供完美的指标。您的编程技巧没有完美的指标，只是因为编程太广泛了。这就像采摘指标来测量健身。力量？身体脂肪百分比？速度？肌肉质量？耐力？峰值功率？可持续力量？敏捷？有太多需要考虑的事情。同样，在特定领域真正良好的程序员在某些不同的领域，他的目前的技能和知识可能并不特别有用。
回答 8 我会尝试列出10件事：
回答 9 有两种方法可以接近项目欧拉问题：蛮力或算法。大多数时候在项目欧拉中，您可以为前几个问题做一个优化的蛮力，但是，如果您使用的一些外部网站，如hackerrank（我真的建议提高您的编码技能），则需要进行算法思考。
现在，很多人认为他们可以跳进去解决，如果你在竞争数学中有一个坚实的背景（特别是离散数学），这是完全合理的。如果您没有数学背景，我建议您查看以下答案：
你的骄傲将成为你的叙述。如果你认为你有这个并且可以使用直觉，那么否你就无法做到（除非你是天才）。这些事实在项目欧拉问题中使用的是真正离散的，天才自己花了几年的定理。和他们一起兴起似乎很困难，所以阅读;暴露于不同的定理。如果您之前没有看到定理，则无法与定理讨论问题。
当您解决问题时，蛮力与否，请阅读解决方案。可能有一个非常简单的伎俩，一种看待问题的好方法，记得他们解决问题的方式。项目欧拉问题喜欢重复解决问题的类似方式，而是在越来越难度（记住这一点）。
结论：尝试阅读上述一些主题。前几个问题不要求您了解任何算法，但我真的很建议在Hackerrank执行项目欧拉：解决挑战。它迫使您在算法进行大部分问题。
奋斗并进行算法，您将学到更多内容。蛮力，你只需用它。选择自己的学习态度。这就是你无论如何摆脱它。
好问题。希望这有助于帮助。
跟随我的博客：codefightz :)
回答 10 我今年夏天加入了PE。我会说 - 是的，它既受欢迎，值得努力:)</description>
    </item>
    
    <item>
      <title>当我尝试将一个移动脚本添加到一个空对象的统一中时，它告诉我脚本不继承一个可以管理脚本的本机类，我如何解决这个问题？</title>
      <link>https://xiangqingw.github.io/posts/when-i-try-to-add-a-movement-script-to-an-empty-object-in-unity-it-tells-me-the-script-dont-inherit-a-native-class-that-can-manage-a-script-how-do-i-fix-that/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:28 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/when-i-try-to-add-a-movement-script-to-an-empty-object-in-unity-it-tells-me-the-script-dont-inherit-a-native-class-that-can-manage-a-script-how-do-i-fix-that/</guid>
      <description>当我尝试将一个移动脚本添加到一个空对象的统一中时，它告诉我脚本不继承一个可以管理脚本的本机类，我如何解决这个问题？ 回答 1 语法需要定影差别：不要！我的天啊。根据Unity网站，与任何语言一样，脚本语言都有语法，或者的一部分&amp;hellip;&amp;hellip;不适用于英语？
回答 2 很难给出简单的是或否答案。
我想成为一名游戏程序员，我在当地杂货店看到Pong。我尽我所能学习编程。不幸的是，这是20世纪70年代，它非常困难。
但是时间继续前进，最终我学习了大学的软件工程。每当我学到新的东西时，我写了一个游戏来测试它。
他们是愚蠢的小游戏。他们不是销售，几乎不值得展示别人。
但我从写下那些愚蠢的小游戏时学会了一吨。
很难给出简单的是或否答案。
我想成为一名游戏程序员，我在当地杂货店看到Pong。我尽我所能学习编程。不幸的是，这是20世纪70年代，它非常困难。
但是时间继续前进，最终我学习了大学的软件工程。每当我学到新的东西时，我写了一个游戏来测试它。
他们是愚蠢的小游戏。他们不是销售，几乎不值得展示别人。
但我从写下那些愚蠢的小游戏时学会了一吨。
我还将课程分配写为游戏。例如，一个C分配是编写一个Rational数字计算器。预计将成为命令行事。
我研究了Borland C ++的ASCII Library，而不是命令行，并写了一个全屏，颜色Rational数字计算器。它是DOS，所以没有鼠标控制，但只要用户按下键盘上的按钮，它将闪烁UI上的相应按钮，表示它得到了输入。
老师有点狼吞虎咽。他只是学习自己，它远远超出了他尝试过的任何事情。但它使用（ASCII）图形，其中借鉴了视频游戏开发，因此发展是挑战性，但发展很有趣。
因此，我在学习编程时完全赞同并支持游戏。
但游戏开发作为学习编程的一种方式？
不。绝对没有。只需撰写游戏，您就无法学习您所需的一切，以便成为一个有效的程序员。您可以了解您需要知道的事情，但您不会学习所需的一切，以便成为一个能力的程序员。
事情是，你不会知道你不知道的东西。
例如，假设您需要一个图形库：为级别加载图形的东西。你只想要一个;你不想要整个束，因为吃了RAM。
所以你提出了一种方法来传递到图形库的指针，所以需要访问它的一切都可以到达它。跟踪谁拥有它是一种痛苦和容易出错的。您必须仔细调试所有内容，并确保没有人删除不应该的谁。并获得对每个需要它的每个人都是皇家痛苦的参考。只需要几个数周的重构只是为了让它到处都需要去。
因为您没有正确学习软件工程，所以您不知道单身模式。它是很久以前的开发，并创建了以描述所描述的那个方式来处理情况。它很容易实现，不需要重构任何东西。参考不是问题。
因为你通过游戏编程学习编程，所以你吮吸编程，只是不知道它。
这只是一个例子，但有数百个案例，你不知道你不知道的东西。您甚至不会知道如何研究它们，因为您只知道软件工程词汇的小型子集。
所以…
通过沿途进行游戏学习编程？伟大的！
仅通过游戏开发学习编程？糟透了;它不起作用。
回答 3 要了解挖掘NFT的成本，我正在服用一位艺术家的艺术品和薄荷，这意味着产生真实性证书，使其成为一个非娱乐标记之一，这笔费用为0.050421到一个以外的成绩$ 87.53。这就是铸造nft的成本。
然后有另外收费来列出基金会的艺术品，以便为2035822到以62.19美元。
所以，我们谈论的价格为87美元+ 62美元，那么只需149.72美元即可获得我的第一件艺术品。
基础工作的方式是，它是24小时拍卖，并且在放置第一个投标时开始拍卖。首先被放置，拍卖开始，当拍卖结束时它比他的储备价格高一点，基本上是开始出价，所以它被出售为0.165个以286.44美元。
相信我，这是出售第一件艺术品的令人兴奋的金额。特别是，如果你不是有人着名。
从那时起，有15％的佣金费用是基础，所以在这种情况下，这是0.02475 Ethereum，符合42.97美元。请记住，除了到目前为止还有佣金其他佣金，还有42.97美元。
然后实际上有托管的交易费。所以他的收入286.44美元正在束缚，他必须将它转移到我的钱包里。所以&amp;hellip;&amp;hellip;转移到他的钱包时，有0.018个以21.25美元的交易费用，只需赚到钱。这不包括将钱存入他的银行账户。这只是将它进入钱包，然后他必须在他的银行账户中锻炼，如果他想成为真钱。
让我们在这里快速数学。所以有149.72美元只是为了获得他的第一件艺术品。然后，他必须增加往返的15％佣金费（42.97美元）加上委员会将钱转移到我的钱包中（31.25美元）。因此，它达到了高达223.94美元。在他出售286.44美元。因此，他的利润是62.50美元，这意味着78.2％的费用。
费用很多，但再次媒体费用，上市费和交易费是在区块链上处理交易的所有费用。这意味着它们并不是那么多的百分比，它们被认为是天然气费。在Ethereum BlockChain上，这是这种气体的概念，这基本上是能量，电量多少电力，加工交易的电力有多少，电力，这是真正的电力。
真正的人正在支付电动账单，以便处理所有这些交易。
我只是想澄清一下，如果你的朋友们在谈论我刚刚卖掉了300美元的NFT，赚了钱，赚钱。他们不是。
费用很大，特别是如果他们在基础上销售。在你对卖一件艺术品的一点点兴奋之前，我认为有些值得了解。
回答 4 我的猜测是因为它是一种静态类型的语言，其中存在良好的开源实现 - 包括垃圾收集器等硬比特 - 这是免费的，因为C＃编译到相对较快的可执行文件。
基本上C＃是比典型的脚本语言更真实的语言&amp;hellip;&amp;hellip; Lua et。 al。很好，但主要用于游戏引擎实现的易于开发 - 它们很容易嵌入C ++程序 - 以及易于开发游戏引擎用户：动态类型和解释语言被视为适合业余和新手的语言。
Unity似乎已经旨在为专业使用的可能选择，对于那些了解他们正在做的人，以便使用它来创造至少靠近AAA的东西，称为Indie AAA。</description>
    </item>
    
    <item>
      <title>我已经学会了Python，HTML和CSS，但我没有学习JavaScript，DSA和任何框架。我可以申请我的技能吗？</title>
      <link>https://xiangqingw.github.io/posts/i-have-learned-python-html-and-css-but-i-didnt-learn-javascript-dsa-and-any-framework-yet-can-i-apply-for-a-job-with-the-skills-i-have/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:28 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/i-have-learned-python-html-and-css-but-i-didnt-learn-javascript-dsa-and-any-framework-yet-can-i-apply-for-a-job-with-the-skills-i-have/</guid>
      <description>我已经学会了Python，HTML和CSS，但我没有学习JavaScript，DSA和任何框架。我可以申请我的技能吗？ 回答 1 主要是没有。 Web开发人员需要了解JavaScript及其框架。假设网站作为汽车，HTML将是汽车的车身，CSS将是汽车的装饰品。但是，您需要发动机，电池和其他部件来运行汽车。在Web开发中，JavaScript充当这些部分。要制作一个动态网站，您需要JavaScript或其框架。因此，任何招聘人员都将在雇用您作为Web开发人员之前评估您的JavaScript技能。
如果您希望使用Python知识进入开发人员工作，则数据结构和算法是必不可少的。 oops和dsa是将评估的两个主要内容，因此必须知道。
回答 2 您可以作为专门从事Python专注的后端开发人员。
HTML和CSS是Web开发技术，主要围绕JavaScript旋转。
所以很高兴知道JS，因为这将在您的职业生涯中作为Fullstack开发商帮助您。
这个想法是学习尽可能多的语言，并保持自己更新，这样你可能不会错过公共汽车。
所以继续学习。学习是关键。
＃世界和平
回答 3 不，学习编程语言就像学习用手一样。重要的是要知道的重要事项，但最终你不会用手赤手造成一个房子，你用工具来做。
如果您的目标是学习Web开发，在您能够竞争入门级工作之前，您仍然有很多才能学习。
尝试拾取烧瓶，mysql和反应。然后构建一些非琐碎的全堆叠应用程序。
祝你好运！
回答 4 如果您正在寻求前端Web工作，您需要在某种程度上学习JavaScript。在购物之前，您不需要完全掌握语言;大部分工作正在使用相当简单的代码选择和串行开源包。
绝对不需要学习javascript框架，例如反应，但它将打开更多的门。
虽然有一些使用Python的网络区域，但它仍然相对恰到好处，特别是在前端。尽管如此，任何编程语言的良好基础都会有助于调试。
回答 5 现在，面对很多奇后，在掌握角度
嗯，在Web开发中铺设职业生涯，在JavaScript中获得技能后的自然进展，HTML和CSS是掌握一些框架 - Angular是一个最受欢迎的，因为它在创建单页，可扩展的客户端应用程序中的大量使用令人信服的功能包括模板，双向绑定，模块化，RESTful API处理和Ajax处理。上述前端Web开发特征的获取技能将提供一款已准备接受求职者并获得工作的开发商。
现在，在沿着学习旅程中面临大量挑战之后掌握了角度，通过在Airbnb（94,100美元）的高校（94,100美元）的高级薪水的大学，通过展示我在各个方面的技能Web开发包括HTML，CSS，JavaScript及其框架角度广泛用于创建单页，可扩展的客户端应用程序，我相信我应该分享我的学习体验，以使您的学习比我的更少麻烦。
在这里，我正在分享指向帮助我主角框架的课程的链接，您会发现它有用 - 我的首选角度框架学习资源
看，当谈到掌握角度时，它必须决定有效的学习资源 - 这是一个使学习曲线线性线性和在困难主题上进行的进展情况，仅在提供足够的洞察和概念上的示例之后，那个解释为什么程序正在执行它的执行方式，认为学生对域名新的方式并且并不熟练在角度框架中进行编程，讨论在顶级组织访谈中提出的问题，其中提供的问题课程支持以解决疑问的形式，学生可能在概念中或在解决实践问题时。
在我的学习之旅中，我开始意识到绝大多数用于学习角度的资源 - 书籍，PDF材料，教程等，并不是学习者友好的。在大多数情况下，我觉得作者/导师急于到达课程结束，并没有教育编写这些代码的理由，并假设一个人在角度框架中熟悉编程。但是，这不是一个是初学者的情况。
此外，在几个资源中，我发现在解决编程问题时，作者尚未教授逻辑。这导致学习者跳到教程的那些部分，其中讨论了该特定主题。在这些部分中教授的概念反过来应用属于另一个概念的逻辑，在资源的另一部分中讨论。通常，这是重复循环。
那些希望阅读更多关于我的旅程，在包括角框架的Web开发的几个方面，包括角框架，掌握了这个主题，并最终在其中一个领先的电信公司中加上了一份高薪工作，在这里，我正在分享详细介绍 - 我的学习角框架的详细旅程
回答 6 嗯，掌握HTML和CSS和CSS和CSS，通过在Airbnb（94,100美元）的大学里，通过展示招聘人员我的命令在包括HTML，CSS的各个方面的指挥和JavaScript，通过我发达的项目的手段，我相信我应该向这个问题提出答案，以便让你的学习不如我的麻烦。
嗯，掌握HTML和CSS，我没有留下没有石头。我从大型课程，书籍，PDF材料等中学到了，但我总是曾经遇到过几天的墙进入学习。在大多数情况下，我觉得作者/导师急于到达课程结束，并没有教育写作这些代码的理由，并假设一个人在HTML和CSS中进行了编程。但是，这不是一个是初学者的情况。
嗯，从我的学习之旅中，我会说明掌握HTML和CSS的最有效的方法是选择一个有效的资源，这些资源在以下参数上高表手 - 这不仅仅是关于主题的人，那些考虑的参数那个学生对域名新是新的，并且在HTML和CSS中的编程并不顺利，该方法解释了为什么程序正在执行的方式，这是在解决疑惑学生的形式提供进入课程支持的人可能在概念或虽然解决实践问题，但讨论招聘人员在顶级组织采访中提出的问题。
在这里，我正在分享指向帮助我掌握HTML和CSS的课程的链接，您会发现它很有用 - 我的首选HTML和CSS学习资源
看，HTML和CSS本身就很简单，以获得技能，可以成功掌握相当短的时间，但是，有一个警告。作为一个初学者，大部分学习者的兴趣在于导师的手和课程交付的方式。低效的教练可以很快导致学习者失去对象的兴趣。在最糟糕的情况下，这可以显着改变一个人职业的方向。
我从那些资源中删除了学习，而是诉诸于在线提供的免费视频教程。但是，随着时间的推移，我意识到，从他们那里学习的一个主要问题是他们“为所有”社区“自由和开放，吸引了许多正在考虑快速降压的创造者。此类教程的内容质量是值得怀疑的。此外，由于无规定在这些平台上完成的课程提供证书，因此不能证明一个人对潜在雇主的掌握。这可能会阻碍一个人的职业生涯，特别是在雇主制定了选择相关学位/证书的选择标准的情况下。
此外，在几个资源中，我发现在解决编程问题时，作者尚未教授逻辑。这导致学习者跳到教程的那些部分，其中讨论了该特定主题。在这些部分中教授的概念反过来应用属于另一个概念的逻辑，在资源的另一部分中讨论。通常，这是重复循环。
那些希望阅读更多关于我的旅程如何，一个完整的业余在网上开发的几个方面，包括HTML和CSS，掌握了这个主题，并最终在其中一家领先的电信公司中加起来了一份高薪工作详细分享它 - 我学习HTML和CSS的详细旅程
回答 7 我不喜欢的是，当人们试图聪明时，给出没有逻辑的愚蠢答案。很多人都说否，你只是只用HTML，CSS和Javascript限制自己，这只是雄辩。
想象一下，有人问鸡，土豆和绿色沙拉足以满足全甘醇餐吗？然后有人说嗯，不&amp;hellip;&amp;hellip;你需要汤，你需要沙漠，你需要面包棒&amp;hellip;&amp;hellip;这是2020次改变了
Bla Bla Bla Blaaaaaaaaaaa</description>
    </item>
    
    <item>
      <title>最简单的逐步方法是可以访问暗网的总体新手？</title>
      <link>https://xiangqingw.github.io/posts/what-is-the-easiest-possible-step-by-step-method-for-a-total-novice-to-be-able-to-access-the-dark-web/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:28 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-the-easiest-possible-step-by-step-method-for-a-total-novice-to-be-able-to-access-the-dark-web/</guid>
      <description>最简单的逐步方法是可以访问暗网的总体新手？ 回答 1 转到Tor项目|隐私和自由在线和下载Tor浏览器。
tor浏览器是已被修改为通过TOR网络连接的Firefox版本。这意味着浏览器匿名地路由您的流量，外部计算机认为您可以从不同的国家/地区连接。将浏览器指向http://duckduckgo.com并进行搜索.Onion链接。您已习惯于以.com结尾的网站。 Tor网络的网站以.Onion结束。大多数您遇到的服务将会扫描您的银行信息的一句话。这是一种像合法的人一样走过犯罪的人，骑行贫民区携带了很多现金。你真的不能相信任何人。
回答 2 最简单的方法是转到Ahmia搜索引擎：
然后添加您从搜索中获得的任何链接。
这样一个像这样的链接
成为
这是访问DarkWeb的最简单方法。
最安全的是下载tor浏览器，然后转到艾哈里：
没有.ly
最简单的方法是转到Ahmia搜索引擎：
然后添加您从搜索中获得的任何链接。
这样一个像这样的链接
成为
这是访问DarkWeb的最简单方法。
最安全的是下载tor浏览器，然后转到艾哈里：
没有.ly
回答 3 一个关于Techy的普通知识的人，应该永远不会去黑网，因为他将无法保护自己的身份。黑客正在寻找那些诺布的人。进入黑色网络后，他们可以窃取您的身份并为他们的工作使用它，也可能是一个非法的工作。为什么你想要浏览黑暗的网络，不需要（直到你想做一些非法或奇怪的东西）。您也可能在您的设备中获得一些病毒，只需几分钟即可在所有数据中被攻击。
回答 4 如何访问黑暗的网络&amp;hellip;&amp;hellip;
通过安装特殊浏览器软件，您可以访问暗网络。
三个最大的黑腹板是tor，i2p和freenet。三个，Tor是迄今为止最大的。
您可以通过下载和运行Tor浏览器来访问Tor，就像运行Web浏览器一样访问Web。
下载扭矩
&amp;hellip;&amp;hellip;为什么有人会这样做？
暗网不是一个邪恶的地方。黑暗网络中的黑暗并不意味着邪恶或邪恶，这意味着匿名。
任何说黑暗的网的人都是邪恶的，或者只是用于犯罪，不知道他们在谈论什么 - 他们得到了他们所有的信息
如何访问黑暗的网络&amp;hellip;&amp;hellip;
通过安装特殊浏览器软件，您可以访问暗网络。
三个最大的黑腹板是tor，i2p和freenet。三个，Tor是迄今为止最大的。
您可以通过下载和运行Tor浏览器来访问Tor，就像运行Web浏览器一样访问Web。
下载扭矩
&amp;hellip;&amp;hellip;为什么有人会这样做？
暗网不是一个邪恶的地方。黑暗网络中的黑暗并不意味着邪恶或邪恶，这意味着匿名。
任何人说黑暗的网络是邪恶的，或者只是用于犯罪，不知道他们在谈论什么 - 他们从迷信和半烘烤的震动纪录片中获得所有信息。永远忽略它们。
黑色Web的目的是匿名。暗纤维网旨在使其非常努力地，接近不可能，跟踪人或窃听他们正在做的事情。
由美国政府 - 特别是DARPA，海军研究实验室和国家部门创造的，以国家科学基金会的资助 - 为两种用途：为了使得能够在陷入困境的军事网络的情况下实现安全的沟通，以及获取新闻进出互联网接入的极权主义国家。
你为什么要访问黑色的网站？
有些人购买违禁品，因为当你使用它时，你的全部点是匿名而无法追查。如果他们购买必须在现实世界中交付的违禁者，这通常是他们如何被抓住。
回答 5 不。您必须专门安装特殊软件。
例如，这是一个黑色Web链接：
https://www.propub3r6 espa33w.onion.
继续，点击它。它不会咬人。你不会被黑客攻击。警察不会崩溃你的门。
除非您下载并安装tor，否则不会发生任何内容。说真的，点击它。没有tor，你只需在计算机上看到错误消息。
回答 6 您可以轻松地从iPhone访问暗网络。您只需要从App Store安装洋葱浏览器。
我可以在iOS设备上运行tor吗？
为什么苹果想要预防这一点？
回答 7 这是一个常见的误解，暗网是一个s</description>
    </item>
    
    <item>
      <title>PC游戏占用多少钱？</title>
      <link>https://xiangqingw.github.io/posts/how-much-space-does-a-game-take-up-on-a-pc/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:27 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-much-space-does-a-game-take-up-on-a-pc/</guid>
      <description>PC游戏占用多少钱？ 回答 1 PC游戏占用多少钱？您可能意味着在这个问题中包含这个词的空间，所以我会回答这个问题，但也贬低了这个问题，因为写了它并不意味着什么。
答案如果你的意思是空间，它是否依赖。游戏尺寸范围为&amp;lt;1MB至超过100 GB。快速的谷歌搜索旨在列出最大的游戏大小，因为所有的DLC都有超过200 GB的职责现代战争召唤。其余的前10名列表范围为大约100 GB，因此在大多数情况下，在目前的100 GB范围内，但它们总是变得更大。
回答 2 取决于游戏。有些人只有几种MB，有些人可以超过100GB。
一个我喜欢很多叫飞艇的游戏，我认为也许100Mbs，它是一个超级小的印度风格游戏。
ARK SURVIVA期用MODS演变&amp;hellip;&amp;hellip;好吧&amp;hellip;&amp;hellip;我很确定我有一半的1TB硬盘致力于&amp;hellip;&amp;hellip;
回答 3 它非常取决于游戏。有些是微小的Minesweeper，其他高质量的图形游戏可能是100多个千兆字节。
回答 4 这不是它的工作原理。这就像询问动物有多大。您认为所有PC游戏是否相同？一些在线无需根本不需要空间。零。其他人需要230千兆字节的硬盘空间。然后从几十只kb到几十英镑之间的几个kb来看。所有尺寸都有150万台PC游戏。还有更多的是每天制作。
回答 5 一些游戏使用只需50MB（0.05 GB），而其他游戏则使用超过100GB的存储空间。我会说大多数游戏使用大约10-75GB，但很难说，因为它从游戏到游戏时变化如此多。供参考，大多数现代计算机和控制台包含大约512GB或更多。看到具有2TB（2000GB）或更多存储器的一些系统并不罕见。
回答 6 游戏在PC上占用了多少空间？
它疯狂地变化。让我向您展示一部分范围。一，原来的厄运：
434.93兆字节。
现在，对于2016年的Doom：
68.69千兆字节。
这是一个重要的区别。和厄运永恒的，我现在不碰巧安装，列出了一个更高的80千兆字节的硬盘要求。如果我们想转移到另一个系列，Grand盗窃汽车v在我的硬盘上取得了往返105千兆字节。
如果我们想要比原来的厄运小，那么有像.kkreiger这样的游戏，这是一个为与st竞争开发的第一人称射击游戏
游戏在PC上占用了多少空间？
它疯狂地变化。让我向您展示一部分范围。一，原来的厄运：
434.93兆字节。
现在，对于2016年的Doom：
68.69千兆字节。
这是一个重要的区别。和厄运永恒的，我现在不碰巧安装，列出了一个更高的80千兆字节的硬盘要求。如果我们想转移到另一个系列，Grand盗窃汽车v在我的硬盘上取得了往返105千兆字节。
如果我们想要比原来的厄运小，那么有像.kkreiger这样的游戏，这是一个为严格限制96千字节的竞争开发的第一人称射击游戏。如果我们想进一步，请早期的PC游戏开发甚至更少，32千字节在PC游戏的早期足够常见。
当然，大多数游戏都不是极端的，而是倾向于落在这些点之间的某个地方。特定游戏落下取决于许多因素，但通常根据发布的何时和它的游戏类型，您通常可以做出体面猜测。作为经验的规则，最近的游戏和更接近AAA状态，它需要的磁盘空间就越多。而且，随着时间的推移，储存要求将响应对更大的游戏和跌倒储存价格的需求而越来越高。
因此，PC游戏占用的空间有多少数字没有一个数字。这取决于有问题的游戏，甚至是所述游戏的具体版本。如果您只需要看看您是否有足够的空间来播放游戏，存储要求通常与其余系统要求一起列出。如果游戏没有出于某种原因列出其存储要求，您可以检查个人资源，例如PC Gaming Wiki以获取用户提交的信息。
回答 7 只有你决定它。
您可以获得游戏PC明显低于此，这将在体面级别运行全部或大多数游戏。
1000美元，您基本上是一个非常专用的游戏玩家，正在寻找全部线的性能。但是，如果您不介意在超设置上运行您的游戏，则可以在$ 5-600没有问题上获得罚款。
回答 8 这个问题的一个简单答案将是图形的增加（i.e纹理，着色器，反射质量等等，。），巨大的地图，高质量的切割，故事情节。
让我们看看我最喜欢的系列召唤系列。
您可以轻松发现这些之间的差异。
图像来源：Google图像
回答 9 这取决于你正在寻找的游戏和/或你的控制台的游戏将允许您播放。
我不是一个巨大的游戏玩家，但在过去的12年里，我一直和我的兄弟在一起，他们可以在几个小时内告诉你如何在几个小时内击败游戏。 Super Mario Maker出来的那一天，他已经预订了它，并在同一天得到它，在6或7个小时后击败它。所以，虽然我可能不是我家里的游戏玩家，但我一直在成长，而且我已经从中学到了一两件事。
我的兄弟有很多，很多游戏机。 PS4 Pro，Wii U，Nintendo Switch，Nintendo 3DS和Nintendo 2DS。他有大量的游戏，因为你可以想象，每个设备都可以想象。他的大多数（如果不是全部）他的比赛包括马里奥兄弟，塞尔达或街头战士。我见过他玩并击败每场比赛。</description>
    </item>
    
    <item>
      <title>为什么树数据结构是计算科学界的重要概念？</title>
      <link>https://xiangqingw.github.io/posts/why-tree-data-structures-are-an-important-concept-in-the-computing-scientific-community/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:27 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-tree-data-structures-are-an-important-concept-in-the-computing-scientific-community/</guid>
      <description>为什么树数据结构是计算科学界的重要概念？ 回答 1 在搜索中占用2-3棵树，是O（n log n）。
回答 2 大多数程序员需要在其职业生涯中实现数据结构和算法的重要性。原因是对这个主题的简单知识有助于我们随着更好的程序员和大师计算机科学。另一方，面试官使用DSA来测试候选人在面试期间。它为他们提供了一种简单的方法来评估解决问题的技能，基本的CS基本面和思想过程。掌握问题解决，纸张或白板可以是练习，解决方案步骤和伪代码的方便工具.writing下降算法步骤和必要的细节可以帮助我们在设计中.Mastering数据结构和算法需要动机，适当的指导，努力工作和一个连续学习计划。如果有人想要开始一个很棒的旅程，那么回答这些问题：
如何在算法和数据结构中开发长期兴趣？如何准备一个持续的学习计划来破解编码访谈？如何在给定的时间内为编码面试做好准备？让我们深入探讨这些问题的答案！步骤1.制造长期动机
长期愿景至关重要！我们需要思考和探索：为什么学习数据结构和算法对于技术行业的职业生长至关重要？每个错误或错误都有珍贵的学习，我们需要为UPS和Down做好准备.Oonce我们有数据结构的基本知识和algo我们对主题的兴趣会增加越来越多.Step 2.算法的概念和复杂性
准备思想后，我们的第一个目标是准备一个在DS algo中重要的基本主题清单。我们可以特别关注真实的应用来理解使用情况案例思维
算法拼图，避难所，计数，数量理论，排列，复发，基本概率
编程基础知识
数据类型和变量控制语句循环迭代，函数属性，指针，数组，字符串，类，对象
算法基础知识
复杂性分析：输入大小，最差案例分析，时间复杂性空间复杂性，Big-O符号
递归的想法：属性，递归问题的模式，如分裂和征服
排序算法：泡沫排序，选择排序，合并排序，快速排序，属性和排序Algo的比较
搜索算法：二进制搜索，指数搜索，插值搜索
哈希的想法：散列函数的属性，基本操作（插入，删除，搜索），使用哈希解决问题的模式
第3步：找到一个好的导师和学习社区
我们的下一个目标应该是找到一个好的导师。导师可以成为一个具有良好概念理解和解决问题的人的人。你可以通过观看YouTube视频或注册课程来开始学习它。我会建议你挑选在线课程因为它们是有效的，你会得到一个真正的简洁的道路。在线DSA课程有很多选择，我会推荐最佳的市场，即LogicMojo.let看到为什么我推荐你的LogicMojo是什么让它独特？即使您是一个新鲜的或经验丰富的它涵盖了每个主题准备结束。在3-4个月的问题练习中，如果您按顺序遵循所有主题，您可以完成为遗址采访的完整准备。本课程在我的准备期间亲自帮助。所以值得一提。其他好处也是在那里，您可以在那里检查他们的网站.Step 4.Practice问题是您的钥匙。在这个Covid时，所有采访都发生了所有面试在线.below我提到了DSA的完整教学大纲
线性数据结构
属性，基本操作，递归问题和现实生活应用程序
阵列：1D阵列，2D阵列，动态数组
链接列表：单键链接列表，双链接列表，Circular LinkedList
堆栈，队列和dequeue
非线性数据结构
二进制树：属性结构，DFS（预订，秩序，邮政，BFS遍历另一个问题解决模式
堆：属性结构堆建筑模式解决，现实寿命应用
高级数据结构：属性，结构，基本操作：Trie，段树，二进制索引树，n-ary树。
回答 3 编程是指导计算机执行某些任务的方式。要指导计算机，您需要像C ++，C，Python，R，Java等的交流语言。执行编程的人称为程序员.PUTER编程或编程是过程在计算机上写下说明解决问题。指令是以编程语言编写的代码形式，计算机可以理解.Data结构和算法对于学习程序员来说很重要？让我们找出答案。是的，它是重要的是，因为数据结构和算法（DSA）为程序员提供了管理数据来管理数据的技术意味着组织，存储和处理数据.WhereAS算法意味着依次遵循特定问题的一系列步骤以解决数据结构和算法在编程中很重要，您应该知道DSA的不同类型和技术是：
数据结构：数据结构类型：
算法：算法的各种技术：
其他重要的概念程序员必须知道与算法相关的时间复杂性，空间复杂性，搜索算法，排序算法等。在计算机科学中的每个部分中使用了分类算法.Programmers使用算法以有效的方式以有效的方式解决各种问题根据可用资源优化计算机程序。虽然程序员可以通过C ++，C，Java等的任何编程语言指导计算机。但是要处理大规模数据并使其有用输出，因此需要数据结构和算法。您可以学习数据结构和来自各种来源的算法，如书籍，YouTube视频，文章，学院（学位计划），在线课程等。您可以根据您的学习级别选择任何来源。但如果您将自己视为Web开发人员，软件开发人员，数据分析师等。您需要学位或认证课程选择SAP，Oracle，Google，Facebook等顶级公司。随着这些课程，您也可以采取书籍的帮助来了解编程的算法更好。可用于数据结构和编程算法的最佳在线课程：
1.Geeksforgeeks：具有任何编程语言Java，C，C ++等的基本知识的人，并喜欢自己学习可以选择本课程。课程提供：
这课程建议为正在为竞争性规划的人和属于技术流的人和那些课程。此课程不适用于Python程序员和非技术学生。如果您想从基础知识从基础学习DSA，则可以选择其他选项像LearnBay和Udacity.No演示类选项适用于Trail.2.edx：EDX为您提供数据结构和算法的在线课程，其中包括丰富的编程挑战。在此，您得到：
EDX是在线课程的领先广告平台中的一个。在EDX中，您获得了与学习材料相关的各种大学的曝光，但支持服务是耗时的，并且讨论论坛不容易访问..Learnbay：这是最好的工作专业人员的在线平台（技术以及非技术性）。在这些课程中，您可以涵盖DSA概念的深入了解以及实际应用和变化以及：
您可以根据您的目标获取各种诅咒中的选项。它强烈推荐用于在编程领域的外出外出的工作专业人士。这课程以这样的方式设计，您可以从基础知识开始，直到专长级别。您可以要求在注册满足之前询问职业咨询.4.UDIDITY：在UDACITY中，来自技术背景的人们可以通过解决80+练习问题来实现数据结构和算法中的主人。在下，您将通过以下功能获得主人：
本课程是推荐的技术背景，如本课程中，您将在安排和算法方面掌握。您与现实世界行业项目一起获得学习环境。但不会适合非技术参与者和初学者。您可以选择每月访问或季度根据您的要求访问本课程.Programmer可以用最小的努力将笔以任何编程语言放入纸质代码。如果程序员不知道预定义的算法技术，则可能需要更长的时间来确定解决方案。
回答 4 我已经看到人们因以下一个或多个因素中的一个或多个因素而奋斗，选择和实现数据结构：
要真正了解数据结构和算法，我建议如下：
如果您真的想了解数据结构和算法（即，它们的实际实施方式以及为什么），我建议避免为您提供的语言/库/框架。自己实施他们真的是学习这些概念的最佳方式。
回答 5 是的，他们大多越来越复杂，但你仍然会在最近开发的新数据结构中找到一些非常有用的，以及以更快/更好/更简单的方式做旧东西的新方法。
一些例子：
回答 6 *模板作为代码通过形成依赖树。
现在忍受我5分钟来详细解释我们如何使用树作为数据结构来解决我们的复杂用例。
为了解释方案，允许通过基于令牌的身份验证来获取从API获取数据的小示例。
所以，如果你想实现这个壮举，
*首先获取用户名，密码和租户信息，并调用API来获取令牌。*然后使用获取的令牌，通过在&amp;hellip;的标题中调用Actial API
回答 7 存在数据结构以实现和组织数据，使其能够以小于线性时间的特定方式搜索.LETS表示您有一个名称列表。如此，想象列表是物理的。纸张，也许是一本书如果它变得很大。列表中的名称在没有特定的顺序。你会搜索adam史密斯的名字吗？你必须扫描列表并看看所有名字。你没有其他名字。你没有其他名字。你没有其他名字，由于您对列表中的位置不了解Adam Smith任何可能出现。这将是没有数据结构的生活。当列表只有20个名称时，通过该列表仔细观察。但是，如果一个Cynewide电话簿被组织相同，则想象一下方式永远不会在实用的时间内找到任何东西。对于所有意图和目的，目录将是不可用的。因此，人们提出了不同的想法。他们说，嘿，让他们按字母顺序排序名称。这使得这是效率的要使用的算法称为二进制搜索。您可以认为这个名字听起来很喜欢，但你已经知道如何这样做.</description>
    </item>
    
    <item>
      <title>为初学者构建应用程序的最佳平台是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-is-the-best-platform-to-build-an-app-for-a-beginner/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:27 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-the-best-platform-to-build-an-app-for-a-beginner/</guid>
      <description>为初学者构建应用程序的最佳平台是什么？ 回答 1 随着时间的一点冒险和愿意学习，您可以利用录制的应用程序阶段之一制作和处理您的多功能网站或应用程序。
1.盈利。 IO.
appery是一种基于云的多功能应用制造商，您可以用来为Android或iOS制作应用程序，它包含Apache Cordova（电话间隙），离子和jQuery Mobile，可导入其隐式零件。
由于制造商在云中运行，因此没有什么可介绍或下载，并且它不难迅速开始。 appery应用程序制造商包含一个可视编辑管理器，利用简化的部分来构建UI。 Apply Auto-Fly-为您放入的任何零件的代码。您可以与任何REST API关联并在应用程序中使用它，如果要存储信息，请快速添加云信息库并向您的应用程序后端。
2.移动Roadie.
Versatile Roadie是一个允许任何人制作和处理他们的iOS或Android应用程序的应用程序制造商。令人惊叹的是，结构以异常的视觉方式发生。该阶段秉承所有媒体类型，具有编程的RSS，Twitter或Google News Chatchrase以及用于与客户端的常量对应的自动调用风扇分配器。
您可以通过移动陆路准确地看到您的应用程序，同样，您的客户将在其小工具上。它们同样将通过App Store住宿流程指导您，移动Roadie看看您物质的质量和适当性。
3. TheAppBuilder.
TheAppBuilder提供了应用程序的建立，以适合工人，客户，场合和传单，可访问两个独特的方法。假设您将应用程序作为组织的内联网命令，这可能是舞台。您可以使用在线工具箱制作应用程序，并为您提供的准备或TheAppBuilder本身将与您合作，以表征和构建应用程序的设计并使用开始实质填充它。
4. Appy Pie
Appy Pie是一个基于云的DIY多功能应用程序创建设备，允许客户端在没有编程能力的情况下为实际阶段进行应用程序并分发它。没有什么可以介绍或下载 - - 简单简化的页面以使您的便携式应用程序在Web上。完成后，您可以获得与所有阶段合作的基于HTML5的交叉品种应用程序，包括iOS，Android，Windows，以及令人惊讶的渐进应用程序。所有修改都是逐步的，具有发送弹出消息的能力，适应促销，查看实时调查，以及带GPS的跟踪区域。您可以同样协调在线媒体，负责，Web期刊，站点，声音，收音机，以及即将开始。
5. AppMachine.
AppMachine是一个简单的利用阶段，可以组装和计划两个iOS和Android的熟练本地应用程序。利用简化的互动点，您可以加入不同的结构障碍，这些结构提供各种元素，如数据，照片和视频。该结构拒绝允许您将应用程序接触到Facebook，Twitter或在线商店。您可以以小说风格规划应用程序，并选择您的路由，阴影，文本样式和符号，假设格式的总责任，并使用预览器观看您的进步。
此阶段同样允许您检查可以将其移交到iOS或Android应用程序的关键物质的站点。
回答 2 hiii guys &amp;hellip;
早上好，全部和快乐的邦&amp;hellip;&amp;hellip;
这对股票市场的新初学者来说是一个很好的问题。在我的expreince时，当我开始我的股票市场时，它就像是YEAH股票市场看起来很容易，我应该开始交易。我很年轻，并且在几个月内渴望成为百万富翁。最初在前1-2个月，我陷入损失。我在漂亮的第一天交易并制造12000，我有信心这可能很容易，我可以赚更多。第二天我再次下订单，在那天贸易失去了。我以为这笔股票会恢复，我会赚钱。我继续持有股票，直到我在20天内失去了1.5万卢比。这个想法来到了我的脑海里，我会保持止损，或者我会尽早退出小损失。买我的整个资本完成了。我已经失去了所有的储蓄。仍然人们在我身边赚钱。我觉得怎么可能？我怎样才能疏松，人们还在赚钱！我一边伸出交易，我开始专注于学习交易。如果每个人都可以赚钱，那么即使我能做出。然后我开始加入四面体（DOT）COM并遵循他们的策略。我获得了交易的信心，并抓住我的立场，我开始赚钱再次交易。所以这是我的故事，我相信所有新的赛人都会经过同样的事情。随着每个人都想赚钱，相信股票市场可以为你赚钱。你需要什么是正确的知识和小纪律。现在我正在竞争，甚至给予建议，帮助新的竞争与纪律交易。而且我也想说，如果有人是股票市场的新手，它取决于你想要做的交易类型（股票，选择，外汇，加密）和你想要交易的时间框架（分钟，小时，天，周，几个月，年）。你在期待日贸易吗？还是投资？然后他们应该追随下面的东西&amp;hellip;&amp;hellip;
·Money Control帮助您了解日常市场运动。
·投资应用程序为您提供非常用户友好的技术分析平台，完全没有成本。
·首先是我们需要对此有关股票市场的基本理念，我将强大推荐Zerodha varsity应用程序模块
·基本分析和技术分析的模块将足以让任何人帮助了解股票市场的工作。
·第二件事选择应用程序..我可以告诉你一个不能获得一个Zerodha提供的更好的界面和服务。
·他们有响应的客户支持
·在市场上，您可以找到许多平台，这些平台对于帐户开放，但每次交易都有许多隐藏费和更高的费用。
·市场上可用的所有应用程序Zerodha图表提供了最多的工具，让您可以进行技术分析。
我发布了我的电报频道中给出的呼叫的每日屏幕截图，即@dream_trading_india。您可以在月份检查并加入我做出体面的钱。
谢谢..
快乐贸易！
回答 3 HTML的开源优势可确保跨平台移动开发在以下区域更好：
反应本地：学习一次，写在任何地方
可以通过装饰的应用程序列表评估React Native的普及，这些应用程序的使用列表。 Instagram，Facebook Messenger，Uber，Flipkart，Skype，亚马逊Prime和Microsoft Onedrive使用原始的原始响应了多个平台的服务。
原生物反应的优点
Xamarin：由企业信任
应用程序代码写一次并在多个平台中重复使用，从而消除了平台错误的任何机会。
XAMARIN的优势
扑腾：美丽的原生应用程序在更少的时间内</description>
    </item>
    
    <item>
      <title>在哪里可以在哪里找到像clrs（算法简介）这样的算法问题，以便在我即将到来的考试前获得练习？</title>
      <link>https://xiangqingw.github.io/posts/where-can-i-find-algorithms-problems-like-clrs-introduction-to-algorithms-to-get-practice-before-my-upcoming-exam/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:27 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/where-can-i-find-algorithms-problems-like-clrs-introduction-to-algorithms-to-get-practice-before-my-upcoming-exam/</guid>
      <description>在哪里可以在哪里找到像clrs（算法简介）这样的算法问题，以便在我即将到来的考试前获得练习？ 回答 1 您已经确定了一个来源：CLRS！您可以在我的算法教科书中或在任何其他算法教科书中找到数百个问题。如果他们的出版商没有那么贪婪，那么有很多好的选择（以及几个是良好的选择）。
您还可以在世界各地的算法类网页上找到许多练习问题，如（再次）我的。
但真的，正确的人问是你的教练。不同的算法课程涵盖了该领域的不同方面，在不同的抽象，复杂性和严谨程度，以及不同的学习目标，一些课程强调理论设计和分析;其他人强调正确的实施和应用。一些算法课程假设很少或没有先决条件;其他人假设您已经在离散数学（包括基本图形理论和识别证明）中进行了课程，数据结构（堆栈，队列，优先级队列，词典），基本算法（递归，排序，搜索，树遍历，图形遍历），甚至概率和线性代数。帮助您为考试学习的正确问题强烈依赖于您课程的细节。
回答 2 是的，算法简介实际上是一个介绍性文本算法。它不是，从来没有打算成为计算机科学的介绍性文本。我们假设读者有一些编程经验，包括递归，并且知道如何读写严格的数学证据。分析本书中算法所需的离散数学事实出现在附录中。
作为算法文本，它从插入排序开始，其中最简单的排序算法之一。在最基本的最基本中，前几个部分中涵盖的算法和数据结构是最基本的。我认为这本书的前六个部分中的材料（除了主演的部分，我们认为研究生级材料）是计算机科学佳能的一部分。
我明白有些人认为这本书超出了介绍性。我们确实进入了一些材料，我们在数学中没有拳击。然而，从材料开始的地方，这本书绝对是一种介绍。
下一步是什么？ Don Knuth是计算机编程的艺术，我认为最伟大的书籍（这是一个多卷集）计算机科学已经拥有或曾经有过。
回答 3 我对微软进行了实习。我w
我可能不是正确的人才讲述正确的程序，但我根据旧时间算法的旧时间套件社区的建议阅读本书的选定部分。虽然我不认为自己擅长算法，但我相信这本书有助于我对算法和分析的理解。
CLRS是一本关于算法中所有主要主题的覆盖的书，很难被读为算法课程中的规定文本。坦率地说，我阅读本书的主要动机是通过女士，谷歌等等大面试进行。
我对微软进行了实习。我不是那么自信，但我把它交给了最后一轮。在那个时候，我对算法设计技术并不那么舒服。我没有清理面试。然后我开始在初中阅读这本书。正如我读过的，我能够指出并说这一章对我来说很重要。我试图解决练习中给出的问题，或试图寻找来自orkut社区的解决方案。 （有一个社区讨论CLR的问题）。我确保我解决了我读的章节中的每个问题。
我突出了下面读取的部分。我不是说这是正确的正确方法，但我觉得我的章节的选择足以在采访中做得好。请注意，这是我的具体情况，我并不声称阅读突出显示的部分将帮助您破解任何面试:)
同样重要的是要注意，在突出显示的章节中解决所有问题都是善于阅读内容。
我的答案主要与面试准备相比，而不是竞争力的编程，但我仍然认为这个选择将是纬纱子集。
回答 4 第二个版本的McGraw-Hill版本含有包含Java实现的CD。这些是作者批准的唯一可用的实施。
释放第四版时，还将有可用的Python实现。
回答 5 如果在认知域中考虑盛开的分类法，则会意识到推导算法需要合成。合成。合成是分类学中的第二个最高水平，这意味着它自然地追求它：知识，理解，应用和分析。现在，你似乎善于获得知识和获得的理解。你似乎能够应用你的学习。然而，为了解决算法/编程问题，您仍然有两个甚至更高的学习。您必须使用分析和然后致力于综合。分析包括什么？根据维基百科，它要求您通过识别动机或原因开始将信息分解为零件。您使用合并排序完成了吗？您是否知道为什么我们反复打破原始列表两个部分？您是否考虑过合并排序的行动导致O（NLGN）O（NLG⁡N）运行时？您是否明白为什么您必须在两个组中将每个子列表合并？有分析了算法中每个点的属性？您是否知道为什么这些属性必须保持真实？维基百科说，随着分析，您应该考虑元素，关系和组织原则。您将更好地编写某些内容，您将更好地编写综合。你会更好地准备合成，因为你会理解为什么John Von Neumann设计合并他所做的方式.ONCE你了解他的设计动机，你将更好地装备来修改算法来满足更改的要求。这是关键解决算法问题。您首先获取数据结构/算法/范式/运行时分析/校样的信息派生/等。你已经完成了，你通过应用你学习的东西来巩固你的理解..你代码哈希表从Scratch.Maybe你实现了一个高效的解决方案到您在线阅读的最大差距问题.Hopely，您将花时间分析您所学到的内容.Break将其分解为他们的部分。地理解它们。为什么除了曲柄之外还为什么自己，好像他们是你自己的发明。当你收购所有这些信息时，你会回到合并排序问题。您分析它，您将理解合并排序的权力，您将返回Merge排序问题。事实上，您可以通过以线性方式比较两个元素来合并列表。在要求的变化中，您可以在线性时尚的时间中不再比较两个元素.INSTEAD，您必须在A中比较KK元素你问自己，如何在线性或近线性时间找到最少的KK元素？你上个月学到的最低几个二进制堆可以完全可以做到你所需要的。然后，你问，我需要什么？最小值？每个的第一个元素KK Lists.so如果我们将每个列表中的第一个值存储在最低二进制堆中，我们只能弹出最低限度。然后我们觉得重新回到双向合并中发现它发现的最小值。它插入了它列表然后将指针移至最小值的列表中。为我们翻译，我们可以将最小值添加到结果数组。我们知道哪个子列表我们从中提取了最小值，但是什么推进该列表中的指针意味着？它意味着新号码现在在列表的前面，这意味着一个新的数字应该是我们的最小堆。所以我们将下一个数字放在堆中并重复。这似乎就像它会起作用，每次我们做一个NN项目列表的KK路合并时，它需要O（nlgk）o（nlg⁡k）time.as您可以看到，一旦您拥有大型域知识的语料库，您将准备好合成。您的思维将在您知道的不同算法和数据结构之间进行连接。您将开始连接约束TS和模式和范式。很少有人在没有从伟大面前学习的伟大的工作。在我们面前的伟大思想中。在我们面前的一代人。阅读Knuth，Dijkstra，Rabin的着作。很难代替他们所做的事情这个领域&amp;hellip;&amp;hellip;然后变得灵感。最后，学习解决算法的巨大成分是相信自己.Leally。
回答 6 不，它不现实地锻炼并在算法介绍中实现一切。
即使它是现实的，它也不是可取的。机会成本（你不能花在其他事情上的时间）远远超过了价值。
生活是有限的。无论哪些方式都可以花费更好的时间和能量。
这是一个介绍算法的人，作为他的专业图书馆中的一个不可或缺的书。
回答 7 所有解决方案到前10章术语表明到算法研究组
编辑：我没有写这些解决方案。一些解决方案可能是错误的。自行决定使用。
回答 8 以下是我使用的主要参考：
我实际上从Millar＆Ranum开始（2011），它解释了明确的算法和数据结构概念，并在Python中提供了实现的实现，我学到了很多。此外，为了深入研究这些主题，我潜入Cormen等人。（2009）和乔丹（2005）讲义说明;前者当然是经典且全面的，包含现代算法和数据结构概念，理论基础和伪像，以及后者是前者的精彩摘要，并由机器学习硕士学。两个参考资料都强烈推荐。:-)
免责声明：此答案由我的GitHub Repo的自述文件复制。
回答 9 通过Google非常快地搜索：谷歌
以下是CLRS第三版的解决方案手册：
Chegg.com.
http://waxworksmath.com/authors/a_f/cormen/writeup/weatherwax_cormen_solutions.pdf.
GZC / CLR.
算法简介（9780262033848）
https://gatecse.in/w/w/w/images/7/7d/introductiontoalgorithms-cormensolution.pdf.
https://yinyanghu.github.io/files/clrs.pdf.
另请检查一下：是否有解决方案对算法（CLRS）在线问题进行解决方案？
回答 10 算法概论（通过Cormen）是基于算法的所有算法的母版。Cormen和各种研究人员已经连接了各种领域并制作了一本手册。本书足以满足算法。
您还可以遵循一些链接。
NPTEL - 计算机SC：数据结构和算法</description>
    </item>
    
    <item>
      <title>如果我们也可以在Linux中运行.exe文件，为什么人们使用Windows而不是Linux？使用Linux的优缺点是什么？我有兴趣使用Linux操作系统。</title>
      <link>https://xiangqingw.github.io/posts/why-do-people-use-windows-instead-of-linux-if-we-can-run-exe-files-in-linux-too-what-are-the-pros-and-cons-of-using-linux-i-am-interested-in-using-linux-operating-system/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:27 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-do-people-use-windows-instead-of-linux-if-we-can-run-exe-files-in-linux-too-what-are-the-pros-and-cons-of-using-linux-i-am-interested-in-using-linux-operating-system/</guid>
      <description>如果我们也可以在Linux中运行.exe文件，为什么人们使用Windows而不是Linux？使用Linux的优缺点是什么？我有兴趣使用Linux操作系统。 回答 1 但你不能跑他们所有人。确实存在Windows程序，这些程序不是
您将能够在Linux中运行许多.exe文件，多年来，葡萄酒（在Linux上运行Windows程序的主要兼容层）等项目只有更好，更有能力。除此之外，由于葡萄酒是开源的，它有几个专门的叉子，这意味着与某些软件类型非常合作。例如，Crossover主要针对Microsoft Office套件，而Steam的Proton项目旨在允许在Linux上运行许多Windows游戏。
但你不能跑他们所有人。无论出于何种原因，在任何现有仿真图层都正确运行或工作，都存在Windows程序。有时它可能需要一些修补来获得特定的程序工作。
那说，不要让那个阻止你。完全可以运行一个双引导系统，您可以在其中启动是否要启动到Windows或Linux时选择。这两个人完全分开;您只需选择您需要的那个。这需要在安装上设置分区时需要适度的技能，并且您应该始终且我的意思是在开始使用系统的分区时暂停搞乱了重要数据。它始终有可能导致数据丢失，因此我不能强调这一点。 （当然，你应该备份重要数据，无论如何;你在这样做，对吗？）
您还可以使用像VirtualBox这样的虚拟机应用程序，以在Linux内的虚拟机上运行Windows安装。这不是绩效关键软件如​​游戏的好解决方案，但可能对铣削的东西工作很好。
Linux将与Windows不同。首先，没有一个Linux操作系统，有很多，许多不同的发行版可用。您可以随时为您的第一个相当轻松选择薄荷或ubuntu，这旨在非常用户友好，并且需要与终端的很少的互动。 （但是，最终，学会使用终端 - 它是一个非常强大和有能力的工具，并且很容易有很多东西在GUI中是一个真正的皮塔饼。它有点学习曲线，但它是值得的。）
要从闪存驱动器或DVD建议，我建议在实时模式下在实时模式下运行所选的发行版。这将让你在没有实际安装任何内容的情况下尝试。 （请注意，这将比安装在硬盘上的实际操作系统会慢一点，而且还没有办法，所以不要让看似慢慢的性能阻止你，如果你这样测试。）试试一些不同的东西 - 访问互联网，打印出一些东西，无论你通常做什么。看看它是如何适合你的。当然，您也可以在Windows中的VirtualBox实例上尝试，但可能与实际运行它的实际情况完全相同。
确实意识到它会有一定量的学习曲线，而且您可能必须努力弄清楚如何做事。如果那不是你对此有兴趣的东西，那么它可能不是一个很好的项目。但是，如果您有兴趣了解它是如何工作的，并且不介意看几件事，请给予它！
回答 2 为什么人们跑窗户？因为它们对一项做大量广告的操作系统感到满意。他们认为，如果他们为操作系统支付钱，那就更好了。有时它有时它不是。什么是Linux的缺点和专业人士。Linux免费。从一开始，有一个防火墙，是安全的，您可以在其中模拟和运行.exe文件。只有Windows制作的程序，不能在Linux下运行。但如果你喜欢它，你可以尝试，摇滚，ubuntu。这将是一个简短的答案。
回答 3 问：如果我们也可以在Linux中运行.exe文件，为什么人们使用Windows而不是Linux？使用Linux的优缺点是什么？我有兴趣使用Linux操作系统。
答：因为Linux是一个可怕的选择
回答 4 人们使用Windows，因为绝大多数计算机预先安装了Windows。Linux主要由用户安装，主要用于Web和云服务器。
Linux可以使用Wine，尝试将Windows系统调用映射到Linux的系统进行选定的EXE文件，其成功程度不同。
Linux是强大而稳定的，安全性良好。与具有单个集成GUI的Windows不同，Linux使用X窗口系统，具有各种桌面演示文稿，&amp;hellip;
回答 5 为什么人们也可以在Linux中运行.exe文件也可以使用Windows而不是Linux？在Linux中运行Windows程序只是某种功能.Wine在使它发生的情况下取得了很大的进步，但它的支持仍然是默赫。为什么人们会跑Windows而不是Linux？有无数的原因。计算世界中有很多不同类型的人。希望操作系统只工作并离开他们的方式。窗户可能适合该账单。它在几乎所有现代硬件上运行（过去5年中的现代）。它几乎支持每个NIC，WiFi卡，打印机和Man所知道的USB配件，因为赢得10赢了10次出现。他们可能是游戏玩家（某事Linux越来越好，但仍然不好）喜欢在释放日玩游戏（在Linux中没有发生）。其他人喜欢在每个方面都知道每一个亲密的细节，或者在各方面调整他们的操作系统&amp;hellip;&amp;hellip; Linux吸引这些人他们可以看到引擎盖（理论上&amp;hellip;&amp;hellip;）下发生了什么。他们可以选择，到分钟d etail，什么是不是在他们的系统上。他们愿意处理少于恒星的硬件支持（他们会争论Linux / BSD / etc可以运行数百个架构，这是真的&amp;hellip;&amp;hellip;但忽略这个事实已经过十年的打印机在Linux中没有完整的功能，有些网卡只是根本不起作用，有些事情是边缘的，需要很多工作来继续运行（咳嗽，NVIDIA司机，咳嗽咳嗽） ）。他们可能不会游戏最新的标题。源代码的透明度为Linux用户提供了一种安全感（但是，它可能与声称的感觉一样有用&amp;hellip;&amp;hellip;许多眼睛造成少数虫子。但是有虫子持续十年来，源代码可查看&amp;hellip;&amp;hellip;包括允许完全生根的攻击者从未登录的系统完全生根&amp;hellip;代码上的眼睛必须知道他们正在做什么&amp;hellip;&amp;hellip;这是一个更小的部分人口）.Linux用户可以更多地重视他们的隐私..并感到舒服g那个Linux程序更加开放关于他们发送回他们的维护者的遥测。使用Linux的遥控器 - 它可以像你想要的那样轻量级，但如果你用它作为每日驱动程序&amp;hellip;&amp;hellip;那想要进入账户，这不是运行Linux所需部分的GUI。它通常相当快（相同的系统，从USB运行Mint Linux我的WiFi看到近400MB / s下载，Windows Install Sees 200）。它通常运行很棒在常见的情况下，旧硬件（更新或更少的常见硬件是掷骰子，直到社区为其写下驱动程序）
缺点 - 目前的硬件不太受支持，游戏是关于垃圾。需要调整。我把它放在这样的情况下，我一直试图在这个笔记本电脑上稳定地运行Linux（目前在Windows中）。它2018 HP Envy X360.靴子进入Debian 11只是精细，所有固件都在那里.Kernel是一点旧的，但是很稳固。不合适的时间（我已经给它几个小时）就足以让我的WiFi卡初始化了。它只是留在init循环中.boots在大约15秒钟内到登录屏幕，但没有wifi它没有比一个低功耗的桌面更好，完全击败了膝上型计算机的目的.Ubuntu 21.10 - 相同的故事20.3 - 启动，能够初始化我的WiFi（根据我的日志拍摄7分钟，至少10个接口重置）。快速下载，等地通过日志，并查看它推荐的Irqpoll被添加到引导options.it靴子第一次迅速，WiFi立即初始化，然后无法启动EAGAI n.RIED引导进入以前的内核（没有那个选项）和nope ..仍然不会引导，甚至没有进入一个CLI.I放入Live USB，靴子纯粹。 - 安装和默认所有选项..不会启动进入OS.Debian，Ubuntu，Windows所有启动Fine.all硬件在Windows中完美地工作到17秒内的Windows靴子才能登录提示&amp;hellip;&amp;hellip;一个完整的2秒比我的Debian和Linux Mint Installs慢一点试图在这台笔记本电脑上运行它。桌面运行Debian，它的摇滚稳定。免责声明因为有人会迂给它并在扭曲中获得他们的内衣.. Linux只是内核，我们真的应该把它称为一个Linux发行版。其他人们将讨论它是GNU / Linux &amp;hellip;&amp;hellip;我说，没有人真正关心。</description>
    </item>
    
    <item>
      <title>如果获得选择，您会消耗哪种类型的信息？</title>
      <link>https://xiangqingw.github.io/posts/what-type-of-information-would-you-consume-if-given-a-choice/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:27 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-type-of-information-would-you-consume-if-given-a-choice/</guid>
      <description>如果获得选择，您会消耗哪种类型的信息？ 回答 1 积极的经济新闻，但每篇文章都有一个暗示读者几乎可以帮助局面让它变得更好。
回答 2 圣洁他妈的。我要把你们吹走了。
我只需要一个超级大国，但我会玩，这是我的三个：
最后的2非常简单，所以让我们说他们是在那里，因为我需要填充这个答案，无论如何他们都很整洁。
操纵边界
你有没有听说过Indhe Japanese Game Touhou项目？很快这是一系列拍摄，子弹地狱/ 2D战斗游戏，你是日本神社少女，一个巫师女孩或一堆其他动漫女孩，解决某些事件。
游戏本身就是ve
圣洁他妈的。我要把你们吹走了。
我只需要一个超级大国，但我会玩，这是我的三个：
最后的2非常简单，所以让我们说他们是在那里，因为我需要填充这个答案，无论如何他们都很整洁。
操纵边界
你有没有听说过Indhe Japanese Game Touhou项目？很快这是一系列拍摄，子弹地狱/ 2D战斗游戏，你是日本神社少女，一个巫师女孩或一堆其他动漫女孩，解决某些事件。
游戏本身非常有趣，角色和幽默非常有趣。主要是关于游戏的一切都基于日语/亚洲哲学和神话。
这将我们带到了任何媒体中我最喜欢的角色之一：
Yukari Yakumo
这位老太太可能看起来绝对无害，但她利用了惊人的力量
操纵边框
她是基于神话日本生物素玛onna，这意味着缺口女人。传统上，一个隐藏在抢夺猎物空白中的恶魔女人。但是荷兰项目给了它一个新的和有趣的扭曲。
边界的操纵意味着允许此字符操纵您可以想到的任何边框。差距的束缚是什么？边框
它基于所存在的一切都有边界的概念。有一个边界将你的桌子与地面分开，富人和穷人之间的边界，生死之间的边界。是身体或概念的，一切都有边界！
这种惊人的力量让您可以控制在边框内部的东西，扭曲它，转动它，摧毁它，摧毁它，吻它，做任何你想做的事！换句话说，边境A和边境B之间的间隙是完全对您的控制来控制，因为您控制边框结束并启动！
这个力量让你做什么？除了足够聪明的话，究竟是什么。
作为一个孩子，在理解这个角色的力量实际上绝对是惊人的，而不仅仅是开放门户，我的思绪绝对被吹走了。
我现在是你的新上帝！
回答 3 是的，最有可能，但只有某些种类的不朽。让我解释;经典的不朽剧团有十种变化。有些人很好，并将成为任何拥有它们的福音，有些是诅咒。在我说我拍摄的之前，我拒绝的是，让我们走过来，让你做出自己的决定，这是好的，这是坏的。
所以，这是十种不朽的变种。我会诚实地说，大多数这些似乎对我来说都是一个坏主意。但是，如果向我提供数字3,4或10 &amp;hellip;是的，我认为我不认为我可以拒绝他们。
谢谢阅读。
回答 4 只有一个？
这个世界上有成千上万的事情🌎
最重要的是，我相信从社会中根除，即，
不切实际的美容标准
我们社会中的人有一个女孩或一个男孩应该看起来像你的样子。
他们背诵了一个长期的名单来满足你..
公平的皮肤检查✔
瘦，但没有那么瘦
皮肤检查没有斑点
高，但不是那么高的检查♥
列表永远不会结束
你有没有想过谁甚至制定了这些标准？谁有设定了这些标准？为什么人们甚至跟随它？我们必须向自己询问这些问题，因为
只有一个？
这个世界上有成千上万的事情🌎
最重要的是，我相信从社会中根除，即，
不切实际的美容标准
我们社会中的人有一个女孩或一个男孩应该看起来像你的样子。
他们背诵了一个长期的名单来满足你..
公平的皮肤检查✔
瘦，但没有那么瘦
皮肤检查没有斑点
高，但不是那么高的检查♥
列表永远不会结束
你有没有想过谁甚至制定了这些标准？谁有设定了这些标准？为什么人们甚至跟随它？我们必须向自己提出这些问题，因为，老实说，我们没有答案。</description>
    </item>
    
    <item>
      <title>您更喜欢哪个应用程序作为初学者开始游戏编码？</title>
      <link>https://xiangqingw.github.io/posts/which-app-do-you-prefer-i-start-game-coding-with-as-a-beginner/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:27 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/which-app-do-you-prefer-i-start-game-coding-with-as-a-beginner/</guid>
      <description>您更喜欢哪个应用程序作为初学者开始游戏编码？ 回答 1 出于什么？
我会假设你的意思是IDES VS游戏引擎。几乎总是从游戏引擎开始。它会为您节省大量工作。Unity和Unreal是好的，戈达是开放的。
但问题确实问我愿意的愿意。我更喜欢你直接的代码和IDE。您可能希望更改问题。
回答 2 制作游戏的比编码更多。但是，您是对的，您需要游戏引擎和编程语言。如果您刚刚开始，您可能希望从Unity3D开始。
回答 3 你好，我写了这个答案，因为我相信有很多人真正想要学习应用程序开发。你提到了应用程序开发我认为你指的是Android或iOS，但下面的描述几乎所有的平台。箴言，什么平台？Android / iOS / Web应用程序/应用程序可以在Android或iOS上自然运行，如浮动。和Android Studio for Android开发。我在这里提到的原因是因为所有这些IDE都有一个共同点，它是SDK（软件开发套件）.now，如果你在历史上更深挖掘，我们曾经在历史上挖掘我们曾经创建Android应用程序使用Eclipse.Even今天的颤音开发，您只需要SDK，您可以在几乎任何着名的IDE中代码，如IntelliJ或编辑器，如Visual Studio Code.so，基本上您需要的是Java的编译器或JDK以及Java的jdk和jdk ED平台SDK.You还必须知道如何在所需的IDE / Editor.SO中配置SDK，基本上避免这些步骤公司在有自己的IDE上运送。只需要一种语言，以便建立像扑波一样的应用程序Dart和Web应用程序使用JavaScript，另一方面，您可以使用Kotlin和Java（Dart for Flutter for vetrutter）等平台，您可以使用android本机开发。可以使用Python，C＃.so，你需要选择你的毒药。第三节，从哪里开始，从哪里开始？初学者=&amp;gt;学习编码。如果你学习你的第一语言，请不要通过观看视频来学习。或者如果你可以做读的书籍.se，学习语言和学习编程是2种不同的东西。internet充满了如何学习这种语言以及如何了解那种语言，但有很多关于如何学习编程的好文章（其中很少有人提到无法教导编程）。但是，我给你一个我在这里，在这里，从练习开始.Also，当我们读取一些我们认为应该这样做的事情时，尝试一些新的像，假设说话，或者如果我已经提供了那种机会，那么我会做什么在这种方式。所以，基本上，当你得到解决练习运动的信心，然后阅读练习（为了一个想法），并对你的心来做任何问题的事情。我相信所有开发人员都认为这是不同的是常见的ieto探索并尝试一些新的东西。，诚实地带来了时间和练习。所以，有耐心并准备失败，但请记住，失败并不意味着你不能这样做，它只是你可以做到的在这个阶段做到这一点，你肯定可以在其他一天。所以，如果初学者，就可以尽可能多地避免互联网。在我们学校和大学背后的原因他们就像你有一个问题，就像你有一个问题一样为完整等级写出确切的答案。但是，编程不是那样的，它就像你可以用一个问题的问题。所以，避免互联网不关心确切的结果只是关心你正在尝试的不同方式，以便解决一个问题。如果你不重要甚至可以解决它或者没有.Intermediate =&amp;gt;如果你是中间的话，那么提供一些时间来学习新的语言语法，以防你为某些平台学习一些新语言。你有语言的基本思想，然后学习那个平台的基础知识，然后学习那个平台的基础，喜欢如何制作后台服务，如何制作UI，如何制作无限的水平/垂直布局视图，屏幕/活动或片段的生命周期（Android），如何创建新屏幕并通过屏幕周围的数据和类似的东西。您会在官方网站上找到所有内容。基本上，正如您已经中间的，您只需要学习某些特定​​平台中的基本事物并休息，你可以弄清楚你有一些问题的问题.Advance =&amp;gt;哈哈，哪有这回事在编码中被称为提前水平。我们只是上瘾并尝试新的东西和技术。所以在我的意见进步意味着你在尝试或学习的东西有多信心新事物。现在应该是有趣/复杂的问题我应该做什么应用程序？看，在官方网站或任何书籍中，他们可以告诉您如何制作一个小例子的应用，但创建一个大应用程序是完全不同的游戏。
回答 4 在App / Game开发中介绍一门免费在线课程，以获得制作应用程序或游戏所需的初始感。另外，与一些这样做的人交谈。不必成为EA的高级开发人员，但你很容易找到一个是游戏发展学生的人，几乎毕业。他们愿意帮助您了解它需要多长时间。
回答 5 如果您想从划伤开始并学习基础，您实际上可以在不使用任何引擎的情况下创建简单的游戏。以下视频显示如何为Kotlin中的Android构建一个简单但完整的游戏，无需发动机
Android |从Java到Kotlin |您的第一个Android游戏
这足以建立一个2-D游戏。之后，您可以学习统一的产品，以创建更复杂的游戏
回答 6 简短答案：C＃但Unity的版本。
答案更长：
通过用于游戏开发的学习语言，您可以进行两种方式。
首先学习语言，然后参加游戏开发或
只要学习“游戏开发语言”。
为什么要在进入游戏开发之前学习一种语言？
在谈论游戏开发时，没有具体或定义的语言是标准的标准，但是，有些程序确实有标准语言，最终取决于您希望开发游戏的程序。
在进入游戏发展之前，学习语言可以真正有帮助
简短答案：C＃但Unity的版本。
答案更长：
通过用于游戏开发的学习语言，您可以进行两种方式。
首先学习语言，然后参加游戏开发或
只要学习“游戏开发语言”。
为什么要在进入游戏开发之前学习一种语言？
在谈论游戏开发时，没有具体或定义的语言是标准的标准，但是，有些程序确实有标准语言，最终取决于您希望开发游戏的程序。
在进入游戏开发之前，学习一种语言可以真正有帮助，它允许您快速学习下一个语言并在需要时使用第三方工具。
这种情况我建议为Android学习Java，并在您的学习时使用Android Studio或Eclipse。这将允许您制作Android应用程序，也可能是巨大的视频游戏。
现在关于学习游戏发展的语言。
首先，你必须挑选发动机。有很多选择。然而，我推荐Unity 3D用于移动开发甚至PC开发，如果您是一个较小的尺寸的团队。
如果您选择Unity 3D，您真的需要学习一种语言，这是C＃但不是常用的C＃。通常，您将使用C＃用于iOS开发和制作Apple Apps。但是，您还在Unity 3D中使用C＃，但Unity的C＃版本有点不同，但您也可以轻松了解它。所有您所要做的就是搜索YouTube上的Unity教程，如果不是数千小时的优质内容，您将被留下数千小时。在Unity中，您还可以选择使用JavaScript的选择，如果您正在开发Android的应用程序，您将常常使用JavaScript您需要学习专业版本。然而，行业已切换到C＃，我建议学习。</description>
    </item>
    
    <item>
      <title>软件工程师的编码速度是否会对编码面试结果有任何轴承？</title>
      <link>https://xiangqingw.github.io/posts/would-a-software-engineer-s-coding-speed-have-any-bearing-on-the-coding-interview-results/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:27 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/would-a-software-engineer-s-coding-speed-have-any-bearing-on-the-coding-interview-results/</guid>
      <description>软件工程师的编码速度是否会对编码面试结果有任何轴承？ 回答 1 是的。
在编码面试中，候选人的目标是在特定时间框架内实现很大的结果。因此，存在许多微决策，其中候选人在时间和机会之间进行权衡，以获得所需的结果。
要求澄清问题，在开始编码之前在纸/白板上勾勒出解决方案：消耗时间，大大降低风险。
写作测试案例：消耗时间，降低风险，提高输出质量。
没有明确的计划开始编码&amp;hellip;&amp;hellip;
回答 2 从面试中讲述某人编码速度是不可能的 - 在任何情况下，如何快速为特定要求生成代码是一种复杂的互动，可以清楚地思考要求，提出数据结构和算法的能力能够将新功能集成到现有软件中 - 能够将这些东西转换为实际代码的行 - 以及能够进行干净地代码以最小化调试时间。
您真的无法从简要编码面试中讲述任何玩具问题来解决这些东西。
回答 3 一些初创公司只想要快速编码器。他们将让您在线编码测试，并为您提供一半的正常时间来完成它。这可能是一个好主意，因为这样的公司将无休止地释放一个关于代码速度的投诉，忽略其他员工代码的远远高谷内容。
回答 4 我宁愿使用一个无处不染的房屋挑战。它并不复杂，它不应该花很长时间，但我想看到他们在不受压力的时候写的。我也想让他们选择支出额外的时间。一些提交具有很好的文档，有些具有广泛的单元测试，有些扩展了分配，并将Code Sample集成到标准应用程序容器中。完整的吹申请是矫枉过正，但我​​很欣赏努力。
在我做实时编码的罕见情况下，时间限制是面试插槽。我有一系列挑战，以非常非常，非常基本的，结束，令人难以笑得很棘手。如果任何人可以在一小时内成功完成所有这些，我都没有其他问题。
回答 5 不，你键入的速度越多。我永远不会通过编码速度来判断候选人。这是一个垃圾指标
回答 6 它绝对可能是一个因素，但不是最重要的因素。我认为你的工作质量更为重要。
回答 7 如果有一段代码带给我很多时间
我不是编码访谈的粉丝。
我在编码面试中做得很好，然后在一个棘手的语法问题上进行了困扰。这反映了我的偏好，避免棘手的语法，如果可能的话。在那个特定的面试中，邪恶的智慧CTO没有通过我。它是那些快速移动，多任务等的工作之一。是我的缓慢，还是我可检测到的缺乏热情？ CTO真的对我留下了深刻的印象，但不是一种让我想在那里工作的方式。
我承认有时候我可以很慢。我喜欢思考事情。
如果有一段代码带我花了很多时间来思考，然后我发现一个案例，插入一个小表达，它使事情工作。然后我这样做。那是好吗？或者，只是重新定位炸弹，直到它在稍后的时间和发布？
当我在那些情况下，在现实生活中，我更愿意以凡人可以理解的方式了解和重写事物。
通常，该问题未通过更好的算法解决 - 它涉及使事情更清晰，并优化删除真正的瓶颈。
回答 8 最低可接受的速度是您能够在指定的时隙内呈现解决方案。鉴于您获得30-45分钟来涵盖解决方案的夫妇迭代，编码速度根本并不重要。
回答 9 什么是编码速度？
键盘技巧？速度弄清出合适的算法？别的东西？</description>
    </item>
    
    <item>
      <title>为什么我收到我没有要求的谷歌验证码？</title>
      <link>https://xiangqingw.github.io/posts/why-did-i-get-a-google-verification-code-i-didnt-request/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:26 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-did-i-get-a-google-verification-code-i-didnt-request/</guid>
      <description>为什么我收到我没有要求的谷歌验证码？ 回答 1 您的帐户可能很容易受到不同的攻击。如果最近从某人的设备/网络咖啡馆登录您的帐户，您忘记退出概率更高。有可能有人试图登录您的帐户。
谷歌发送验证码时？
在您的情况下，我会暗示你解决方案： -
回答 2 谢谢你的A2A
当有人试图访问您的Google帐户时，将发送Google验证码，并且使用此验证码设置2FA。
如果您确定您从未要求验证码，则可能意味着有人试图使用您的电子邮件和密码登录您的帐户。
在这种情况下，我建议您更改密码。
希望这个答案。
干杯
回答 3 可能有很多原因，但其中一些是
谢谢，祝你有愉快的一天
回答 4 首先，当您使用两种不同的小工具来访问您的Gmail帐户，使用两个不同的小工具，iPhone谷歌有时希望Cinirm无论是使用这两个小工具的同一个人。
当您的Gmail帐户同时在两个不同的位置打开时。
当你尝试忘记你的密码时，它会因为安全而强调让你免于恶意
回答 5 联系Google并查看您的历史记录。确保是你。
回答 6 错误或故意通过重置密码来访问您的Google帐户的人。
回答 7 假设您已打开2个因素身份验证，可能有人试图访问您的帐户。建议尽快更改您的帐户密码以获得良好的衡量标准。这一天和年龄不能太小心。
只是我的2美分:-)
回答 8 只可以是那些人胖捏脚本的手机号码并错误地进入了你的。但如果您确实有一个Google帐户，请查看其安全配置和最近的事件：登录 - Google帐户
回答 9 您需要立即采取步骤来安全地更改您的Google密码，所有这些措施，然后务必通过使用已知安全电子邮件地址或不起区的蜂窝电话号码打开2步验证来添加第二层安全性T属于其他任何人。
回答 10 Google验证码是从谷歌发出的六位数代码，该代码为您的帐户添加了额外的安全性层。
回答 11 这可能是一个骗局，但在任何情况下都忽略它。与消息的任何互动都可能导致麻烦。
回答 12 如果有人要求我询问Google语音验证码，我该怎么办？
它可能是一个尝试的身份盗窃和/或网络钓鱼攻击 - 有人试图接管您的Google语音帐户或将您的GV号码转移到自己，以便像你一样行事，例如，获取对您的银行帐户的访问权限。这不好。
把它视为犯罪 - 除了你通常可以打电话给警察的罪行 - 就像其他人一样说 - 不要分享任何代码，阻止试图获取代码的人，在警报上就是这样的其他尝试。
回答 13 谷歌在启用验证的访问权限时生成代码。如果您在不请求的情况下获得，那么这意味着有人为您提供。是时候让您的帐户更安全了。详情在他们的产品论坛上。
Google Groups [https://productforums.google.com/forum/m/# !! topic/gmail/gjtg5npedwg]
回答 14 Google帐户验证码是：</description>
    </item>
    
    <item>
      <title>什么是好电脑购买？</title>
      <link>https://xiangqingw.github.io/posts/whats-a-good-computer-to-purchase/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:26 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/whats-a-good-computer-to-purchase/</guid>
      <description>什么是好电脑购买？ 回答 1 具体点有预算。
如果您想要预算PC，请不要超过20k-30k。使用4GB RAM和1TB硬盘获取Pentium PC（G4560或更便宜的G4400），以满足您将要做的所有要求。 （也支持Windows和Linux）。
现在，让我们来到业绩部分。
今天有两种类型的计算机，一个是性能，另一个是用于游戏。
他们都没有那么多的差异，但它们之间存在简单差异。游戏计算机将始终需要更好的显卡。你仍然可以选择低级
具体点有预算。
如果您想要预算PC，请不要超过20k-30k。使用4GB RAM和1TB硬盘获取Pentium PC（G4560或更便宜的G4400），以满足您将要做的所有要求。 （也支持Windows和Linux）。
现在，让我们来到业绩部分。
今天有两种类型的计算机，一个是性能，另一个是用于游戏。
他们都没有那么多的差异，但它们之间存在简单差异。游戏计算机将始终需要更好的显卡。您仍然可以选择低级（至少有8个线程或通常的4个核心）和一个良好的GPU，以便在60fps下运行任何游戏。
一些流行的图形和处理器组合包括，
他们也有成本，具体取决于您想要玩的分辨率。所有组合都适用于1080p 60fps（第一个）。您可以去电脑商店，并在40k-150k下获得它。 （其他规格部件为8GB DDR4 RAM，120GB SSD + 1TB HDD，650W电源）
性能主要需要更好的处理器（英特尔或AMD）。您将需要至少一个8个核心处理器来开始。
有些良好的性能PC组合，
所有这些都非常适合CAD，视频编辑，机器学习（您需要RTX GPU），架构应用程序以及甚至可以思考的游戏设计和其他应用程序（对于游戏设计，您需要8到12个核心处理器您可以获得的最佳图形）。
如果您想要便携式计算机，只需为正常工作的30K笔记本电脑和50k +为高密度的应用程序。
回答 2 在任何地方，没有超过10,000美元。这不是一个问题可以像那样回答。
汽车费用是多少？房子的价格是多少？这一切都取决于规格。
回答 3 美国回答：
您不需要超级游戏玩家，或者在附近，只是一个将工作的坚固机器。所以，说，这是一个建议：
那是 - 〜350美元最大。 （您的软件代码可能会花费额外的价格）
为什么使用的笔记本电脑？磁盘CADDY允许您运行编程内容，然后用另一个操作系统在另一个硬盘上断电并交换。一个测试系统和一个工作系统。这是一个多功能性的例子：
干杯!
//补充说：注意本机有DVD R / W，因此您可以在其上观看电影以及WiFi，蓝牙（我必须为10美元添加蓝牙卡）和6（注6）USB端口。您还可以将其连接到码头（但是，但码头不可见），SD卡读卡器和PC-Express读卡器。原价，新？ 〜2,000美元。
回答 4 考虑购买使用的购买和有良好评论;对于大规模生产的计算机，我最喜欢的Lenovo品牌。对于笔记本电脑来说，ThinkPad很棒。
您无法使用Intel CPU和固态驱动器出错。
回答 5 但即使这是这种情况，硬件完全最新，那么电力W
它根本不会发生。考虑一下。来自4年前的高端游戏计算机，不会播放今天的一些游戏。这不是在您的情况下播放，无法将设置设置为MAX，但不会播放，因为硬件不支持当今高端三重标题的最新编解码器和软件。按顺序单词，如果最后一个硬件更新仅适用于DirectX11并且当前在DirectX12上，游戏是无法播放的。本身就是这个想法的垮台。
但即使是这种情况而且硬件完全迄今为止，它也不会跟上未来可用的东西。游戏不断发展，实际上在每年更新的PC游戏玩家中实际上是一个不断跑的笑话。去年它是&amp;hellip;&amp;hellip;但它可以运行脆弱3，今年它&amp;hellip;&amp;hellip;但它可以运行巫师3（与&amp;hellip;&amp;hellip;但是它可以运行辐射4是一个紧密的第二个）。具体而言，它不仅仅是运行游戏，而是它在最大质量设置上运行游戏，并实现最低30个FPS的绝对值。踢球者每年都在回顾，看看较新一代硬件是否能够在最大设置上运行前一年的游戏，并达到超过30fps。说真的，我不能弥补。这就是你要求我们为你做的事情，这本身就是非常困难的事情。现在，如果你对今天的游戏和一切都是以前的一切，那么OK没有出汗。但是，你谈论建立一台计算机以处理今天的游戏的压力，这本身就是一个困难的以及明天的东西，使其能够处理最大设置的游戏。我是一个乐观的人，但我也在现实地思考，并在消费者的角度来看是不可能的。
考虑一下，游戏机在720和1080分辨率之间输出。简单的游戏显示完整的可用分辨率，苛刻的游戏将降低分辨率，使游戏可玩和娱乐。这是因为开发人员知道他们的限制是什么，直到下一个控制台稍后发布，直到下一个控制台就无法推动。计算机游戏开发人员不会落在这些相同的束缚下。新硬件每年发布无意中，因此开发人员可以建立给这些标准。以上，他们知道用户可以更低的设置来补偿较旧的硬件，仍然使游戏在几年前从您的硬件上播放。
我这么说，因为如果你愿意在未来5 - 7年释放最大设置的限制，你的问题可以有点回答，尽管你可能必须在第四年或第五年升​​级你的艰难。但随着这个问题的克制，从消费者的角度来看根本没有答案。你谈论用明天的电力能力建立一台电脑，利用今天的零件（平均持续约4年）与明天的问题。
回答 6 首先，我努力看看我的预算。我需要买足以让我做我需要做的事情，但我也需要考虑2年来升级它是否会升级。</description>
    </item>
    
    <item>
      <title>使用VB.NET（VB.NET，开发）如何在页面内找到TextArea？</title>
      <link>https://xiangqingw.github.io/posts/how-do-you-find-textarea-inside-a-page-with-vb-net-vb-net-development/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:26 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-you-find-textarea-inside-a-page-with-vb-net-vb-net-development/</guid>
      <description>使用VB.NET（VB.NET，开发）如何在页面内找到TextArea？ 回答 1 它具有标记属性命名的对象。只是用它！
回答 2 从我的vb和c＃的多年经验
要注意的一件事：
Visual Basic .NET与C＃和其他.NET语言相同。 C＃不超过Visual Basic .NET的额外功能。您可以为专业人员选择VB而没有任何风险。
为什么Visual Basic：
虽然Visual Basic不是跨平台，但我认为行星中没有其他工具，这是非常简单而灵活的使用。从儿童的任务到专业软件可以用它建造。它有一个拖放组件。
仍然跨平台而不是跨平台
想知道&amp;hellip;&amp;hellip;但你也可以通过.NET核心在Linux和Mac中使用VB。你是谁
从我的vb和c＃的多年经验
要注意的一件事：
Visual Basic .NET与C＃和其他.NET语言相同。 C＃不超过Visual Basic .NET的额外功能。您可以为专业人员选择VB而没有任何风险。
为什么Visual Basic：
虽然Visual Basic不是跨平台，但我认为行星中没有其他工具，这是非常简单而灵活的使用。从儿童的任务到专业软件可以用它建造。它有一个拖放组件。
仍然跨平台而不是跨平台
想知道&amp;hellip;&amp;hellip;但你也可以通过.NET核心在Linux和Mac中使用VB。您不会游戏系统.Windows库将不可用（在这里使用VB，您必须在终端中传递-Lang：VB）。但这个图书馆即将推出。您可以通过单声道框架实现完整的.NET运行时。您还可以通过Linux中的Monodevelop在VB .NET中开发应用程序（不知道它;在Mac上的可用性）。
对C＃的力量：
对于他们想要与vb开发团结游戏的人
Unity3D已经宣布了VB即将到来。但您仍然可以使用转换的InstantvB或SharpDevelop码。您只需在SharpDevelop中打开代码，并且必须单击工具 - &amp;gt;转换器 - &amp;gt;转换为VB。然后在VB中编辑并保存代码。与统一发展做好趣。请记住，Unity的C＃远离.NET的C＃。
回答 3 我是一个vb家伙。无论是幸运还是潜意识的意图，我从大学（2001年的班级）以来的每一份工作都是VB.NET或类似的东西。当我9岁时，我教导了自己的基本，在高中做了伟大的事物VB5和VB6。我争辩vb.net比c＃更容易学习，并且具有许多可用性优势，使其成为业余爱好者和学生的更好语言。
即使我从编程到管理的智力荒地以来，我仍然在VB.NET中做了大部分的个人工作，并争辩说你可以在C＃中做任何事情，你不能在vb.net中做到，只有一些你可以做得更好的事情。
所以了解我告诉你选择C＃的重要性。
有很多好理由让C＃列入其他答案，但主要是：
就像我喜欢VB.NET一样，它是C＃的Windows;它可能有点漂亮，也许更容易拾取，但世界走向了另一种方式。除非VB有一个文艺复兴，否则也许与一些贾斯汀长的商业广告，这不太可能很快就会改变。
我可能只是说服自己开始在C＃中做出自己的爱好编程&amp;hellip;&amp;hellip;
回答 4 这两种语言都非常密切相关，并共享相同的编译器，这使得它们在此处说明的速度和功能相同。 C＃和Visual Basic都来自.NET Framework。它们不同的唯一方法是可读性和人气;两个非常重要的因素。
C＃肯定比Visual Basic更受欢迎。在这里，它是最多的第6次，而VB也在十分之一。更受欢迎意味着更多的工作，一个更大的社区，更多资源等。
C＃中的可读性也更好。一个大或中的C＃程序看起来很多，男士更紧凑，而不是大型VB程序。可读性是编程中的一个重要因素，因为其他人可能正在阅读您的代码。
此讨论似乎有关于这一领域的详细答案。
但是，那么辩论的另一边;以下是VB优于C＃的10个原因。大多数它只是归功于您的喜好;它很难说C＃是否比VB更好，反之亦然。如果在两种语言中编码了相同的程序，则两个版本都看起来相同。
我个人喜欢C＃ - 可能是因为它看起来很像其他语言，尤其是Java。略微修改的Java代码可以很容易地复制并粘贴到C＃程序和工作中。所以，如果我知道C＃，我也知道Java中的很多东西。初学者似乎发现VB更容易理解，因为它看起来更人性化，让您轻松启动编程。
如果您是初学者，正在寻找一个想要编写乐趣的第一语言或某人，那么VB是更好的选择。如果您是一个寻找工作的专业程序员，那就去C＃。我希望我回答你的问题！
回答 5 VB.NET是2002年由Microsoft开发的面向对象的计算机编程语言。
.NET是来自Microsoft的技术，它不是一种语言。它支持超过40所语言.Four框架支持的核心语言： -</description>
    </item>
    
    <item>
      <title>如何在Python中将十进制数转换为二进制循环？</title>
      <link>https://xiangqingw.github.io/posts/how-do-i-convert-decimal-numbers-to-binary-by-a-while-loop-in-python/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:26 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-i-convert-decimal-numbers-to-binary-by-a-while-loop-in-python/</guid>
      <description>如何在Python中将十进制数转换为二进制循环？ 回答 1 我建议您使用标准算法，反复除以2，并注意到剩下的算法。以下是一个示例：将50转换为二进制。反复除以2，你得到：
50.
25 R 0.
12 R 1.
6 R 0.
3 R 0.
1 R 1
0 r 1.
请注意，您需要继续，直到您获得零的商。
剩下的 - 从底部到顶部读取 - 是二进制数;在这种情况下，110010。
回答 2 听着，你已经在这里有几个体面的正确答案，但我真的不明白为什么任何理智的人都不只是使用Freaking Bin（）内置来做这件事。
回答 3 Hilmar Zonneveld的答案是传统和正确的，但这是一种替代方法，可以在使用按位运算符找到正确的顺序以正确的顺序产生1S和2S：</description>
    </item>
    
    <item>
      <title>我的男朋友在手机上从我的Instagram读取了删除的消息，他如何访问它们，因为它们不会出现在数据下载中，并且不会保留在Instagram服务器上？</title>
      <link>https://xiangqingw.github.io/posts/my-boyfriend-has-read-deleted-messages-from-my-instagram-on-his-phone-how-has-he-accessed-these-as-they-don-t-appear-in-the-data-download-and-aren-t-kept-on-the-instagram-server/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:26 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/my-boyfriend-has-read-deleted-messages-from-my-instagram-on-his-phone-how-has-he-accessed-these-as-they-don-t-appear-in-the-data-download-and-aren-t-kept-on-the-instagram-server/</guid>
      <description>我的男朋友在手机上从我的Instagram读取了删除的消息，他如何访问它们，因为它们不会出现在数据下载中，并且不会保留在Instagram服务器上？ 回答 1 为什么你给他他妈的密码。那不是没有。对不起，但你愚蠢或什么？没有人给他们的密码。如果他不信任你，那么他妈的分手。我相信你会找到比他更好的人。几个月和几年我和我的男朋友在一起。他从来没有说宝贝可以为你的社交媒体获得所有密码吗？绝不。它并不意味着每个人都会像他一样。如果一个人不能相信你，任何事情都脱颖而出。繁荣简单。
回答 2 早期无法在Instagram上恢复已删除的邮件，但由于Instagram和其他第三方应用程序，它已经很容易恢复已删除的消息。
以下是在Instagram中恢复已删除邮件的官方方法：
使用Instagram数据恢复已删除的邮件 - 通过此方法您可以恢复图像，视频和当然所有已删除的文本。
如果此方法不起作用，那么有一些应用程序/工具可以帮助您恢复已删除的Instagram消息。您只需要在这些应用程序上复制/粘贴个人资料的链接，它将恢复所有数据。
回答 3 是的，否则一切都与网络上的所有其他平台不同。
使用Instagram帐户的ID保存直接邮件。如果您删除帐户，则无法保存消息，因此Instagram也将删除它们。我认为它不会发生在一天到另一天，但如果帐户被删除，则将删除与帐户连接的其他一切。
此外，我不认为Instagram关心直接留言，因为它们只是允许大约20-30条消息。你永远不能滚动过去太多了。
回答 4 当然，您可以通过使用数据恢复等工具来返回图片，这对U更方便和安全。 🎀
◦过度，它取决于您的设备，提供给您的两个选择：Ultfone IOS数据恢复和Ultfone Android数据恢复。
从iOS设备中恢复
步骤1：在计算机上启动软件，然后从iOS设备中选择恢复数据。
步骤2：使用USB电缆连接设备和计算机，并将计算机信任在设备上。
步骤3：检测到设备时，选择要扫描的文件类型，然后单击“扫描”按钮继续。
第4步：SC之后
当然，您可以通过使用数据恢复等工具来返回图片，这对U更方便和安全。 🎀
◦过度，它取决于您的设备，提供给您的两个选择：Ultfone IOS数据恢复和Ultfone Android数据恢复。
从iOS设备中恢复
步骤1：在计算机上启动软件，然后从iOS设备中选择恢复数据。
步骤2：使用USB电缆连接设备和计算机，并将计算机信任在设备上。
步骤3：检测到设备时，选择要扫描的文件类型，然后单击“扫描”按钮继续。
步骤4：扫描后，选择要恢复的数据，然后单击“恢复到PC”按钮完成。保存位置可选择。
在没有root的情况下恢复删除的android数据
步骤1.安装并启动Android数据恢复到您的计算机。您将看到如下所示的主界面。选择主屏幕上的恢复丢失数据部分。
步骤2.将设备连接到具有原始USB电缆的计算机。
步骤3.请按照屏幕上的说明打开USB调试以继续。
步骤4.现在，您的设备已成功连接。您可以选择文件类型，然后单击“开始”按钮开始扫描丢失的Android数据。
步骤5.扫描后，找到（现有和删除）的所有数据都按类型显示。您可以单击左侧Cholume上的文件夹以预览您的文件。
步骤6.选择要恢复的照片，然后单击“恢复”按钮。您丢失的照片将恢复到计算机。
📣希望它可以处理你的问题！
回答 5 尝试重置您的WiFi，因为大部分时间都是网络问题而不是实际的Instagram。另一方面，Instagram一般围绕这次有点丢失了，所以请给它几天。
回答 6 是的他们可以。
HERES证明：当您阻止某人时，该人无法查看照片/视频或搜索您的Instagram个人资料。当你阻止他们时，没有通知。是的，您被阻止的人可以在Instagram上提及您的用户名，提及您的活动中会出现。
您可以阻止某人在手机或平板电脑上使用Instagram应用程序，但不在网络上。
当您阻止某人时，他们无法看到您的个人资料或帖子。当你阻止他们时，没有通知。阻止或解除某人：
回答 7 以下是Instagram可能会删除帖子的原因：您的帖子不遵循社区指南。您尚未验证链接到您帐户的电子邮件地址。&amp;hellip;&amp;hellip;
如果在发布频率发生巨大变化，则可以通过Instagrams算法标记帐户。
回答 8 当您删除直接邮件时，另一个人无法再次看到它。删除对话后，您的收件箱中将不再可见。&amp;hellip;因此，如果您错误地删除了您的消息，则无法通过Instagram获取它们，除非您使用在线Instagram消息恢复以使其发生。
回答 9 另请检查Instagram未列为保存电池的应用程序。在插入充电器之前，未运行的应用程序将不会收到任何内容。</description>
    </item>
    
    <item>
      <title>有没有任何软件可以赚钱？</title>
      <link>https://xiangqingw.github.io/posts/is-there-any-software-that-i-can-make-money-from/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:26 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-there-any-software-that-i-can-make-money-from/</guid>
      <description>有没有任何软件可以赚钱？ 回答 1 用最小努力从软件赚钱的最有效方法之一是调查推荐计划。
大多数软件平台都不断寻找推荐伙伴向他们发送新用户 - 他们愿意为此付出代价。
最好的消息是，10个中的9次，你甚至不必是软件的用户。
我建议评估您的网络：也许您在特定行业中有很多联系（房地产，医疗管理，法律法，而小企业/企业家都是很棒的例子）。然后，快速谷歌搜索最受欢迎的软件，以满足您的网络。搜索他们的网站（或与他们的支持聊天）询问他们是否有推荐计划。
从那里，字面意思是你要做的就是推荐给网络中的人们的平台，他们可能会发现它很有用。很多时候，您甚至可以去做软件的免费试用和/或演示，以确保它是您可以真正推荐同事和熟人的事情。
希望这很有帮助，好运！
回答 2 使用此免费软件，您可以每周将工作1小时为2,000美元
我的客户常常每月支付1000美元，只需2小时的教练：
2客户x 2小时的辅导=每月工作4小时=每周工作1小时
2客户x $ 1000 =每月2000美元
这个系统让我每周每月赚2000美元，每周工作是多少，这是多么伟大？
因此，我创建了一个帮助您在此处实现相同结果的课程：
即使你从头开始！
你从这个课程中得到什么：
（这种方法允许m
使用此免费软件，您可以每周将工作1小时为2,000美元
我的客户常常每月支付1000美元，只需2小时的教练：
2客户x 2小时的辅导=每月工作4小时=每周工作1小时
2客户x $ 1000 =每月2000美元
这个系统让我每周每月赚2000美元，每周工作是多少，这是多么伟大？
因此，我创建了一个帮助您在此处实现相同结果的课程：
即使你从头开始！
你从这个课程中得到什么：
（此方法允许我以20 000美元的价格出售单月营销咨询套餐）
（我偷了一家加拿大队长的这些问题，公司每年销售额为2000万美元）。
（我将解释一下你可以从一开始就销售多少，以增加你的房价达到500美元/小时）
作为奖金，我会向您展示2个案例研究，顾客为6000美元，将其在线企业的营业额加倍
为整个免费教程观看视频
继承你的成功！
Systeme.io的Aurelian Amackerfounder
回答 3 没有适当的应用程序来赚钱。但是您仍然可以通过在各个地点作为自由职业者来赚取。谷歌也为您提供了一个很好的工作来上传文档并获得利润，就像我可以给你的链接..
回答 4 是的 ，
这个软件的名称是您自己的大脑，这是一直被全能的。
我们大脑的价值是大约100个超级计算机的价值。
所以我们必须知道我们如何使用我们的大脑。那么你会告诉你你是如何在线赚钱的。
毕竟这一切，如果你学习必不可少的东西，富有成效，有助于别人，你可以在你的博客上分享这些东西，这些帮助在线赚钱。这是一个有助于您在线赚钱的想法之一。
最重要的是，首先，你必须知道你所知道的比任何其他人都更了解，或者你必须学习你的一件事
是的 ，
这个软件的名称是您自己的大脑，这是一直被全能的。
我们大脑的价值是大约100个超级计算机的价值。
所以我们必须知道我们如何使用我们的大脑。那么你会告诉你你是如何在线赚钱的。
毕竟这一切，如果你学习必不可少的东西，富有成效，有助于别人，你可以在你的博客上分享这些东西，这些帮助在线赚钱。这是一个有助于您在线赚钱的想法之一。
最重要的是，首先，你必须知道你所知道的比任何其他人都更了解，或者你必须学习你最喜欢的一件事。
回答 5 这是一种相当巧妙的经营战略。它需要5美元，才能成为媒介的成员。作家是根据支付成员的参与支付的。（非成员不会为作家产生任何钱）。
直到最近，收益通过拍坡分配。作为简化的例子，如果成员在整个月内拍摄了1次，并且那个拍摄是乔的内容，那么乔得到了5美元。</description>
    </item>
    
    <item>
      <title>版权符号的alt代码是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-is-the-alt-code-for-the-copyright-symbol/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:26 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-the-alt-code-for-the-copyright-symbol/</guid>
      <description>版权符号的alt代码是什么？ 回答 1 alt + 0169
我觉得你会刚刚在寻找它时得到多少答案。但是，嘿，我猜这也在工作。
回答 2 你永远不会得到任何垃圾来阅读或查看，因为好的创造者无法谋生或补充他们的收入。
回答 3 US / UK答复代码是自动打字的人版权，或者为此付出代表的人，
那是自动的。
实际的受版权保护的工作是键入的源代码。
如果您重新创建该软件，使其看起来很不同 - 并且您可以演示您没有复制其他版权代码的块 - 然后您的新实施是您的版权。
版权的关键概念是，只有类似的源代码的有形表达式 - 可以受版权保护。纯粹的想法不能。
回答 4 作为法定版权的问题，创意在一些有形的Mediim版权中固定的那一刻，附加到工作并由创造者或作者拥有。因此，版权通知版权，创造年份，创造者的名称，保留所有权利。合法合适地依附于创造性的工作。这类通知通常由大多数IP和版权律师建议。如果您的工作以任何方式侵犯，以便起诉损害赔偿，禁令救济和根据美国版权法提供的任何其他补救工作必须在国会图书馆版权局的版权局注册。该过程可以在线完成，必须在电子形式中提交一张照片或单词文件。该费用目前为55.00美元，必须在备案时支付，通常由信用卡。该网站有关构成可接受的提交的更详细说明。正如您所能推断出这个简短的博览会是特定于美国的。伯尔尼公约下的国际签字人下的版权登记募股权登记。
回答 5 要检测版权/抄袭，您可以使用重复的内容检测软件 - Copyscape或小型SEO工具抄袭检查器。
您只需要在Copyscape和扫描中输入您的网页URL，以查找在线现有的副本。
虽然在Small SEO工具中，您需要将您想要检查并排除网页URL的文本，因此它可以在网上的任何地方找到副本。
我希望它有所帮助。 干杯，
Pramod K. Ram.
回答 6 简短的答案是它仍然受版权保护。就像标有版权的任何其他文字一样，没有锁定内容。如果您注册了版权，事情会变得更加复杂 - 必须需要重新注册 - 或者如果您获得许可。
从某人删除的版权标记是Elses代码的一般是一种欺诈形式;如果您的所有者您可以选择不将源代码标记为受版权保护，但是该标记的存在与否不再是某些版权的决定因素。由于美国改为伯尔尼会议制度，可受版权保护的东西被认为是受版权保护的，即使没有标记或注册。更改源代码充分生成新的衍生作品，如果您的版权所有者，并且通常不允许使用该工作。衍生作品在出生时也受版权保护，并且通常被发现的版权被原始版权的持有者持有，无论谁致力于副本。
回答 7 在美国和许多其他国家，至少有最少数量的原始作者的编程代码被自动授予版权保护，这意味着没有人可以合法复制它，分发，发布它，或者使衍生物从中作品所有者的许可。您还可以使用美国版权所有办公室注册编程代码，这将授予您的额外福利，因为您申请版权侵权行为。
回答 8 是的，这将是一个明确的侵权的主要原因 - 如果你看一个elses源代码（版权保护工作）并将它翻译成另一种你没有创造自己的原创作品的语言。被受版权保护并没有侵权，您的工作必须是原创的，并独立创建。您可以查看软件，看看它是如何运作的，然后您制作自己的程序，这是您的独立原始的工作不会侵犯示例软件。这种推理是在英格兰和Welse的标志性案例之一中表达的 - Navitaire Inc V Easvjet Airline Co Ltd（http://www.bailii.org/ew/cases/ewhc/ch/2004/1725.html）。但是，侵权尚未犯规，同时强调被告没有看到由所谓的非文本复制复制的软件的源代码。
回答 9 版权不像这样工作。原则上一个人没有版权。仅仅创造了一项工作，就建立了普通法版权。然而，在创造工作时，稍后难以证明，因此通过明确向工作中的索赔建立索赔，这有助于
版权所有（c）2019 Fred Flintstone，茱莉斯公司</description>
    </item>
    
    <item>
      <title>谁开发了最好的NFT市场应用程序？</title>
      <link>https://xiangqingw.github.io/posts/who-develops-the-best-nft-marketplace-app/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:26 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/who-develops-the-best-nft-marketplace-app/</guid>
      <description>谁开发了最好的NFT市场应用程序？ 回答 1 着迷
2017年，世界目睹了加密会的诞生。这是世界上第一次经历了一个基于区块性的分散应用程序，但针对主流受众。
加密会感觉像许多玩具一样，它代表了我们如何与数字世界中的物品互动的戏剧性转变。虽然以前的数字项目生活在公司服务器上，但位于没有单一方拥有的共享，公开区块链上的区块本地物品。他们可以在任何地方观看，公开交换，真正拥有的数字世界中从未在可能的方式上。
被形成的运动着迷，Devin Finzer和Alex Atallah加入了不和谐的早期采用社区，并开始与用户交谈。在2017年12月推出的Opensea Beta推出，Ethereum Blockchain的任何非娱乐标记的第一个开放市场出生。
今天，OpenSea仍然是支持多个区块链的用户拥有数字项目的最大市场，具有最广泛的类别和新兴数字项目类的最优惠价格。
回答 2 他们还有一种快速的方法来查看他们平台上列出的每个集合的活动，它会引起
外海
由于艺术家，收藏家和贸易商提供的选择的多样性，OpenSea现在是最伟大的NFT市场。他们的市场为艺术家提供了各种方式来列出他们的工作，包括懒惰的薄荷，允许用户在支付一次性交易成本以建立一个帐户后免费制造NFT。同时，收藏家和交易员受益于Openseas低2.5％的交易费用，这在所有市场上具有特别竞争力。
它们还有一种快速的方法来查看其平台上列出的每个集合的活动，该活动将来自集合的所有数据聚集在一起，并迅速提供各种信息，如占地价格，最高的上一次销售以及集合的总交易量。除了他们向收藏家和艺术家提供的各种NFT机会之外。
没有机会使用USD或任何其他菲亚特货币获取NFT，并且您必须通过连接Crypto钱包来登录平台，如大多数NFT市场。 Opensea支持各种钱包，可以在他们的网站上看到。
市场的一个缺点是它没有分散，这引发了关于市场操纵的艺术家和收藏家之间的担忧。
顺便说一句，如果有人有兴趣在ico购买，那么这个隐藏的宝石称为lumi。它由一家名为Luminos Graha印度尼西亚的公司支持。他们正在挖掘镍。从我所知道的，他们正在推出自己的主网，并在他们的管道中有很多项目。要购买未来的项目，你将需要Lumi Coin。 Ingyou可以加入他们的电报组，以了解更多HTTPS：//t.me/luminosmin。如果您觉得这不相关，请随意忽略它。
回答 3 2.自定义NFT市场的开发。如果你想要一个富有的特征平台
我知道Idearsoft有很多植物区的体验。超过5年，此开发团队一直在开发加密平台，区块链，交易平台，发行平台等。 Weporeoft目前正在为客户创建几个NFT市场。
我们可以为您提供几种创建NFT交易平台的选项：
1.基于OpenSea SDK。使用OpenSea工具和您的独特设计，我们可以构建一个具有最小功能的市场，并为您的需求定制。
2.自定义NFT市场的开发。如果您想要为您的用户提供独特的用户体验的功能丰富的平台，Ipearoft可以帮助您解决这个问题。
3.创建NFT收藏品。创建包含一系列令牌的收藏品作为单个画廊（类似于哈希掩星）。
随意与我联系以获取估计或选择正确的选择。此外，我很乐意回答你的问题。
回答 4 我刚刚遇到了这篇文章，详细讨论了NFT市场。您可能还想阅读本文。
回答 5 NFT市场基于该令牌可以将智能合同纳入，每次销售资产和令牌时都会将创造者付费一部分。它对艺术界特别有吸引力。以下指南探讨了NFT背后的基本概念，并比较了销售数字艺术的不同NFT市场：NFT在指南中的最佳NFT Marketplace应用程序中如何推动现代艺术世界的促进：
回答 6 这
Quytech完全了解OpenSea等NFT MarketPlace应用程序开发。他们的应用开发专家可以详细地告诉您NFT市场应用程序开发的最佳策略和方法。此外，开发此应用类型的成本也是非常合理的，它约为40万美元。然而，要了解准确的估计，最好与他们详细讨论事情。
一些可以帮助您获得NFT Marketplace应用程序开发的其他公司是：
在开发NFT市场应用程序时，还有一些重要的要点：
NFT市场的工作类似于电子商务商店。但是，货物被数字加密资产替换。
NFT Marketplace App开发由区块链技术支持。所以，记得选择一家拥有大量经验的公司，拥有区块链。
该应用程序应允许用户设置在平台上交易的Etereum帐户。
它应该包含用户可以在平台上购买或销售的非娱乐令牌和其他收藏品。
NFT MarketPlace应用程序应该有各种类别，如现在购买，拍卖，提供和其他智能过滤器具有很大的用户体验。
您想要更多有关该主题的信息吗？请伸出info@quytech.com.thank你读这篇！
回答 7 为AppInventi工作
NFT市场是企业家的最新现金奶牛，并希望投资。
为了开发NFT Marketplace应用程序，您可能会考虑在那里达到最佳区块链App开发公司。在这里，您可以通过其经验，技术进步，年龄，增长以及未来的潜力来判断一家公司。不要只是为了名称盲目地信任，而是取得联系和讨论应用程序开发的整个过程可能会清楚地了解谁可能更好地满足您的要求。
为AppInventiv工作，我已经密切关注了我的同事在NFT市场周围的一些真正酷的项目上工作，并且在提供了一些成功的收入发电产品之后证明自己可以获得通过它们开发的最佳应用程序之一$ 100k-$ 500k。
由于我发现NFTS迷人自己，我曾到达了一个项目经理，以便更多地询问它，从我得知这些家伙不仅开发自定义应用程序，而且还可以在OpenSea SDK上开发一个，这还担任交易NFTS最古老，最大，最大和顶层最大的市场之一。</description>
    </item>
    
    <item>
      <title>IP数据包里面的HTTP请求是什么？</title>
      <link>https://xiangqingw.github.io/posts/is-the-http-request-inside-an-ip-packet/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:25 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-the-http-request-inside-an-ip-packet/</guid>
      <description>IP数据包里面的HTTP请求是什么？ 回答 1 总是。没有IP数据包，它没有到那里。
回答 2 是的，Internet基于IP协议，所以一切都在IP数据包数据包中，在大多数情况下都在以太网包中。
回答 3 不仅在IP数据包中，还具有TCP段和以太网帧。
注意此图像上的拼写错误，TCP段为l4 &amp;hellip;.
数据将是HTTP请求。
回答 4 简短答案：TCP是一个传输层协议，HTTP是一个通过TCP运行的应用层协议。保持读取长答案。
要了解差异（以及许多其他网络主题），您需要了解分层网络模型的思想。基本上，有不同的协议，让计算机在不同的距离和不同的抽象层中讨论。
在网络堆栈的非常底部是物理层。这是电信号或光脉冲或无线电波实际从一个地方发送信息的地方。物理层并不真正具有协议，而是具有电压，频率和其他物理属性的标准。您可以通过这种方式直接传输信息，但您需要大量的电源或专用行，而没有更高的图层，您不会分享带宽。
下一个层向上是链路层。该层涵盖与共享物理通信介质的设备的通信。这里，像以太网，802.11a / b / g / n和令牌环等协议指定如何处理到物理介质的多个并发访问，以及如何将流量直接到一个设备而不是另一个设备。在典型的家庭网络中，这就是您的计算机如何与您的家庭路由器交谈。
第三层是网络层。在大多数情况下，这是由互联网协议（IP）的主导。这就是互联网魔法发生的地方，你可以与世界各地的电脑交谈，而无需了解它的位置。路由器处理将您的流量从本地网络引导到另一台计算机生存的网络，其中其自己的链接层处理将数据包置于右计算机。
现在我们达到了某个地方。我们可以与世界各地的某个计算机交谈，但该计算机正在运行大量不同的程序。它应该如何知道将您的信息传递哪一个？传输层通常会照顾这一点，通常使用端口号。两个最流行的传输层协议是TCP和UDP。 TCP对网络层分组交换通信的粗糙斑点进行了很多有趣的事情，如重新排序的数据包，重新传输丢失的数据包等。UDP更不可靠，但具有较少的开销。
所以Weve将浏览器连接到另一端的Web服务器软件，但服务器如何知道您想要的页面？你怎么能发布一个问题或答案？这些是应用层协议句柄的东西。对于Web流量，这是超文本传输​​协议（HTTP）。有数以千计的应用层协议：用于电子邮件的SMTP，IMAP和POP3; XMPP，IRC，ICQ进行聊天; Telnet，SSH，RDP用于远程管理;等等。
这些是TCP / IP网络模型的五层，但它们真的只是概念性。 OSI模型有7层。实际上，各种层之间的一些协议垫片，或者可以立即在多个层上工作。例如，TL​​S / SSL提供网络和传输层之间的加密和会话信息。在应用层上方，应用程序编程接口（API）管理与Quora，Twitter和Facebook等Web应用程序的通信。
回答 5 无状态协议不需要SE
HTTP协议代表超文本传输​​协议也是WWW的应用层协议。它是用于传达万维网（www）.http协议的信息的协议是一个无状态和无连接协议。 HTTP被称为无状态协议，因为每个命令是请求的独立执行，而无需在其之前执行的请求知识。它是用于网络的协议。它基于请求/响应范例。在该协议中，通信通常通过TCP / IP协议进行。
无状态协议不需要服务器在多个请求的持续时间内保留关于每个用户的信息或状态。
但是一些Web应用程序可能必须跟踪用户从页面上的进度到页面，例如，当需要Web服务器来为用户自定义网页的内容时。这些案例的解决方案包括：
•使用HTTP cookie。
•服务器端会话，
•隐藏变量（当前页包含表单时）和
•使用URI编码的参数重写URL-REDING，例如，/index.php?session_id=some_unique_session_code。
什么使协议无状态是服务器不需要通过多个请求跟踪状态，而不是它如果需要这样做。这简化了客户端和服务器之间的契约，并且在许多情况下，在许多情况下最小化需要传输的数据量。Internet通常使用无状态开发环境。这只是意味着HTTP这是Web的骨干的HTTH无法保留连接到网站的每个客户端的标识的内存，因此将每个请求视为唯一和独立的连接，没有关系无论是对其的连接。
HTTP请求方法：
1）获取方法：GET方法用于从服务器获取数据。 Get方法将作为查询字符串传递给URL的参数，以键值对的形式。例如，如果参数是name = williams，则此字符串将在URL中附加。默认情况下，方法获取。
2）POST方法：POST方法用于将数据发送到服务器。在post方法中，查询字符串沿request对象附加，它们不会在URL中追加，因此参数以隐藏的形式传输。
3）HEAD方法：当用户想要了解标题时，像MIME类型，Charset，Content-Length那么我们使用Head方法。如果没有返回身体内容。
这三种是JSP的常用方法，而GET和POST方法最广泛使用。有更多的方法对于您的知识，他们很少被提供它们已经在此处提供。
4）跟踪方法：JSP资源上的跟踪返回资源内容。询问请求消息的环回，以便使用可以看到在另一边收到的内容。
5）删除方法：它用于删除资源，请求的URL文件
6）选项方法：它列出了所请求的URL中的东西可以响应的HTTP方法。
7）PUT方法：它将附带的信息放在Requestedurl。
8）连接方法：它连接隧道的目的。
回答 6 当IP数据包发送到默认网关时，保留最终目标IP。由于网关必须在同一本地网段作为发送数据包的主机上，因此它实际上实际上还需要数据包中网关的IP地址，因为源主机可能在其ARP中具有MAC地址表，或者它将在偶数发送实际有效载荷的第一个数据包之前使用Gateway的IP地址在ARP请求中。
IP地址更有用的是，在留下本地网段后，您希望流量的位置更有用。即使您使用IP地址与该段的其他主机通信，即使长期以来真正确实确实的所有情况都会导致主机通过MAC地址互相解决。 IP地址真的只是为了一个联网主机来说，我知道这不是我的网络，所以我没有希望了解目的地实际的位置，请把它带到我身边。同一网段上的本地节点知道其MAC地址，但它们不会在另一个建筑物或互联网上知道网络上的主机的MAC地址。它也不会有助于知道地址，因为需要一种路由数据的方法。</description>
    </item>
    
    <item>
      <title>你如何找到双方三角形的第三方？</title>
      <link>https://xiangqingw.github.io/posts/how-do-you-find-the-third-side-of-a-triangle-given-two-sides/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:25 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-you-find-the-third-side-of-a-triangle-given-two-sides/</guid>
      <description>你如何找到双方三角形的第三方？ 回答 1 这里有很多非常不完整的答案。
仅给予两侧的长度，说A和B，具有大于或等于B，您可以做的最好的是对第三侧的长度的限制，C：A-B &amp;lt;C &amp;lt;A + B。
如果您还有长度A和B之间包含的角度，请致电它，然后通过余弦定律找到C：C ^ 2 = a ^ 2 + b ^ 2 - 2abcos（θ）
如果您有一个非括号的角度，那么您有含糊不清的情况，并且可能有0,1或两个可能的三角形。说你有角度，b，相对的侧面b，靠近侧面a。然后是：
b &amp;lt;asin（b）。没有三角形是可能的。
b = asin（b）。
这里有很多非常不完整的答案。
仅给予两侧的长度，说A和B，具有大于或等于B，您可以做的最好的是对第三侧的长度的限制，C：A-B &amp;lt;C &amp;lt;A + B。
如果您还有长度A和B之间包含的角度，请致电它，然后通过余弦定律找到C：C ^ 2 = a ^ 2 + b ^ 2 - 2abcos（θ）
如果您有一个非括号的角度，那么您有含糊不清的情况，并且可能有0,1或两个可能的三角形。说你有角度，b，相对的侧面b，靠近侧面a。然后是：
b &amp;lt;asin（b）。没有三角形是可能的。
b = asin（b）。一个右三角形是可能的。 a将是斜边，第三方c，可以用毕达哥拉斯定理确定。
a&amp;gt; b&amp;gt; asin（b）。两个三角形是可能的，一个急性和一个钝。使用凸片的定律，可以通过首先发现角度A来解决急性三角形，该角度A可以立即导致知道角度C.通过使用余弦或L.余弦来找到侧面C.钝角三角形将具有第一个角度A的补充，并且您可以通过使用任一项技术来继续解决此三角形。一般来说，L. L.孤岛少量使用。
b&amp;gt; a。一个三角形是可能的。角度A可以用L. L.凸序和侧面C找到。然后可以找到侧面C.
回答 2 你不能知道2面之间的角度。
回答 3 如果三角形是正确的三角形，那意味着它有一个等于90度的角度，请使用毕达哥拉斯定理：
A2 + B2 = H2A2 + B2 = H2</description>
    </item>
    
    <item>
      <title>如果我参加德国的编程训练营，我可以在德国的科技公司工作吗？</title>
      <link>https://xiangqingw.github.io/posts/can-i-work-in-tech-companies-in-germany-without-a-degree-if-i-attended-a-programming-bootcamp-in-germany/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:25 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/can-i-work-in-tech-companies-in-germany-without-a-degree-if-i-attended-a-programming-bootcamp-in-germany/</guid>
      <description>如果我参加德国的编程训练营，我可以在德国的科技公司工作吗？ 回答 1 Bootcamps是增强技能的一种很好的方法，但他们无法取代多年的培训和/或工作经验。
如果您依赖于训练者的专业技能，您几乎不会说服雇主为您提供德国工作签证的工作合格。
回答 2 这个答案适用于印度青年/劳动力：
由于我在过去10年中工作的技术产业，因此我对这个问题有准确的答案：
答：没有。任何印度青年都无法进入德国的训练者入学，以便能够为德国科技公司工作，因为训练者几乎没有持续超过6个月，这将是一个印度青年3年以上英语通信练习，拥有7多年的计算机编程PR &amp;hellip;
回答 3 2019年，它难以与软件工程师的收入潜力和生命时间值（LTV）进行编码训练者可以给予您的职业生涯。在2015年出席编码训练营的人，我不得不支付17,700美元的前缘并拥有另外15,000美元的储蓄支付我的生活费用在训练者+ 5个月的职位搜索。我很幸运能节省，因为参加了一个编码的训练者让我成为我的启动职业生涯Karma（YC W19）的首席技术官。卢廉为你在收入分享中，您不再需要叉2万美元，做一个3个月的训练者。如果您可以通过技术栏并接受，学校将对您进行赌注，如果您获得工作，您只需支付他们的费用软件工程师。这与学生债务不同，因为如果你找不到工作或失去你的工作，你就不会付钱。收入分享工作：如果你确实找到了一份工程师制作超过$ xx，xxx（通常$ 50,000）您支付X年（2 - 3年）的薪资（15-17％）。在2019年4月，这是M Y列表在美国提供收入共享的前5名编码训练营。注意事项并不是特定的顺序，因为我认为每个方案都有自己的加号和减数，所以我会选择适合您学习风格，进度和财务的人。思考 - 一个最古老的编码训练营，它是1-1 on-1指导和它的强大的在线和人员提供。学士可以采取全职，兼职或自我节奏的节目，在那里他们为此分配了一个导师方案的整个持续时间。如果您是一个喜欢舒适的人，那些有人会有一个人会始终有自己的背部，那么思想可能是一个很好的融合。他们在全职和兼职软件工程方面提供收入分担在某些城市的生活津贴。如果您决定拿出编码训练贷款的情况，他们提供了6个月的职能保证.Flatrion学校 - 作为早期训练者之一，Flatiron对亲人和在线计划具有非常强大的声誉S.IT的免费75H +准备课程对于想要测试Flatiron的教学风格的完整初学者来说是伟大的。由Wework获得的后，如果您在线学习，其学生可以免费使用Weworks的Weworks。并希望有一个地方来学习。它正在积极地推出来自美国的Weworks的新校区，所以它会在一起带来在线和体质经验的许多有趣的举措。他们在2019年推出了收入分享时间计划。他们还提供6个月的职位保证.App学院 - 具有大型校友网络的最古老的训练营。因为入场过程是最严格的，那些开始该计划的学生通常都是编码的他们自己的一段时间.a / a是第一个提供推迟学费的培训班，现在被称为收入共享。因为学生在找到工作后支付，有一系列每周评估如果您失败可能导致踢出程序。竞争学校 - 与其他人相比，是一个较新的训练委员会，但在我看来，它实际上是一个优势。他们专注于JavaScript堆栈并通过匹配你强调真实的世界经验。对于一个真正的公司来说，这是一个令人惊讶的是，对于教师的比例，这意味着你将获得更加个性化的注意力，如果这是你的价值。此外，湾区的安置率，平均毕业生薪水非常强大Bootcamp.plus他们提供收入分担，以防您无法支付全额学费Upfront.Lambda学校 - 当涉及在线编码Bootcamps时，Lambda非常迅速成为领导者。该计划仅在网上提供课程，项目，讲座，日常立宪旨在在线在线完成。投资数百万美元来使他们的课程结束，所以如果您正在寻找一个强大的在线lea网络＆rands lambda学校应该在您的列表中.Lambda是第一个为全职和兼职计划推出收入共享的编码计划之一。您不欠λ的任何东西，直到你实际上是在工作中。它应该应注意，收入分享和津贴不是免费的。一旦找工作，您将不得不偿还它。
回答 4 计算机科学（CS）学位和参加编码训练者都是将工作作为程序员降落的有效方法。他们每个都有upsides和oplsides.i&amp;rsquo;m因为我的背景而熟悉两者。我在东北大学学习了CS，我在一些初创公司和大型公司作为开发人员（包括Microsoft和Ebay）工作.Since然后我已经开始了Firehose项目，一个在线编码训练营。行走了我的职业生涯，我与经历过传统学习路线的人一起工作学校和自我教授的人的CS真的是你所学习的东西。我崇拜的程序员最多没有计算机科学大学的学位。这是两堆的破录彼此相对。计算机科学中的学位
费用：$ 80,000 - 120,000美元：4 - 5年
计算机科学的程度通常需要4年全年。包括麻省理工学院，斯坦福，伯克利，普林斯顿，哈佛大学，哈佛大学的高大学在介绍过程中教导了功能性编程语言[1]。功能编程不用于行业的常见规划其他类型的编程语言。在我的经​​验中超过一半的学生参加了东北的CS101的学生。最重要的是，几个学期再次尝试过。我发现课程很容易，但我一直很容易，但我一直很容易，但我一直很容易发现课程作为大学之前的爱好 - 如果这是我的第一次编程品味，我可能会不停地出去，或者至少真的挣扎。走出了整个经验，让大多数学生都发现他们触摸了许多不同编程语言和学习复杂的理论概念。他们教导算法，数据结构，逻辑和许多主题，这些主题形成了计算机的工作原理。有些经验Wi LL教授在技能学生的技能学习的时间内，没有证明过于实用的理论概念是先进的问题解决技巧并弄清楚如何解决各种计算问题。通过解决比大多数程序员更难的问题在工作中，大学做好教学开发人员如何解决问题以及计算机如何在深度水平上工作。也是非CS要求，如多样性课程要求，英语，社会学和一些需要的其他课程为了毕业。但这是学生走开的东西。这些是招聘流程公司的重要部分的技能，这些公司对于开发人员来说，计算机科学通常不会教导某些其他事情：
您获得顶级大学的教育质量的重要差异
费用：4,000美元 - 20,000美元：2-5个月
编码训练营是切换职业生涯的替代方法，成为专业年级的开发人员，一般都是为了在大学学习计算机科学的人不是一个实用的选择。对于大多数人来说，戒掉他们的工作，回到学校4多年来，积累了数十万美元的债务，不是一种实用的选择 - 特别是如果他们已经在大学里学习了其他东西，他们已经拥有了一个学位。博训通常教授适用的特定工具现实世界。他们通常能够更新他们的课程，包括更多切削刃的技术。核心，他们经常培训激光专注的培训计划：
大多数编码训练营专注于Web开发 - 这有点比大学教学更具体。的原因是，Web开发行业现在非常繁荣，并且这种专业类型的程序员有许多未填充的位置。策划训练牌通常是挑选的一个核心编程语言，以在时间范围内专注于教学，并以同样的方式构建Web应用程序，这些应用程序通常在Industry中完成。远离编码训练营，您应该能够构建您拥有此想法的Web应用程序。事项是几乎每天使用的其他工具在Web开发人员的角色。这些包括：Slack，Git，Github和Trello以及其他一些工具，以及您的杂志也可以在编码训练营中使用这些工具。
回答 5 您希望收集有关所谓的蓝卡方案的信息：
蓝卡是一份批准的欧盟工作许可证（理事会指令2009/50 / EC），允许高技能的非欧盟公民在欧盟内的任何国家内工作和生活，不包括丹麦，爱尔兰和英国，这不受提案。 [1,2]
如果你在合适的部门工作，你有一个很好的镜头：
申请人必须拥有认可的大学或至少5年的相关专业和德国公司的就业合同的学位，从德国公司约44.800， - €whic</description>
    </item>
    
    <item>
      <title>如果我编写一个运行无限循环的Python脚本，可以完全耗尽我的笔记本电脑电池需要多长时间？</title>
      <link>https://xiangqingw.github.io/posts/if-i-write-a-python-script-that-runs-an-infinite-loop-how-long-will-it-take-to-drain-my-laptops-battery-completely/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:25 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/if-i-write-a-python-script-that-runs-an-infinite-loop-how-long-will-it-take-to-drain-my-laptops-battery-completely/</guid>
      <description>如果我编写一个运行无限循环的Python脚本，可以完全耗尽我的笔记本电脑电池需要多长时间？ 回答 1 你需要多长时间喝一瓶苏打水？
无论你说什么，都是错误的，因为没有给出尺寸。喝2升超过0.5升的时间需要超过4倍。如果是壶怎么办？10升？
游戏笔记本电脑的时间比最新的Apple M1 MacBook Pro所花费的时间更短。多久？不可能说。
回答 2 在不知道笔记本电脑的情况下，没有人能回答这一点。
如果你真的想知道，请尝试一下。
回答 3 我可以从Windows角度来回答这个问题。
由于其他人指出，因此无法在最简单的情况下可靠地检测任何无限循环。
当Windows标记程序没有响应和灰色窗口时，它不是因为Windows知道程序处于无限循环。这是因为Windows知道程序没有检查事件 - 按键，鼠标点击等 - 在最后几秒钟内。这可能是因为程序处于无限循环中。但它也可能是因为程序代码中的错误，或硬件故障，或其他几个原因之一。 Windows不知道这些事情中的哪一个是真的。即使它可以看到该程序正在循环，它也无法知道它是否在无限循环中或只是一个非常长的有限循环（将巨大的文件保存到忙碌的磁盘等）。这就是Windows不会停止应用程序的原因;它只是灰色它来标明问题 - “你的点击次数没有做任何事情的事实是微软的错，诚实的”:) - 并将其离开用户来决定是关闭应用程序还是等待更长时间。
回答 4 现在，袋装了一个付出了良好的完整堆栈网络开发工作（96美元
我花了大约2个月的时间来磨练我的javascript - 我的第一个编程语言，从头开始成为工作准备。我曾经每天投入2-3小时进入学科。帖子学习JavaScript，我参加了学习CSS和HTML以掌握前端Web开发。为了磨练后端Web开发中的技能，我学习了Python编程语言和处理数据库，我获得了SQL的命令。累积，我花了大约十个月来从头开始掌握全堆栈的网络发展。
现在，袋装了一个良好的付费全筹码Web开发工作（US $ 96,200），Airbnb的大学清新，通过展示招聘人员我的JavaScript和Web开发的其他方面，通过我发达的项目 -
在JavaScript中收集和编制特定航空公司航班保留状态数据。该项目的MVP有预订飞行的设施，通过提供登机，目的地和旅行日寻找航班。选择航班和旅行课程后，将使用空置座位数显示用户。该项目还有设施，可通知通过SMS向其中三个用户选择的联系人提供预订的详细信息。
值得注意的是，作为主题的初学者，大部分学习者的兴趣在于导师的手和课程交付的方式。低效的教练可以很快导致学习者失去对象的兴趣。这可能对一个人的职业生涯产生严重影响。
在这里，我正在分享到帮助我主javascript编程的课程的链接，你会发现它很有用 - 我的首选JavaScript学习资源
看看，谈到学习JavaScript时，必须决定有效的学习资源 - 该资源不仅仅是对主题滑过的那个，认为学生对域名新的并不是擅长JavaScript环境的那个，解释为什么该程序正在执行的方式执行它的方式，那个以疑问解决会话的形式提供进入课程支持的人，讨论学生可以用来解决问题而无法解决问题的人抑制他们的思想只是一种方法。
然而，在我的学习之旅中，我开始意识到绝大多数用于学习Java的资源 - 书籍，PDF材料，课程，不是学习者友好的。我觉得作者/导师急于到达课程结束，并没有教育写作这些代码的理由，并假设一个人与JavaScript环境很好。但是，这不是一个是初学者的情况。
此外，在一些资源中，我发现在解决问题的同时，作者尚未签名的技术/逻辑。这导致学习者跳到教程的那些部分，其中讨论了该特定主题。在这些部分中教授的概念反过来应用属于另一个概念的逻辑，在资源的另一部分中讨论。通常，这是重复循环。
那些希望了解我如何阅读我的旅程，即javascript编程的完整业余，掌握了这个主题，并最终在其中一个软件巨人中加起来了一个高薪工作，在这里我正在详细分享它 - 我的JavaScript学习旅行
回答 5 首先，首先，确保您的笔记本电脑实际上关闭，它可以非常良好地处于睡眠模式，而是关闭。另一件事我经常看到的是用户会做通常的，开始&amp;gt;电源&amp;gt;关闭，但在关闭过程之前实际开始，他们已经关闭了笔记本电脑，强迫笔记本电脑进入睡眠模式，而不是关闭。你会惊讶于我多久看到这个。
所以确保你实际关闭。我跑进自己的另一件事是笔记本电脑有一个低动力的关闭模式。也就是说，它是睡眠和关闭之间的模式，但不是休眠。设备看起来好像它断电，但它将继续向USB输入发送电源。起初，只要没有插入USB端口，就没有大不了大量的事情，但随着时间的推移，我注意到，即使它们是空的，电源仍然被发送到USB端口。我如何修复它，进入电源设置和选项，并在所有模式下禁用USB充电，除非笔记本电脑打开电源。在接下来的日子里监控了笔记本电脑，注意到爬行力量下降已经停止了。所以检查这些几个事情，看看是否有帮助。
回答 6 完全放电和充电基于镍的笔记本电池可以导致更好的电池性能和更长的电池寿命。以下是排出基于镍电池的两种方法。
为什么你的笔记本电池如此迅速耗尽？
你必须看看导致笔记本电脑快速排除电池的原因。以下是您在尝试获取笔记本电脑上工作时可能会遇到的一些问题：
回答 7 是和否。
如果您确实将电池耗尽零，是的，则对笔记本电脑的电池寿命不利。但如果它曾经发生过一次，你不应该注意到事物的宏伟方案的任何区别。你可能已经脱掉了几个小时的电脑的使用寿命吗？当然。但我的猜测是你会在达到那个点之前用更新的模型取代笔记本电脑。
（如果你不这样做，你可以始终让电池替换在Apple Store的一个更便宜的普遍&amp;hellip;&amp;hellip;
回答 8 非常正常，这些机器使用从未设计的高性能零件是功率效率。它们与性能一样多，但它在隐藏列表中不高。然后他们包装更多的冷却，较大的部件，并且必须牺牲电池尺寸以保持形状和重量。</description>
    </item>
    
    <item>
      <title>我目前正在学习机械工程（因为我12岁以来，我正在编程，并教授自己的算法和数据结构）。我在亚马逊获得了解决方案建筑师实习生。即使我想成为一个软件工程师，我应该接受优惠吗？</title>
      <link>https://xiangqingw.github.io/posts/i-m-currently-studying-mechanical-engineering-i-m-programming-since-i-m-12-and-taught-myself-algorithms-and-data-structures-i-got-an-offer-as-solution-architect-intern-at-amazon-should-i-take-the-offer-even-if-i/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:25 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/i-m-currently-studying-mechanical-engineering-i-m-programming-since-i-m-12-and-taught-myself-algorithms-and-data-structures-i-got-an-offer-as-solution-architect-intern-at-amazon-should-i-take-the-offer-even-if-i/</guid>
      <description>我目前正在学习机械工程（因为我12岁以来，我正在编程，并教授自己的算法和数据结构）。我在亚马逊获得了解决方案建筑师实习生。即使我想成为一个软件工程师，我应该接受优惠吗？ 回答 1 据我所知，亚马逊解决方案架构师是一个荣耀的AWS服务推销员。是的，您将学习所有可能的AWS服务，您将学习如何与需要要做的客户合作，您将在那里建议他们可以使用他们可以用来努力实现它的任何东西想要做。
这可能是一个崭露头角的软件工程师的好工作吗？当然，为什么不呢？在你的简历和lear中有亚马逊肯定不会伤害&amp;hellip;&amp;hellip;
回答 2 这取决于你的替代品是什么。缺乏任何优秀的替代品，请参加优惠。这将是良好的体验，在简历上看起来不错。
回答 3 如果以上都不适用于您，那么您可能会申请一些临时或艰难
我不知道解决方案建筑师是什么，但如果你想毕业，需要实习，那么答案很明显。此外，如果你想要亚马逊的一只脚，那么答案是肯定的。你需要完成学位。您通常不会有资格获得软件工程师实习，因为实习是基于特定程序的要求。否则它只是被视为兼职或暑期工作。您的计划不仅有要求，但您应该在您工作的情况下。
如果上述其他人都不适用于您，那么您可能会申请一些临时或学生编程工作，以获得余下学业的同时获得经验。我仍然需要那个实习。这是亚马逊。
祝你好运！
回答 4 是的，为什么不。为什么你认为解决方案架构师与软件工程如此不同？那就说，询问并找到更多关于您将成为解决方案架构师的角色和工作职责，并查看您对软件工程师的看法有多不同。
回答 5 我正在与TCS合作2.5年。所以，如果你是一个快乐，你可能能够在较小的时间内破解它。
这是我的经验，
我于2019年1月10日开始编写。我从电路分支中的大学没有多少编码。我在一开始就挑选了Python，因为它给了我对逻辑的魅力，而不是那么多关于语法。
花了几个月的时间来让自己舒服循环，变量，范围，存储类，原始数据类型，基于条件的分支以及关于数组和字符串的一些基本问题。
然后我花时间让自己拿走我们
我正在与TCS合作2.5年。所以，如果你是一个快乐，你可能能够在较小的时间内破解它。
这是我的经验，
我于2019年1月10日开始编写。我从电路分支中的大学没有多少编码。我在一开始就挑选了Python，因为它给了我对逻辑的魅力，而不是那么多关于语法。
花了几个月的时间来让自己舒服循环，变量，范围，存储类，原始数据类型，基于条件的分支以及关于数组和字符串的一些基本问题。
然后我花时间让自己习惯于数据结构，如链接列表，哈希图，二叉树树，BST，DP，回溯，贪婪算法，堆积。
所有这些主题都很复杂，很多时候，当您看到一个新问题时，您会感到愚蠢和无用。当我看到一个新的问题并查看这些问题的模式时，我花了6个月，不要害怕害怕。所以它是八月。
然后我开始leetcode磨削，解决问题，解决问题。每天早上在我上班之前的一个问题，我回家后的另一个问题。我可以看到自己在这些问题上变得越来越好，我每天都有信心。我还习惯了一些基本的CS基本原样，如电脑网络，操作系统和DBMS，这需要两个月。所以它达到了11月。
而且我生动地记得12月4日，有一个亚马逊SDE校园驱动器发生，我有6轮（1在线测试，其次是4轮，1个酒吧提升者。我记得每一个问题，我终于被告知我在酒吧追逐后雇用。我泪流满面，因为它需要一年的努力。我再次工作，我慢慢学习。您可以早先完成它。
有一些有偿资源可以帮助您快速跟踪学习。但是，如果你学习艰难的方式，那么你不会忘记它，将在面试中展示。
当你走的时候尝试练习白板中的问题。
注意为什么您的方法无法正常工作，并记下正确的方法正在运行的原因。
每天修改。您将每天陷入困境，因此做笔记总是很好。
谢谢。
回答 6 一点也不。直到我在美国国家航空航天局（毕业前四个月）雇用了我的工作，我担心我会花费我的职业生涯为波音787设计厕所。
我在学校学习了工程，迅速发现我对设计的现实来说也不非常感兴趣。幸运的是，有许多没有设计的工程工作。例如，我们有许多机械工程师在美国宇航局的飞行控制器。他们使用他们的工程教育来运营国际空间站的车辆，并在缺失时排除故障。其中一半是女性。
回答 7 我知道这很难听到，但无论如何，我都会说：如果你想成为商业世界的成功软件开发人员，那么有一些技能必须拥有。
您需要至少知道一种流行的语言，您需要在那种语言的成语中熟悉。
您需要了解基本的程序编程，包括模块化，基本控制结构的技术，如何传递呼叫参数，可变与不可变行为以及基本的设计表达。
您需要了解面向对象表达的基础，例如面向对象的表达式。什么是阶级，对象，继承，组成，接口与实现，OO设计的一些基础以及这些设计的表达方式。
您需要了解主要数据结构以及使用它们的位置（数组，列表，地图/词典，集合，图形，树）和是的，您必须熟悉一些用于排序，搜索，遍历图形的基本算法（哪些名单和树木是特殊情况），比较等。
您应该了解各种测试类型，他们在确保质量方面的角色，以及在开发周期中应该使用。您应该知道如何使用至少一个构建工具来创建基本的可重复构建。您应该知道如何使用至少一个源控制系统。您应该了解至少一个可以操作文件的操作系统，请执行基本搜索和排序和编辑文件。
这不是一个高酒吧。作为专业人士的一部分正善于各种基本工具，因此您可以对工作有效。如果所有她知道如何做的话，你会怎么看待木匠是开车的指甲？
回答 8 你好
每个人，这一直都是一个热门的头脑讨论。
我会给你一个粗略的想法和我对这个话题的个人想法。
机械的：-
1.制造业在印度不会那么繁荣，由于进口设施更大，制造业的新生就业机会总是很低。这种科夫迪诗被证明是伪造的痛苦。
2.教学大纲相当大，我们被教学几乎每一个联系领域，都是机械，热，流体流动，汽车，厂家设计，机器设计，机电一体化，所以只是一堆论文不能给你一个指挥
你好
每个人，这一直都是一个热门的头脑讨论。
我会给你一个粗略的想法和我对这个话题的个人想法。
机械的：-
1.制造业在印度不会那么繁荣，由于进口设施更大，制造业的新生就业机会总是很低。这种科夫迪诗被证明是伪造的痛苦。
2.教学大纲是相当大的，我们几乎教授了每一个联系领域，都是机械师，热，流体流动，汽车，植物设计，机器设计，机电一体化，所以只是一堆论文不能给你一个符合任何东西的命令。
3.如果您真的想掌握一个主题或者是公司的有用资产（以便您不仅仅是另一名与他们的工程师），请在专业领域进行特定课程文凭或大师学位。
4.随着公司的数量较少，切换工作/字段（从石油到汽车）/城市很难。大多数可能您将居住在初始阶段的偏远地区或第三个城市。但通过通过年龄，您将获得良好的经验和金钱遵循。
软件 ：-
最后的判决是，如果你选择任何领域，那么挑选你的心脏或激情，因为只有你的激情，你只能遵循40年的东西。
爱</description>
    </item>
    
    <item>
      <title>计算机什么时候能够绕过recaptcha？</title>
      <link>https://xiangqingw.github.io/posts/when-will-computers-be-able-to-bypass-recaptcha/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:25 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/when-will-computers-be-able-to-bypass-recaptcha/</guid>
      <description>计算机什么时候能够绕过recaptcha？ 回答 1 我可以告诉你你可以用来得到的方法吗？
去年我在同一个问题上。我尝试了几种我在网上找到的方法来破解。但它没有工作，只是浪费时间和能量。当我联系一组网络支持团队时，我最大的惊喜，这支球队就像我想要的那样授予我的请求。你不需要担心，因为在我自己的时候，我以为我无法得到结果，而是。 spytranceian@gmail.com.
能够帮助我。我承诺他们将把它们推荐给尽可能多的服务，以担保需要他们的℅100服务。
您也可以通过他们联系他们
Instagr.
我可以告诉你你可以用来得到的方法吗？
去年我在同一个问题上。我尝试了几种我在网上找到的方法来破解。但它没有工作，只是浪费时间和能量。当我联系一组网络支持团队时，我最大的惊喜，这支球队就像我想要的那样授予我的请求。你不需要担心，因为在我自己的时候，我以为我无法得到结果，而是。 spytranceian@gmail.com.
能够帮助我。我承诺他们将把它们推荐给尽可能多的服务，以担保需要他们的℅100服务。
您也可以通过他们联系他们
Instagram：Sphytranceian
What&amp;rsquo;Sapp：+1（702）344-3612
通过电子邮件：spytranceian@gmail.com
回答 2 已经有计算机程序是各种程度，成功绕过了reCAPTCHA技术。
reCAPTCHA是一种技术，旨在防止垃圾邮件（未经请求的广告）和网站上类似活动的示例。
reCAPTCHA已经并继续修改以跟上新的威胁。
人们坚持不懈的人不会被殴打，任何希望卖给他们的人都可能继续开发柜台技术。
回答 3 解决所有手机黑客问题，编程和在线培训
电子邮件：speckhack28@gmail.com.
whatsapp：+1（510）641-8472
Instagram：TraceFux.
经过认证的在线私人调查员和网络解决方案专家
*完全访问黑客进入所有类型的手机/设备
*陷入所有社交媒体帐户的不明​​解黑客
*修复信用评分
*修复公共纪录
*恢复和乘以比特币
*云和电子邮件数据提取
*位置跟踪
*被勒索 - 我们将追溯到它后面的来源和人员 -
联系WhatsApp或电子邮件
电子邮件：speckhack28 @
解决所有手机黑客问题，编程和在线培训
电子邮件：speckhack28@gmail.com.
whatsapp：+1（510）641-8472
Instagram：TraceFux.
经过认证的在线私人调查员和网络解决方案专家
*完全访问黑客进入所有类型的手机/设备
*陷入所有社交媒体帐户的不明​​解黑客
*修复信用评分
*修复公共纪录
*恢复和乘以比特币
*云和电子邮件数据提取
*位置跟踪
*被勒索 - 我们将追溯到它后面的来源和人员 -
联系WhatsApp或电子邮件
whatsapp：+1（510）641-8472
电子邮件：speckhack28@gmail.com.
解释你想要的东西，直行到这一点。
提供目标详细信息。
并简单地开始监控设备。
回答 4 问：为什么没有机器人/软件能够勾选我不是机器人盒？
它会绝对。这是一个往往的双重检查，通常由已经相信你是人类的系统使用，但只是确保机器人没有敲咖啡来分散你的注意力。事情是，上面是一个图像，不是文字。机器人必须在屏幕上抓住每个图像，并在其上进行劳动密集型过程，执行OCR（光学字符识别）。然后它必须单击框。这些&amp;rsquo;不是机器人recaptchas主要是寻找的是鼠标运动的模式。机器人往往是快速和光滑的，而人类往往是生涩的。尝试OCR整个屏幕的机器人将在踢进行动之前表现出讲述处理延迟。</description>
    </item>
    
    <item>
      <title>软件开发人员只能通过经验学习专业设置的东西是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-are-the-things-that-a-software-developer-can-only-learn-in-a-professional-setting-through-experience/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:25 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-are-the-things-that-a-software-developer-can-only-learn-in-a-professional-setting-through-experience/</guid>
      <description>软件开发人员只能通过经验学习专业设置的东西是什么？ 回答 1 如何在团队中工作
学习在大学中的编程是在许多方面的独奏努力。当然，你与同学交谈并谈谈编程概念和作业，但是在编写程序时，它只是你和电脑。
你可以：
和约100件事。这是你的代码。你可以做任何你喜欢的东西。
在一个不能飞的球队上。你会学到：
如何在团队中工作
学习在大学中的编程是在许多方面的独奏努力。当然，你与同学交谈并谈谈编程概念和作业，但是在编写程序时，它只是你和电脑。
你可以：
和约100件事。这是你的代码。你可以做任何你喜欢的东西。
在一个不能飞的球队上。你会学到：
您还可以了解似乎与编程无关的内容，如：
编程课程有时会有团队任务，但通常他们可能是灾难性的事务。您可能有两三个专用，聪明的参与者，也有一个或两个懒惰的白痴，他不做他们的一部分。然后整个项目失败了。或者在许多情况下 - 其他学生们拿起松弛，被迫比他们讨价还价更多的工作。
这不能在专业环境中飞行。当你应该工作时，你会懒散和玩视频游戏，你很快就会发现自己失业。
通常，您通常还会学习在多个监视器上编程的快乐（图像信用）
可以通过软件工程学位吱吱声并在最后弹出，甚至没有知道如何编程。这是不幸的。但在软件工程职业中蓬勃发展不知道如何在团队中编程和工作。在团队中工作只能在工作中学到。
回答 2 实用主义。它是在写入代码快速和编写代码干净之间找到合适的平衡。
回答 3 好吧，如果我可以通过Quora答案转发它，它不是你只能在专业设置中学习的东西，现在是吗？</description>
    </item>
    
    <item>
      <title>选择Fastapi与Python而不是用于Web后端的原因是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-are-some-good-reasons-to-choose-fastapi-with-python-instead-of-go-for-a-web-backend/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:25 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-are-some-good-reasons-to-choose-fastapi-with-python-instead-of-go-for-a-web-backend/</guid>
      <description>选择Fastapi与Python而不是用于Web后端的原因是什么？ 回答 1 快速API使Python非常快速和严谨。
当然，它永远不会像去那样快速和严谨。
那么为什么要快餐？
FastApi是当前在需要Python时构建后端的最佳选择。这不是FastApi VS Go，这是Python VS Go。
虽然Go是一个设计的语言很好，但并不难以理解，Python更容易写入和更高效地对中等项目。在更大的项目上闪耀，使其更简单地调试和维护程序，以及优化Ressources。
另一个原因可能是数据科学。 Python是数据科学的语言。如果需要很多
快速API使Python非常快速和严谨。
当然，它永远不会像去那样快速和严谨。
那么为什么要快餐？
FastApi是当前在需要Python时构建后端的最佳选择。这不是FastApi VS Go，这是Python VS Go。
虽然Go是一个设计的语言很好，但并不难以理解，Python更容易写入和更高效地对中等项目。在更大的项目上闪耀，使其更简单地调试和维护程序，以及优化Ressources。
另一个原因可能是数据科学。 Python是数据科学的语言。如果在后端需要大量的数据科学，则是一个很好的选择。
人们会告诉您在数据科学集装箱中使用Python并将其与包含后端逻辑的Go容器进行接口。好的&amp;hellip;&amp;hellip;你可以在大项目上做到这一点，但你可能不想在MVP或一个小项目上制作复杂的东西。
另一种解决方案，如果您担心计算的光程和维护API，它将使用Julia作为对Python的替代品。它将解决尚未解决的同一问题，但将保持简单，并且作为Python导向的数据科学。
回答 2 你更喜欢它。偏好是一个充分的理由，因为它可能表明您的意愿，甚至是最佳专业知识。
回答 3 这取决于您已经知道了什么，以及您的需求是什么。移动后端的开发可以用以下语言执行：
红宝石。一种通用的编程语言，它积极用于Web和移动应用程序开发。 Ruby语言有助于更快的开发，Ruby开发人员尝试遵守TDD方法（测试驱动开发），因此在编写代码之前进行测试，因此播出可能错误的数量。
Python。它被认为是学习最简单的语言之一。许多初学者在软件开发时开始学习Python。 Python完全匹配基于AI的复杂项目。
PHP。它是一种普通目的脚本语言，包含有效解决挑战的所有必需方面。 PHP具有强大的框架，如Laravel，Symfony，Joomla等，有助于降低开发时间。此外，PHP非常灵活，与许多第三方技术兼容。
node.js. JS开发人员可以使用Node.js进行大规模移动应用程序的开发。它是一种清晰灵活的语言，后端开发人员倾向于将其用于应用Java语言的Android移动应用程序。因为node.js被用作Java创建的组件之一。
戈兰（GO）。由Google开发的语言，它可能被视为最快的服务器端语言之一。它具有简单明确的语法，高性能和编译，与C和C ++库的兼容性，它是开源。
回答 4 Django是迄今为止Python最常用的框架，其次是烧瓶。
django [https://www.djangoproject.com/]是一个包含ORM，迁移，MVC模式，标记语言的电池框架
烧瓶[https://flask.palletsprojects.com]是一个最小的框架，juste让您创建一个路由，无论您想要它吗？
Fastapi [https://fastapi.tiangolo.com/]是专用于创建后端API的框架。
大多数想要创建后端API的用户会认为烧瓶&amp;hellip;&amp;hellip;
回答 5 一些差异在没有特定的顺序：
所以，当你可以使用一个框架或另一个框架时？我的拇指规则是：
仅用于API或机器学习模型，请参加Fastapi。
如果您想要一个完整的堆栈应用程序，您可能想要去烧瓶。
由于插件生态系统在快捷地球世界中成熟，这可能会在未来的几个月内变化。
回答 6 PHP也是一种非常受欢迎的语言，即使它开始作为家庭吹蛋解决方案
取决于它需要做什么以及您希望服务的用户数量。一件事是真的，但是&amp;hellip;&amp;hellip;如果我建议寒冷，那么我的答案将被拒绝&amp;hellip; :)
有几个好选择。 Java是一个非常受欢迎的大公司，因为Java几乎可以在每个系统上运行，而无需重新编译二进制文件。如果您有一些运行真正的UNIX系统的大型服务器，它也很受欢迎。 （任何不是Linux的东西。）它缩放得很好，但它是最好的吗？那要看。
PHP也是一种非常流行的语言，即使它开始作为一个应该只是制作简单的动态网页的家庭布鲁姆解决方案。它已经成熟了，尽管有点凌乱，编程语言，适合中小型网站。 WordPress，PHPBB和一些其他PHP软件的WordPress，PHPBB和其他一些PHP软件使其成为一个不错的选择，但主要问题是每个人似乎都有一个堂兄或侄子，他们可以在PHP中编写，但通常会在它的糟糕工作。在专家手上，PHP可以奇迹。太糟糕了，这更常常被小丑用来了解他们正在做的事情&amp;hellip;&amp;hellip;
整个.NET环境，尤其是.NET核心似乎很有希望。堆栈溢出网站是用.NET构建的，并提供出色的结果。它适用于开发数据驱动的网站并具有非常好的性能。与任何编程语言一样，它可以做奇迹。太糟糕了.NET有太多的爱好程序员，他们认为他们是专家。</description>
    </item>
    
    <item>
      <title>Python是否需要图形卡？</title>
      <link>https://xiangqingw.github.io/posts/does-python-require-a-graphics-card/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:24 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/does-python-require-a-graphics-card/</guid>
      <description>Python是否需要图形卡？ 回答 1 一点都不。
回答 2 编号机器学习可能需要图形卡但Python没有。所有或至少大多数Python的机器学习库都没有用Python写入Python，像Tensorflow和Pytorch这样的东西用C ++编写。有各种各样的原因。
编辑：删除了一些错误。</description>
    </item>
    
    <item>
      <title>你真的使用你在大学里学习的电脑算法吗？如果是的话，你可以在算法中买得起的最好的工作是什么？</title>
      <link>https://xiangqingw.github.io/posts/do-you-actually-use-the-computer-algorithms-you-learn-in-college-when-you-get-a-job-if-yes-what-is-the-best-job-you-can-afford-in-algorithms/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:24 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/do-you-actually-use-the-computer-algorithms-you-learn-in-college-when-you-get-a-job-if-yes-what-is-the-best-job-you-can-afford-in-algorithms/</guid>
      <description>你真的使用你在大学里学习的电脑算法吗？如果是的话，你可以在算法中买得起的最好的工作是什么？ 回答 1 你实际上使用你在学院学习的算法在你的求职面试中，但除此之外，一般来说，这一切都是完全没用的，直到它变得超级重要，那么你感觉真的很棒。
作为一个例子，在大学里，我是一个Math Minor的CS专业，我的CS集中是密码学。这意味着我可以了解大多数加密算法背后的理论，在代码中实现它们的代码（尽管所有的东西都是oes的最简单版本，我们做了一点点，但不是全部，手工），并且通常解决问题。我不是最新的，因为你永远不会使用它。规则＃1的密码术不是滚动自己的加密算法，因为良好的密码术很难，并且犯错误是没有人会捕获的错误。
我的第一份工作在大学里是一家信息安全公司，我尽职尽责地签署了加密邮件列表。那里有一些真正的聪明人，我们做了一个非常少量的加密工作，因为Crypto中的安全顾问的工作非常低，诚实。无论如何，最终我在Crypto邮寄上有一封电子邮件，最后询问关于C ++中的RSA实现的一些奇怪问题。有一件事导致另一件事，我简要介绍了我们正在审查的特殊密码系统的项目，在算法上表演密码分析，并试图挖掘实施中的漏洞。这可能是我曾经工作过的最酷的项目。
现在，我们使用算法的方式大多类似于这个故事。一般而言，我们有已经存在的数据结构，我们有已经存在的算法。但是，取决于您的工作是什么，以及您在做什么，您可能必须设计一个系统。此时，您可以利用您的数据结构和算法知识来进行良好选择。例如，如果是按顺序检索是重要的，则可以构建一个快速排序（或隐式排序数据）的系统。另一方面，如果您需要一些超快速的东西，您可以实现大量O（1）的东西。只有很少才能从头开始实现实际算法。如果您有兴趣使用/实施算法，我建议如下：
好运！
回答 2 你的问题让我想起了类似的问题，就像
我喜欢在微积分中解决积分，有没有工作？或者
我非常擅长欧盟几何中的施工问题，我可以在哪里使用那种技能？
有许多涉及算法的工作，但是
学校是关于教授你的基础，你可以用来扩展和开发新事物。例如，在我的职业生涯中，我必须开发并行调度算法，用于在并行架构中调度DSP算法。然后，我
你的问题让我想起了类似的问题，就像
我喜欢在微积分中解决积分，有没有工作？或者
我非常擅长欧盟几何中的施工问题，我可以在哪里使用那种技能？
有许多涉及算法的工作，但是
学校是关于教授你的基础，你可以用来扩展和开发新事物。例如，在我的职业生涯中，我必须开发并行调度算法，用于在并行架构中调度DSP算法。然后，我使用了从毕业生的运营研究中的背景来开发了一种新的动态分配算法。
你永远不会知道你在职业生涯中可能使用的东西，在大多数情况下，很少，但继续学习和探索，这令人惊讶的是大脑如何带回你从未想过的东西会有任何使用。
回答 3 我是专业的Web应用程序开发人员/软件工程师。
当我在公司的API上工作时，我在服务器端上使用它们，并需要构建用于转换/处理数据的自定义解决方案。
当我在我们的前端应用程序工作时，我真的没有使用它们。
它真的取决于你的角色。如果您想使用算法工作更多，请查看服务器端工作。全堆栈开发和API开发角色是流行的和有趣。我的偏好也是算法的工作。如果我有一段时间内陷入前端任务，我将前往黑客排名，并努力保持一段时间，以保持锋利和娱乐。
回答 4 大学教授（各种类型，文本搜索和模式匹配，跨度树等）算法是非tr
我使用我在大学里学到的一些算法，但并不是他们中的许多人。然而，这并不意味着学习它们是毫无价值的。我不后悔拉扯试图追逐悬挂指针并解决学习这些算法的赛格错误的时间。
算法类应教导您如何考虑潜在的解决方案，以实现一些相当复杂的问题，如何打破这些问题，以及如何设计和实现数据结构来支持这些解决方案。
大学（各种类型，文本搜索和模式匹配，跨度树等）算法的大部分都是非琐碎的编程练习，这些练习需要很多想法和能够管理一些非常抽象概念的思想。
回答 5 不要记住算法。别。
了解它们。
是什么让这个算法的工作？不要担心所有细节。除非你是奉献，否则你不会记得他们。没人做到。我们记得的是一般原则。 QuickSort通过尝试找到阵列的中点并将其切成两半。而已。这是我记得Quicksort的所有人，但那就够了。
事实上，它适合模式。二进制搜索是相同的。牛顿拉文申有点聪明，并使用坡衍生物）来获得更好的猜测。有一堆算法是一个用来玩游戏，但如果你以正确的方式看看它们，它们看起来像二元搜索树。现在，您可以从中重建它们。霍夫曼编码，同样的事情。划分并征服，基本上是相同的想法。
找到抽象是什么编程是关于的。但是，除非他们告诉你一些重要的东西，否则不要记住细节。
回答 6 TLDR：是的，软件工程师每天都经常使用它们。
排序，数据结构操纵，图形搜索等 - 已完成死亡。例如，他们已经在各种语言中实现了该功能，或者具有令人敬畏的专业工具，例如：
我们每天都使用算法，我们只是没有（重新）实施它们，因为我们站在巨人的肩膀上。
考虑一项建造/重建和定制汽车的汽车机械师。有很多工具可以用来制作热杆。但没有人，在他们的正确思想中希望他或她从头开始创造扳手，计算机诊断设备或液压插孔。
这将是非常低效的，坦率地说，疯了。但我们希望他们能够理论上知道工具是如何工作的。
P.S .:
如果您享受历史琐事的短片，请在Quora上订阅我的博客，称为历史比特。我每周都尝试添加一个故事或两个故事。
#keepkoding.
回答 7 这个问题与我们的上学日数学的问题非常相似，即使在记住公式之后，我们在解决问题时面临了很多困难，但是当我们曾经做过10-15个主题的问题时，我们曾经充满信心。
因此，在数据结构和算法中，学习和理解与在代码中实现了非常不同，我们在某个时候非常了解概念，但无法在代码中实现它。我曾经关注的一些最好的提示是：
在我的开始编码日中，我也面临着与您相同的问题，但在加入编码忍者之后，他们的导师建议我上面的步骤，帮助我在执行代码中实现数据结构。
另一件事是他们的TA（技术助理）支持，它的巨大，每当我被困，我总是习惯于联系TA支持，他们随时准备帮助我聊天或呼叫，我很舒服。有一个函数（代码对，在下面的右上角），允许我们将屏幕分享到TA，因此它们可以轻松解释我们的查询。
（在下面的SS中，您可以在右下角看到右侧是要求电话。所以我可以说他们随时准备以任何方式帮助我）
实习/放置援助：一旦我完成了我的课程的60％，我就开始收到与我的课程相关的实习和工作邮件。这总是帮助我更新自己关于MNC的需求。
编码平台接口的一些屏幕截图，我在我的日子里使用的是：
1码（编码Ninjas）
正如您可以在CodeZen的上面屏幕截图中看到的，它是一个结构化的编码平台，主题明智的问题，所以它在理解概念后，它在这里练习主题的概念后，它可以帮助我很多。
领导板也是在那里，这总是激励我继续前进，更好的速度。
还通过在Codezen编码忍者来组织编码事件，这有助于分享我的编码技巧。
2- Geeksforgeeks.</description>
    </item>
    
    <item>
      <title>免费反病毒程序，如avast通常允许与站点合作，将Cookie和Spyware放在您的计算机上吗？为什么我的反间谍软件程序会发现500个间谍软件经常（许多是我的Avast反病毒程序的文件，为什么？）？</title>
      <link>https://xiangqingw.github.io/posts/do-free-anti-virus-programs-such-as-avast-often-allow-and-even-cooperate-with-sites-to-put-cookies-and-spyware-on-your-computer-why-my-anti-spyware-program-would-find-500-spyware-often-times-many-were-files-of-my/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:24 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/do-free-anti-virus-programs-such-as-avast-often-allow-and-even-cooperate-with-sites-to-put-cookies-and-spyware-on-your-computer-why-my-anti-spyware-program-would-find-500-spyware-often-times-many-were-files-of-my/</guid>
      <description>免费反病毒程序，如avast通常允许与站点合作，将Cookie和Spyware放在您的计算机上吗？为什么我的反间谍软件程序会发现500个间谍软件经常（许多是我的Avast反病毒程序的文件，为什么？）？ 回答 1 线路黑客（LHW）
使用代码L5H2W9.
解决所有手机黑客问题，检索被盗资金和加密货币挖掘问题。
whatsapp：+1（904）434-4554（快速响应）
电子邮件：hackwaretech@gmail.com.
经过认证的在线私人调查员和网络解决方案专家 - 进入所有类型的手机/设备
*陷入所有社交媒体帐户的不明​​解黑客
*修复信用评分
*修复公共纪录
*恢复和乘以比特币
*云和电子邮件数据提取
*位置跟踪
*从诈骗者中检索你被盗的资金。
*被勒索 - 我们会追查sou
线路黑客（LHW）
使用代码L5H2W9.
解决所有手机黑客问题，检索被盗资金和加密货币挖掘问题。
whatsapp：+1（904）434-4554（快速响应）
电子邮件：hackwaretech@gmail.com.
经过认证的在线私人调查员和网络解决方案专家 - 进入所有类型的手机/设备
*陷入所有社交媒体帐户的不明​​解黑客
*修复信用评分
*修复公共纪录
*恢复和乘以比特币
*云和电子邮件数据提取
*位置跟踪
*从诈骗者中检索你被盗的资金。
*被勒索 - 我们将追溯到它后面的来源和人员 -
联系：
whatsapp：+1（904）434-4554
邮件：hackwaretech@gmail.com.
解释你想要的东西，直行到这一点。提供有用的目标详细信息并简单地开始监控设备。
我如何在我的伴侣的短信上窥探？
如果您怀疑您的伴侣的活动并希望看到他们通过移动设备才能通过他们的移动设备，您需要的就是联系我们，我们将为他们的设备进行黑客，并可以完全访问他们的移动活动。
这就是你将得到的：
检测手机位置
阅读短信检查
whatsapp和imessages调用日志
围绕录音
电话簿密钥日志记录
看不见的间谍免费更新
间谍电话（自动回答）
下载CSV等等。
你被骗了，你的努力赚了你的钱吗？无需惊慌，只需联系我们，我们将追踪诈骗者，您将返回退款。
联系：
whatsapp：+1（904）434-4554
电子邮件：hackwaretech@gmail.com.
解释你想要的东西，直奔这一点
回答 2 你得到你所付出的。由于您没有支付费用，您可能会以一种方式假设您是另一个时尚的产品。
只需跳过混乱并使用Windows Defender。当您购买Windows和Microsoft被确定时，您将为那个支付的那个，以提供最佳的Windows体验，包括无黑攻击。
回答 3 大家好，
你对你的伴侣或情人在你身后或随时随地的情况下好奇，你是否失去了朋友/家人，并奇怪你如何与他们联系，你是否失去了诈骗者并希望得到它们背部或者您只想完全匿名为您自己的安全。 seanhack01@gmail.com可以为您提供所有我们的长假问题的答案。</description>
    </item>
    
    <item>
      <title>如何从最大的最小列出3个数字？我知道如何列出最小，最大，但如何获得剩余的号码。</title>
      <link>https://xiangqingw.github.io/posts/how-do-i-list-3-numbers-from-biggest-to-smalest-i-know-how-to-list-smallest-and-biggest-but-how-do-i-get-the-remaining-number/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:24 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-i-list-3-numbers-from-biggest-to-smalest-i-know-how-to-list-smallest-and-biggest-but-how-do-i-get-the-remaining-number/</guid>
      <description>如何从最大的最小列出3个数字？我知道如何列出最小，最大，但如何获得剩余的号码。 回答 1 在Python中，除其他内容中，您可以使用Sorted（）函数。还有函数来对位置进行排序，即，不创建新列表。</description>
    </item>
    
    <item>
      <title>如何使一层褪色透明？</title>
      <link>https://xiangqingw.github.io/posts/how-do-i-make-a-layer-fade-to-transparent/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:24 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-i-make-a-layer-fade-to-transparent/</guid>
      <description>如何使一层褪色透明？ 回答 1 编辑图像的背景一直是最具挑战性和耗时的p
您希望删除图像的背景并使其透明存在许多不同的原因。例如，如果你有朋友的形象在海滩上闲逛，但是海滩上有其他人在你的朋友脸上分散注意力。在这样的情况下，您可能希望删除背景中的所有人，并将您的朋友留在海滩上看起来愉快和自然。这种方式看起来比拍摄的其他人更好。
编辑图像的背景一直是摄影最具挑战性和耗时的部分之一，但如果有一个可以自动执行它的工具怎么办？
Slazzer：在线照片背景编辑工具
Slazzer是一个在线工具，允许您只需单击一下即可轻松地删除图像的背景！此工具可以在没有您所需的任何Photoshop技能的情况下删除图像的背景，使其在几秒钟内轻松创建透明图像。您可以在删除并在您自己的项目中重新使用它们后保存您的图像，或与Facebook，Twitter和Instagram等社交媒体网站上的朋友分享它们。使用Slazzer，您不必将任何其他软件下载到计算机上;所有您需要的是Web浏览器即可开始！
谁是Slazzer适合？
每个人。无论您是专业摄影师，都希望精简您的工作流程或希望从您的孩子的照片中删除那个旧沙发，假期，Slazzer您是否覆盖。它对博主来说，希望为他们的图像添加一些额外的兴趣，并且是那些甚至相对低的科技用户甚至越来越达到自己的工具之一。
Slazzer如何与Photoshop＆其他工具进行比较？
Photoshop和其他可以删除背景的工具有很多限制。首先，大多数人都要求您知道如何使用Photoshop。其次，如果你不知道你在做什么，它很容易破坏你的原始图像。那是斯拉泽帮助你的地方;它使用户能够完全控制最终结果，同时为他们提供与使用Photoshop的经验。
Slazzer如何工作？
Slazzer使用先进的计算机视觉算法来检测图像类型并从Online中删除背景，并允许您在几秒钟内以最佳细节自动替换后台。要使用Slazzer让您的照片看起来更好地遵循这些简单的步骤：
第1步：上传所需的图像
访问Slazzer网站并只需单击上传图像“按钮即可上传图像。或者，您可以通过按Ctrl + V拖放图像或直接粘贴图像。
第2步：开始删除背景
上传图像后，Slazzer的高级AI将识别图像类型，并在几秒钟内自动从图像中删除背景。 Slazzer拥有一个令人难以置信的强大的ai，能够处理头发，毛皮或任何复杂的边缘，给您带来光滑和清晰的切口。
第3步：将编辑的图像保存在您的设备上
在您对最终图像剪裁室满意后，您可以通过单击“下载图像”按钮直接将其下载到您的设备。如果要添加或更改图像的背景，您甚至可以获得额外的选项以进一步编辑图像。
最后的话：
如果您正在寻找一个易于使用的良好图像背景编辑工具，可以快速工作多个不同的照片编辑任务，然后Slazzer就是您一直在等待的。无论您是想要将图像背景转换为黑色和白色还是完全切断图像的一部分 - 或者之间的任何内容 - Slazzer轻松完成全部。
回答 2 为什么有些事情是透明和最不常见的？量子力学。这个理论解释了关于光线和关于事物的相关事实。
回答 3 如果你不想去
您可以用萨伦包装或较厚的透明塑料制作一种纸张，它们用于术语论文的封面？即使是您用来涵盖文件的清晰层压板。它比玻璃纸更塑性，通常与文档或热量束缚;但我想不出任何理由，你无法用剪刀削减它，甚至通过意大利面制造商撕掉它。然后你用清漆，亚克力地板抛光剂混合碎片，或者在业余爱好商店购买的那种液体塑料，以填充模具并嵌入花或制作自己的国际象棋套装。
如果您不想遍及所有麻烦，您可能可以购买用于填充复活节篮子的碎片彩色透明电影。您可以在任何比例中混合在您想要的任何比例中，清楚地获取粉红色和粉红色和蔬菜。如果您想要更复杂的颜色，您必须找到那些彩色的Saran包装或术语纸质封面。
警告：我正在努力弥补;我从来没有这样做过，但我无法想象你不能的任何理由;最困难的部分将用类似凡士林的模具涂覆，即您的液体塑料不会粘附。
回答 4 有多种方式来实现它。我会提到我所知道的。
（那个红色对象在透明立方体后面）
（节点）
（使用Mix Shader节点来控制强度。如果您愿意，您可以使用其他方式）
那是循环的。敌人差不多。除此之外，您只需将阴影模式和混合模式更改为alpha散列。您可以在“材料”选项卡中的“设置”下找到它们。
提示：灯光扮演一个大角色wh
有多种方式来实现它。我会提到我所知道的。
（那个红色对象在透明立方体后面）
（节点）
（使用Mix Shader节点来控制强度。如果您愿意，您可以使用其他方式）
那是循环的。敌人差不多。除此之外，您只需将阴影模式和混合模式更改为alpha散列。您可以在“材料”选项卡中的“设置”下找到它们。
提示：光线在使用焦散时发挥着重要作用。所以请注意照明。
干杯
回答 5 制作照片透明的一部分
回答 6 如果材料在激光器的波长带上真正透明，则它将通过光子和透明材料之间没有相互作用的所有光子。然而，现实地，没有100％透明材料，因此具有足够的功率，任何激光都会切割任何材料。
然而，你问题的症状是真实的 - 材料的透明度越透明是给定波长的光，它越难以用该波长的激光切割材料。
回答 7 使艺术层变成智能对象，使用高斯模糊（或任何其他过滤器）。您现在有一个带有Live Smart滤波器的容器。双击智能对象以编辑或交换艺术;保存;关闭;和瞧，艺术模糊。花一点时间了解你的两个文件的主要文件和s.o.容器 - 彼此相关，以及如何通过单击名称右侧的小图标来更改智能滤波器混合模式的效果。</description>
    </item>
    
    <item>
      <title>我在哪里可以学习罗马语？</title>
      <link>https://xiangqingw.github.io/posts/where-can-i-learn-the-roma-language/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:24 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/where-can-i-learn-the-roma-language/</guid>
      <description>我在哪里可以学习罗马语？ 回答 1 好吧，这取决于你想要学习的方言：巴尔干，vlax，喀尔巴阡山脉，索蒂，吴洛斯曼尼，挪威旅行者，芬兰kaale等。它们并不是相互懂的。例如，乐队让我们进入vlax是海蒂JAS！，在Sinti是Jasame！
让我们带走VLAX方言，因为这是我最熟悉的那个。此话语分为许多子类别：Caldarar，Ursar，船舶等。它们有时，但并不总是可互动。让我们假设您要学习VLAX方言，Caldarar SubDialect。只有一种方式可以正确学习IT语言：通过生活在卡尔达尔社区一段时间并以他们的方式占据。这对于您想要学习的Romani的任何方言都有效。
但是，如果您还没有准备好进行这么冒险的事情，我对您有好处的消息：有很多词典，语法书，Belletristic，罗马尼的歌曲甚至电影（例如，例如Gadjo Diro）。
回答 2 没有写的大部分罗曼语。所以，学习罗曼语言的最佳方式是沉浸，简直生活和工作
罗曼尼人之间有几百个部落和方言。在阿尔巴尼亚单独，例如，每个人都有至少4-5个不同的部落，但有些是类似的。我个人知道我在地拉那，Meçkar和Kabuzis合作的两个部落。在他们中工作，我学会了一点点罗马尼。虽然，罗马尼人采用了他们生活的国家的语言，只在自己之间谈论罗马尼。
没有写的大部分罗曼语。因此，学习罗曼语言的最佳方式是浸没，简单地生活和工作，以便掌握他们的一些语言。当然，您必须首先赢得他们的尊重和许可，以便这样做。在大多数情况下，罗曼尼人不相信白人或外国人。因为他们迫害了数百年，甚至这一天也被视为二等公民。
回答 3 我知道俄罗斯文化与Gypsies有一种爱恨的关系。一方面，吉普赛人是浪漫主义的，因为他们独特的音乐和舞蹈，色彩缤纷的衣服和自由，不醚的生活方式。另一方面，很少有，如果在美国的任何练习吉普赛人解释了为什么你可能不会看到我们在美国的这一群体中偏见。在欧洲，仍有吉普赛团体遵循他们的传统生活方式。当我在苏联成长时在20世纪80年代，只要文化在摘要中存在这种文化，仍然有很多传统的吉普赛人。像你遇到的任何东西一样真实和有形。吉普赛人生活方式，唉，非常非常&amp;hellip;&amp;hellip;有一件事，就像1930年代迟到一样，俄罗斯吉普赛人对诱人的孩子们臭名昭着。这不是一个令人震惊的孩子。这不是一个令人震惊的孩子。这不是任何类型的流动icking，而是一种特殊的传统，诱导周围人群的孩子被提出作为吉普赛人，吸收到吉普赛社区中。没有婴儿，介意你;相反，老年人的孩子需要几乎不需要小心，但足够的年轻人足以与小组结合，吸收它的语言和传统。我的祖母是幸福的，他的地中海看起来很幸运，谁在罗斯托夫 - 上长大 - Don - Prime Gypsy Country - 告诉我，当她很少时，吉普赛人反复试图说服她与他们逃跑。他们答应了她从学校的自由和不受规则约束的生活。虽然这种做法变得不那么普遍存在战后时期，它的创伤记忆在非吉普赛人之间徘徊;我的祖母仍然会把手腕锁定在索契的农民市场大门，吉普赛人通常会征服。我自己接近了一次，在莫斯科的市场上，经过一群吉普赛人看到我与我父亲的争论是答案的，如果我加入他们，没有人会像那样打扮我。另一个创造紧张的因素都是吉普赛的财富柜员。他们通常在火车站接近人民，他们很激进如果你忽略了他们，或拒绝让你的财富阅读，他们会诅咒你。罗斯人通常非常迷信，吉普赛诅咒是认真对待的。这导致了与巫术和敲诈利有关的吉普赛人。寒冷的月份，传统俄罗斯吉普赛人就像其他人一样。他们有工作和家庭;他们的孩子们去了学校。但是每年都在4月下旬 - 五月早些时候，一旦夜晚足够温暖露营，他们就会辞掉工作，让他们的孩子离开学校，然后徘徊在南部的乡村直到早期-mid 10月。甚至苏联法律，这使得一个非残疾人成年人犯罪（正式），并犯罪将使孩子脱离学校，可以消除这种做法。徘徊的吉普赛人总是遇到紧张局势。这是吉普赛阵营的浪漫主义形象的样子：
冒着脑海的风险，维护你在影片中看到的旅行营，这将是非常昂贵的.Gypsies不是富有的人。这是一个真正的吉普赛阵营的样子：
像这样的游牧营通常比无家可归的营地或贫民窟更糟糕。无家可归者或贫民窟的居民至少试图无限期地留在一个地方，他们做了他们能够保持合理清洁并避免给予当地法律执法令人兴奋的理由驱动它们。但是徘徊的吉普赛人没有计划留下来;他们没有激励，对当地社区来说很好，这将只是举办几周几周。所以有垃圾，浪费和破坏。你可以想象当地的当地居民喜欢看到这些阵营出现在他们的城镇和村庄。 .plus，讽刺，足够，吉普赛定律关于仪式纯度禁止浸没沐浴，所以人们在夏天旅行了几个月 - 甚至无法使用Water的许多可用开放体之一清洁。淋浴或没有。由于在酒店系统之外基本上没有淋浴设施，因此它没有。我会让你的想象力填补其余的东西。
回答 4 这里有很多很好的答案，但我以为我会补充一点，从学习更广泛的语言时会很好。它将在你的生活中为你打开很多门。以下是从世界上语言的Wikipedia的图表，最母语为世界人口的百分比：
以下是百万母语人数的列表：
1.普通话 - 955
2.西班牙语 - 405
3.英语 - 360
4.印地语 - 310
5.阿拉伯语 - 295
6.葡萄牙语 - 215
7.孟加拉 - 205
8.俄罗斯 - 155
9.日本 - 125
10. Punjabi - 100
我会说这将是一个很好的选择</description>
    </item>
    
    <item>
      <title>我的Visual Studio Windows表单应用程序只加载设计但无法完成。我该怎么办？</title>
      <link>https://xiangqingw.github.io/posts/my-visual-studio-windows-form-application-just-loads-the-design-but-does-not-finish-what-should-i-do/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:24 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/my-visual-studio-windows-form-application-just-loads-the-design-but-does-not-finish-what-should-i-do/</guid>
      <description>我的Visual Studio Windows表单应用程序只加载设计但无法完成。我该怎么办？ 回答 1 听起来你可以用一个退出按钮&amp;hellip;&amp;hellip;，至少是你的含义的定义。如果您要立即关闭，为什么为什么要创建一种表格？
回答 2 讨厌的DLL文件。有时他们会流氓，最终失踪。他们去哪儿了？谁知道。
但。您可以在本网站下载缺少的DLL文件。只需将它们安装在他们通常在的目录中。我已经解决了这种方式，通常缺少来自旧版本的软件的文件，但特定程序正在寻找来自旧版本的文件而不是较新版本。
回答 3 是的。两个完全不相关的产品，恰好恰好存在类似的名称。
Visual Studio是一个主要用于C＃和C ++开发的IDE，而vscode是一个文本编辑器，可以用于几乎任何语言，具有各种插件（但主要由Web开发人员使用）。
回答 4 第二个优先级将是Xcode，但它有太多的功能，不突出
首先，这些不是SDK，他们是IDE（集成开发环境）。我已经用完了这三个，因为它们用于不同的平台（Android，Windows和iOS以相同的顺序），我无法与另一个相同的比较。但是，如果我真的要选择，我会选择Visual Studio（只有在终极版本中，才能在终极版本上），因为Nuget包的无缝集成，Intellisense和RAM上的亮度。如果您将您的代码完成，则不会在任何地方找到比IntelliSense更好的工具。
第二个优先级将是Xcode，但它有太多功能，而不是视觉工作室无法正确解释。当然，我应该读一本关于如何正确使用的书，但我有更好的事情要做;-)
Android Studio是一个良好的IDE，比Eclipse更好，用于Android开发。然而，Gradle Build System对于一个新的家伙太复杂了。即使我仍然没有完全理解它。在谷歌之上，谷歌继续使用每个使项目不稳定的更新带来新的更改，并在build.gradle中显示很多错误。例如，它们确实使用minifyapp更改了runproguard方法，我必须在20多个项目中进行更改。它仍然在测试版中，虽然已经获得了1.0版本。所以生病了最后。
回答 5 是的。
自2013年以来，微软已免费提供社区版。Visual Studio 2013,2015和2017年都有社区版本。
Visual Studio IDE社区版是免费的，与Visual Studio Professional有效。社区版本的许可证不会过期（只要您将其链接到免费的Microsoft帐户），并且可以用于商业开发（如果您和您的组织属于许可要求[https：//www.visualstudio。COM /许可证&amp;hellip;&amp;hellip;
回答 6 是的你可以。无论您使用哪个版本。您也可以在社区版中销售应用程序。
Infact曾构建后，任何版本内置的应用都没有区别。
应用程序是平台人气的最大原因。 （Android VS Windows Phone）。微软在大量投资Visual Studio和现在Visual Studio代码根本没有付费版本。
企业版有许多好处，但社区版本足以进入中级应用程序开发。
对于商店应用程序，有一个限制，但您可以使用免费会员资格（无关
是的你可以。无论您使用哪个版本。您也可以在社区版中销售应用程序。
Infact曾构建后，任何版本内置的应用都没有区别。
应用程序是平台人气的最大原因。 （Android VS Windows Phone）。微软在大量投资Visual Studio和现在Visual Studio代码根本没有付费版本。
企业版有许多好处，但社区版本足以进入中级应用程序开发。
对于商店应用程序，有一个限制性，但您可以使用免费会员资格（与Visual Studio无关）。
免费开发许可证允许您使用您的名称发布应用程序。
如果您想作为公司发布，您需要付费会员资格。
回答 7 您打开vs并选择帮助 - &amp;gt;</description>
    </item>
    
    <item>
      <title>为什么一些开发人员过去困扰着？为什么他们不让像Rust这样的现代语言接管C &#43;&#43;？</title>
      <link>https://xiangqingw.github.io/posts/why-are-some-developers-stuck-on-the-past-why-dont-they-let-modern-languages-like-rust-take-over-c/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:23 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-are-some-developers-stuck-on-the-past-why-dont-they-let-modern-languages-like-rust-take-over-c/</guid>
      <description>为什么一些开发人员过去困扰着？为什么他们不让像Rust这样的现代语言接管C ++？ 回答 1 没有免费餐，没有银弹。时期。
我现在一直是一个C ++开发人员，我可以告诉你一件事。
很多人认为昨天出现的一切都更好，因为人们已经过了他们的错误并建立了解决这个问题y的问题。
这不是真实世界的工作原理。
您需要了解语言是工具，由不同的人使用不同的目的。
但让我们回到C ++ vs Rust。
首先，几乎所有现有的操作系​​统都历来是用3个主要技术写的
没有免费餐，没有银弹。时期。
我现在一直是一个C ++开发人员，我可以告诉你一件事。
很多人认为昨天出现的一切都更好，因为人们已经过了他们的错误并建立了解决这个问题y的问题。
这不是真实世界的工作原理。
您需要了解语言是工具，由不同的人使用不同的目的。
但让我们回到C ++ vs Rust。
首先，存在的几乎所有的操作系​​统都是用3个主要技术写的：
我必须说它不会阻止您在Rust - &amp;gt; redox中写一个操作系统 - 您的下一个（Gen）OS - 氧化还原 - 你的下一个（Gen）OS是一个例子。
不要让我错了，Rust是一种伟大的语言，但它于2010年发布。它在C ++后面的约30年来级联。
在这30年里，有一大吨图书馆和一般软件为C ++编写，以及C ++以各种目的。
无论您是否喜欢它，C ++现在都不是与1980年开始重新开始时的语言。
它已经进化了。标准发生了变化，很多事情发生了变化，事先知道C ++的人会愉快地使用它。
看看C ++ - 98，看看C ++ - 20。好像这两个是完全不同的语言。但C ++ - 20仍将支持C ++ - 98范式。
第二件事是人们不喜欢改变东西只是为了改变。如果它没有破坏，请不要修复它。
它只是对具有大码布的公司来重写整个项目来生锈，只是因为它是新的和酷的。开发人员在这些项目上致力于薪金，并通过编写C ++代码来提供家庭。最终用户并不真正关心使用的编程语言。他们关心功能。
此外，世界各地的大学仍然教授C和C ++作为其课程的一部分。
不是那么多教生锈。
所以，不，那些开发商不居住在过去，而是人们生活在幻觉中，新的和闪亮的技术比旧的和经过验证的技术更好。
我希望我用答案冒犯了你。
回答 2 首先，即使我有C ++凭据，我也不喜欢C ++。</description>
    </item>
    
    <item>
      <title>为什么越南与东南亚的邻居相比，即缅甸，泰国，马来西亚，马来西亚，柬埔寨，为什么会产生这么多顶级程序员？</title>
      <link>https://xiangqingw.github.io/posts/why-does-vietnam-produce-so-many-top-programmers-compared-to-its-neighbors-in-south-east-asia-i-e-myanmar-thailand-malaysia-cambodia/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:23 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-does-vietnam-produce-so-many-top-programmers-compared-to-its-neighbors-in-south-east-asia-i-e-myanmar-thailand-malaysia-cambodia/</guid>
      <description>为什么越南与东南亚的邻居相比，即缅甸，泰国，马来西亚，马来西亚，柬埔寨，为什么会产生这么多顶级程序员？ 回答 1 越南经常在国际科学奥林匹克人中经常非常高的事实，展示了这些越南人的才华。
数学十大国家奥林匹克。越南是唯一关于排名的东南亚国家。
国际奥林匹克在天文学和天体物理学上有一个越南冠军。印度尼西亚是唯一一个加入顶级的国家。
然而，这个国家并不总是在前10名，但它经常加入前20名，也许是最好的。我认为由于某些事实，这么多越南语是编程者的原因：
然而，越南是悲伤地，一个在腐败和政府本身肆无忌惮地负责掠夺金钱，只有一个小精英团体欺骗共产党，这是一个典型的案例，在许多前苏联国家和东欧看到很多案例索赔它投入IT教育。状态腐败和操纵调节如何引起脑流失的最佳示例之一是Flappy鸟类示例。由越南企业家开发，他必须在卖给台湾开发人员之前将其拉下来。[1]此外，同一政府没有明确的计划关于如何招募其海外的才能回到本国，这是一个成功完成的台湾，日本，韩国和中国。
[1] 现在，这是一个越南遭受的讽刺悲剧。它有很多人才，但其政府是犯罪本身。
脚注
回答 2 自2010年以来，在这里居住在这里，经常与许多越南大学生（包括我的两个福斯特儿子，现在在大学学习;顺便说一下，我的妻子是越南语）在我的英语专业教练下，我敢说，在数学和物理学方面，这里的教育系统就像不是比新加坡更好。
我的信念被越南学生经常在国际数学和物理奥林匹克人中的最佳表演者。
曾经在新加坡排名第一的学校的印度尼西亚学生告诉我，他学校的大多数学生常常担心越南神族的优越性，当它来到数学和科学时。
回答 3 谢谢你的A2A。我找到一份报纸，这是由工程师撰写的，他们在越南工作的Googe。他说：越南人在二年级和三年级开始基本的编程课程，他们开始学习如何使用Microsoft Windows以及如何键入。根据个人学校的访问权限，美国在美国的学生可能会在那个年龄的同样的事情上学。但到了四年级，明确美国和越南的孩子正在被配置不同，5年级他们正在写入包含循环的循环循环的程序。越南的第五年级学生是如此熟练的，他们可以在美国做同样的编程11年级学生，这意味着越南的第11年级学生显着推出了他们的美国同龄人。谷歌工程师表示，越南11年级学生知道足够的计算机科学来通过他们的面试过程。
我想他夸大了。当我12年级时，我和我的朋友就像美国工程师所说的那么多。我刚玩过一些游戏。最近，我听到越南的9年级学生，他们做了浏览器。您可以在此处下载他的浏览器：http：//www.kt-browser.com/，但我像他这样的学生在越南流行。根据其他来源：越南是世界上竞争（信息技术外包）的最具竞争力的选择之一，根据Gartner的市场调查，由于低劳动力成本，人才稳定和金色人口期间。 Gartner的巨大优势指出，越南的劳动力成本恰好等于印度的一半。与此同时，越南已进入金色人口期对于每两个人或更多工作的意义，只有一个依赖的人。 Lam Nguyen Hai Long，Quang Trung Software Park的副主任，引用了一系列的优势，可以使越南成为世界领先的ITO提供商。越南每年生产40,000家学士学位。除了向投资者提供的税收激励和人力资源开发的政策外，政府还鼓励对高新区和软件园区的投资。
一些越南产品：7554是第一人称射击视频游戏
越南动画：
资料来源：谷歌工程师表示，越南11年级学生知道足够的计算机科学来通过他们的面试过程
回答 4 好吧，我不确定是否有一些统计数据来表明越南拥有比海上邻居更多的顶级程序员。老挝，缅甸和柬埔寨可能落后于我们，而是泰国，马来西亚，也可能是剩下的海上。如果您的假设持有，以下是我们可能考虑的原因：
 越南教育制度重点关注数学和科学。越南实际上在比萨排名和一些国际奥林斯德（即Ioi和IMO）中已经做得很好。
比萨排名（2015）
IOI累积结果
IMO累积结果 高量的互联网使用
好吧，我不确定是否有一些统计数据来表明越南拥有比海上邻居更多的顶级程序员。老挝，缅甸和柬埔寨可能落后于我们，而是泰国，马来西亚，也可能是剩下的海上。如果您的假设持有，以下是我们可能考虑的原因： 越南教育制度重点关注数学和科学。越南实际上在比萨排名和一些国际奥林斯德（即Ioi和IMO）中已经做得很好。
比萨排名（2015）
IOI累积结果
IMO累积结果 大量互联网用户（占人口48.31％）和移动蜂窝订阅（近1.4亿）
来源：
越南令人惊叹的学校标准崛起 - BBC新闻
国际奥林匹克信息学 - 统计
国际数学奥林匹克  回答 5 泰国更好，但正如我所理解的那样 -
A2A。我对越南的教育系统不太了解，但我可以更普遍地对该地区发表评论并进行受过教育的猜测。
柬埔寨的教育非常糟糕，特别是高等教育，因为大多数人都没有完成高中。由于大多数学校没有教学这一点，它的技能特别缺乏，而互联网接入尚未达到大部分人口。老挝更糟糕，据我所知，缅甸是一样的。
因此，这些国家基本上无法制定熟练的程序员。
泰国更好，但正如我所理解的那样，IT国际素质教育仍然仅限于可以支付的人的相对少数人。
另一方面，越南可能旨在为所有公民提供高质量的教育（成为共产党国家）。我很惊讶的是，来自越南的最高质量的程序员，但也许这是政府战略。专注于软件工程是未来验证劳动力的好方法，这一领域的优质教育将为一个出色的区域出口而产生。
马来西亚更加发达，我很惊讶它不会产生更多的最佳程序员。可能是马来西亚恰好专门在其他领域（我认为工程和金融），或者可能是由于人口大小的差异。
回答 6 我不知道其他国家，但对于越南案件，越南的许多青少年尤其是男性对此感兴趣。大多数人我知道学习或想学习它。我觉得它就像印度人爱蟋蟀一样，所以邦特斯等
回答 7 越南语，在另一边，也是沙</description>
    </item>
    
    <item>
      <title>什么软件建议最好学习Python？</title>
      <link>https://xiangqingw.github.io/posts/what-software-recommendations-are-best-to-learn-python/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:23 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-software-recommendations-are-best-to-learn-python/</guid>
      <description>什么软件建议最好学习Python？ 回答 1 我想你的意思是什么IDE？
先查找IDE。
IDE将取决于您对语言的作用。
在机器学习中，我们使用juypter笔记本电脑。
回答 2 我假设你正在谈论Pycharm，Vscode，Jupyter笔记本等的界限。
如果你在谈论学习资料，那么YouTube可以为初学者做一个很棒的开始。
回答 3 大家好，
我是Sanaya Rajput，我想回答这个问题。在开始讨论之前，首先让我们了解Python。
什么是python？
Python是最受欢迎和解释的高级编程语言。基本上它用于Web开发，软件开发，数学，科学和数字应用程序。
如何学习Python？
如果要掌握Python编程语言。因此，您可以在线和脱机平台，您可以在这里加入和学习Python。如今，许多在线平台为Python提供了教程和视频。但你应该有好k
大家好，
我是Sanaya Rajput，我想回答这个问题。在开始讨论之前，首先让我们了解Python。
什么是python？
Python是最受欢迎和解释的高级编程语言。基本上它用于Web开发，软件开发，数学，科学和数字应用程序。
如何学习Python？
如果要掌握Python编程语言。因此，您可以在线和脱机平台，您可以在这里加入和学习Python。如今，许多在线平台为Python提供了教程和视频。但是你应该了解哪个平台最适合你的知识？因为您可以通过在实时项目和良好的指导下成为Python编程语言的专家。
学习Python的优点： -
Python课程模块： -
Python训练程序员后的工作角色： -
来自研究所的Python课程： -
最好的研究所为学生提供了现场项目培训，成为Python课程的专家。如果您想学习Python编程语言，那么我会向您建议您为一个非常适合您的Python课程的Jeetech学院。该研究所在Python字段中提供了完整的指导，这对学生来说真正有助于学习关于Python的最佳事物。这所学院的培训师在Python拥有10多年的经验，这对学习者来说非常有帮助。
该研究所可以是学习Python语言的步骤指南。他们根据行业的要求培养学生，并帮助学生在Python领域开发更令人满意的专业。这是德里学习者之间的可能研究所的原因。
为学生做好准备，学生需要最好的学院才能报名。一些像Jeetech Academy这样的流行研究所，为学生提供专家培训。完成课程后，他们还在行业中提供100％的就业安置，以创造学生的光明未来。
谢谢你滚动&amp;hellip;&amp;hellip;
回答 4 取决于您需要做什么。您可以为几乎任何东西利用任何一种语言，但它们肯定有各种质量和缺点，可以帮助您结束，这是对您所做的事情更好.Python对以下是有用的：
•数字注册和AI
•各种科学和学术品（统计语言处理）
•快速原型设计
•网站后备
•学习和显示编程思想
•工作流程预装和其他用于整理直接职位的项目。•与C Libraries.java有用的接口：
•创造和拨款
取决于您需要做什么。您可以为几乎任何东西利用任何一种语言，但它们肯定有各种质量和缺点，可以帮助您结束，这是对您所做的事情更好.Python对以下是有用的：
•数字注册和AI
•各种科学和学术品（统计语言处理）
•快速原型设计
•网站后备
•学习和显示编程思想
•工作流程预装和其他用于整理直接职位的项目。•与C Libraries.java有用的接口：
•创建和拨款申请（在多才多艺和工作区域）
•高执行网络后端。•在庞大的范围内创建剧烈，可靠的编程，特别是在群体中。•实施信息基础等更精确的编程框架
•作为学习JVM的开始阶段并利用它的各种其他有趣的方言，它有像Kotlin，Scala，Clojure等各种其他迷人方言。我和许多其他人都赞赏Python的编程而不是Java，但是，Python不太最合适对于每个工作，这对于Java是稳定的地区特别有效。发现了什么样的工作对你有关，并选择依赖于那样.Possige是一个略微无礼的答复：你应该倾向于在Python上倾斜，假设你需要做这个排序Java倾斜的工作。•Java更快，没有全球翻译锁定.Oon您在Python中组装了一个大量开发的基于Web的媒体网络，那么，您将遇到一些激烈的演示限制，JVM将缩小良好和平坦
•Java是静态组成的。您的代码库开发，这些类型真正帮助您协调努力和持续支持。他们允许编译器获得全新的错误，他们考虑到更好的IDE帮助。展示处理更大的框架以静态撰写的语言更快，恰恰通过衡量边界的大量贡献来逐步衡量时间
•Java具有更大的生物系统。可以在现有乐器和结构在Java中的空间中工作，然后，此时，Python不会是您的最佳选择！•Java是Android改进的决定语言。我不介意在Python中撰写便携式应用程序的任何文库。•许多企业倾向于java.assuming您需要在猜测银行业务中工作，具有风险投资银行合同率，然后，此时，您将很可能在Java中这样做
•现在，当您与不同阶段的特定组织的问题上向上讨论向上讨论时，您可能会追踪问题，但是您可以找到基于网络的指定权限，谁在依赖实验中测试您的答案？No.does，它让您了解如何在正常情况下解决询问时需要多少时间？No.does它给你一个理想的安排？DodeStudio做了一切。这些问题可以依赖于主题，组织，麻烦和您的状态来安排问题
Codestudio提供了三个原则亮点 - 过去的谈话与遇到的谈话，练习过去的谈话，以及依赖于组织和鉴于主题的顶级询问.Furtimore，Codestudio另外，您应该仔细阅读和录制您应该观看的文章编码Ninjas.CodeStudio Isnt只是一个阶段的技术举行阶段，但是将提供培训问题的范围，以码司公，Codechef，HackereareTh，Hackerrank，LeetCode等阶段的全球编码困难竞争
该阶段是一个非凡的学习设备，适用于任何用于技术临时工作会议和新员工筛选的人.Since它在主题技术组织上捕获了数据结构，编程基础，递归和回溯等主题的主科学组织中的每一阶段，然后.CodeStudio没有对你有所帮助。已经记住了工程师的先进必需品，并希望你能够简单地承诺你的时间和能量，而不是乘坐网络，并对事情进行操作。它是一个停止答案满足您的所有编码需求。结论：</description>
    </item>
    
    <item>
      <title>作为软件工程师，为什么不利于切换到AI？</title>
      <link>https://xiangqingw.github.io/posts/as-a-software-engineer-why-dont-you-have-an-interest-to-switch-to-ai/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:23 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/as-a-software-engineer-why-dont-you-have-an-interest-to-switch-to-ai/</guid>
      <description>作为软件工程师，为什么不利于切换到AI？ 回答 1 对我而言，亲自，有两个原因：
回答 2 AI（人工智能）是营销期限。
我不是营销专家。
有一种误解，AI是一件真实的。在过去的40或50年里，唯一一个新的AI是计算硬件的改善。
只要我能记住，我就可以了，并且只要我能记住;它只是数学，统计数据和大量数据。算法均超过60岁。它们刚刚在更好的硬件上运行。
回答 3 EMM &amp;hellip;&amp;hellip;我研究了2个学期的AI？那是一个宽朴的回答男人吗？
另外..我有这些：
所以..我们正在寻找什么样的A.
我的意思是批准 - 有很多，许多人比我更聪明，越来越多，是的，但后来..我有这些。
你试图解决的问题是比销售术语更重要的方式 - A.I.
回答 4 作为软件工程师，我对我可以用来完成工作的工具感兴趣。我不想成为那个带有锤子的那个人，在办公室里寻找钉子。我想成为一个装满工具的盒子的家伙，准备在适当的时间为工作制作适当的工具。对于几乎所有任务，我可能会在我的职业生涯中遇到，这不会是AI。
在我看来，每个软件工程师都应该了解机器学习，它是如何工作的，其限制以及适合使用它的何时。然后他们应该把它放在必要的时候。
回答 5 简单的…。
因为我不需要它。
当我开始在需要它的项目上工作时，那么我会开始与之合作，直到那时&amp;hellip;&amp;hellip;
对于重要的是，所有这一切都是新的，我在1994年在大学进行神经网络，预测推理和基于节点的内存管理！
回答 6 你是什么意思，通过切换到ai？实现机器学习需要软件，并在其输出上表现出软件。它的乌龟一路下来！&amp;lsquo;ai&amp;rsquo;只是更多的软件。是的，它是一个利基地区，一些任务可能不涉及编码，但是有大量的“邻近”它区域，如数据库管理，如果一个人如此倾向，那么一个人可以进入。我就像编码一样，对它的需求很大。
回答 7 AI是，永远将是未来。
老实说，自20世纪80年代初我进入软件开发以来，我一直在听到和阅读AI。
一堆钱被倾倒在一起，有很多新闻界，那就火了。我看过这一点很多次。每次有任何技术改进，AI的支持者声称它是AI。这是一个很好的例子。
许多汽车现在有一个传感器，当您触摸转动信号或开始转动时，检测车辆在另一个车道中&amp;hellip;&amp;hellip;
回答 8 我已经开展了超过18岁了，我在第8个工作中：
工作[0]我：老板，除了你的声音之外，我只听到了你，我一直在这里超过5年，我刚刚得到了我的主人，如何给我一个技术领先标题和反映我对这家公司捐款的薪水
老板：现在是艰难的。让我们在明年重新审视它
招聘人员：我可以在您的技术领先地位兴趣您支付15次盛大的信息吗？
工作[1]我：老板，你一直告诉我，我是你的顶级人，一直在建筑师水平上表演。我已经在这里超过了2年了，刚刚得到了我的MBA，如何给我促销和薪水
我已经开展了超过18岁了，我在第8个工作中：
工作[0]我：老板，除了你的声音之外，我只听到了你，我一直在这里超过5年，我刚刚得到了我的主人，如何给我一个技术领先标题和反映我对这家公司捐款的薪水
老板：现在是艰难的。让我们在明年重新审视它
招聘人员：我可以在您的技术领先地位兴趣您支付15次盛大的信息吗？
工作[1]我：老板，你一直告诉我，我是你的顶级人，一直在建筑师水平上表演。我已经超过了2年了，刚刚获得了我的MBA，如何给我一个反映我对这家公司贡献的促销和薪水
老板：你不应该被金钱动力
招聘人员：我可以在一个建筑师位置感兴趣，支付20次盛大更多？
工作[2] BOSS：你已经为我们做了一个惊人的工作，为我们实施了这个惊人的新技术，但我们有一个大规模的遗留系统改变，优先考虑这个新的东西。您需要了解这家公司之外的任何旧的4GL语言，在明年内关注并监督遗产开发商团队。
招聘人员：您是否考虑过咨询？你不会得到好处，但你可以让60次盛大。
作业[3]有毒的双功能环境。旋转门。管理者互相尖叫，开发商。大多数人不会超过几个月。
工作[4]老板：你在这里一直是一个超过6年的顾问，你做了一个惊人的工作。然而，我们公司希望采取新的方向，我们不确定哪种方式。在没有发展的情况下，我们不能让你在这里。我们将不得不在下个月停止您的合同
我：这很棒。你是一个伟大的老板和朋友。
工作[5]我：老板，我一直在这里，这个地方很好，但每个人都对我们的主要倡议失去了信心。 CTO离开了，你的老板离开了，我的通勤很长，我有机会距离我的房子有15分钟的支付。考虑到我3周通知。
工作[6]老板：我们想尝试一些新的东西。业务分析师和Scrum大师都有两支球队，但科技领导只负责一个团队。我们希望您展示技术领先优势可以同时引导两支球队，仍然花费50％的时间发展。您的第一个团队有8个开发人员（2在此6是离岸）。你的第二队有7名开发人员（这里有6个，6个海上）。有一个2小时的TimeZone重叠，所以有足够的时间让您在早上与他们触摸。祝你好运。
我：老板，我一直在这里，我真的不适合这种类型的工作。我是一名工匠和一名技术学家。我想建立软件不会监督全球另一边的一些开发人员，而他们修补了一个20岁的遗产系统。考虑到我的3周通知
工作[7]：到目前为止，我喜欢它很多，但这个地方有2年的承包商参与限制。如果他们找到一种方法来制造一个例外，我会留下来，只要工作很有趣，如果没有，我必须离开。他们为我提供全职就业，但无论我多么喜欢这个地方，我都没有服用50万美元的削减
回答 9 事实是，每次评估周期都会肯定会发生变化。它可能是你的
您无法阻止软件行业的变化。你必须拥抱它并通过唯一的规则玩：继续学习并继续移动。</description>
    </item>
    
    <item>
      <title>您的公司使用什么技术堆栈？</title>
      <link>https://xiangqingw.github.io/posts/what-tech-stack-does-your-company-use/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:23 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-tech-stack-does-your-company-use/</guid>
      <description>您的公司使用什么技术堆栈？ 回答 1 Geniusee开发产品和服务，为各种客户和合作伙伴提供咨询和支持。其中，Fintech，Edtech，Agrotech等的动态业务以及来自Ycombinator＆TechStars的初创公司，在A系列到D融资轮。我们的engiusee客户也努力创新，加速和茁壮成长！
我们的专业知识包括：
您可以在此处找到的更多详细信息 - https://bit.ly/3a9dspn
回答 2 在大量的像素创作，我们使用：
回答 3 我们公司主要使用Ruby在Rails，前端JavaScript框架和PostgreSQL上使用Ruby。
我们在Rails上使用Ruby为大多数服务器端代码，浏览器中的React.js进行快速可视化，用于使用图表和数据表，浏览器中的jQuery来处理所有客户端DOM交互（例如事件），Node.js时使用SMTP ID或域ID与Aweber或MandRill API发送电子邮件以连接到具有启用Gmails TLS安全协议的服务器，Angular 2在构建具有富裕用户界面的新的单页应用时，在需要路由时emberjs构建新的单页应用程序在已存在的应用程序中的服务无需重写初始应用HTML汤模板逻辑
回答 4 我们公司使用了一个基于Java的开源Web开发框架，我创建了名为Kiss。它包括已配置和运行的前端和后端。开箱即用，它支持REST通信，微服务，身份验证，SQL API，报告，自定义HTML控件以及更多。看看这个！吻开源Web开发框架
回答 5 我以前使用过的Oracle堆栈的公司。
回答 6 选择合适的技术堆栈绝对是启动创始人最重要的任务之一，这是可以理解的。
毫无疑问，每个人都想创建一个不仅是时尚和现代的产品的产品，而且还稳定，可靠，可维护。并且为了实现这一目标，您必须选择合适的技术堆栈。
根据我的经验，我认为技术堆栈的组成部分应该是流行的，可靠的，并且有一个大社区。现在，让我们精心详细说明每个项目。
根据2020年进行的堆栈溢出调查，JavaScript一直将首先保持为最常用的编程语言。
至于Web框架和库，React.js和Angular正在快速增长，并且节点.js.连续第二年首先取下。
为什么要关心技术的普及？好吧，原因很简单。
如果您选择的技术已经过时或勉强有人使用它，这意味着如果出现一些问题，您可能很难解决问题。
我最近有一个案例在启动创始人从转到JavaScript和CypeScript时，他们遇到困难寻找质量的开发人员，以便维护和进一步开发应用程序。
例如，Facebook支持并保持反应，而Google则负责角度。它为什么如此重要？
使用React和Angular意味着新版本和更新将定期发布，您的应用程序将始终是最新的。
如果您正在寻找的技术有一个大社区，那么有些非常酷的好处就有了。
例如，机会是您的特定需求的库，这将减少开发时间（例如，材料UI库可用于所有流行的前端框架，如角，反应，Vue）。
（仅限您的信息，根据GitHub，Angular由1.6米的人使用，由520万开发商使用的反应）。
如果上述所有完成，则会弃用该技术的较小机会。
考虑到JavaScript是一种快节奏的技术，大多数框架都很受欢迎，可支持，并且具有大社区，我建议使用一些JavaScript框架/库，如React，Angular，Vue和Nest.js，Node。 JS，你不能和他们出错。
回答 7 在当前的数字时代，平均堆栈是选择您的业务应用程序开发的有益方法，但存在一些缺点，这些缺点是限制公司使用这种方法。以下是均值堆栈Web开发中出现的一些主要缺点。
但是，您可以通过使用均衡堆栈开发服务来看一些优势。它允许创建简单的开源应用程序并建立强大和可维护的解决方案。它还使开发人员能够快速开发应用程序和Web应用程序。因此，选择平均堆栈方法取决于您的所有应用要求。首先分析您的所有需求并选择最好的需求。
回答 8 我觉得这个问题的答案是&amp;hellip;更多问题。
我的朋友菲尔B.-谁建立了小型和大客户的独立和企业产品 - 在本指南中选择技术堆栈之前回答11个问题[1]。
[1] 我会引用与您的特定情况相关的人imho：
这只是其中的一些
脚注
我觉得这个问题的答案是&amp;hellip;更多问题。
我的朋友菲尔B.-谁建立了小型和大客户的独立和企业产品 - 在本指南中选择技术堆栈之前回答11个问题[1]。
[1] 我会引用与您的特定情况相关的人imho：
这只是其中的一些，但回答这些将不可避免地缩小你的技术堆栈选择！
脚注
回答 9 （更新：我已将此答案扩展到Developerzen的博客文章中）
作为一个CTO和Technology Advisor致力于许多初创公司，我可以告诉您选择初始技术是您必须考虑到几个因素的重要决定：</description>
    </item>
    
    <item>
      <title>我目前正在学习BS信息技术，我只是想问一下，如何在编码或编程方面变得更好？</title>
      <link>https://xiangqingw.github.io/posts/im-currently-studying-bs-information-tech-and-i-just-want-to-ask-how-do-i-get-better-in-coding-or-programming/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:23 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/im-currently-studying-bs-information-tech-and-i-just-want-to-ask-how-do-i-get-better-in-coding-or-programming/</guid>
      <description>我目前正在学习BS信息技术，我只是想问一下，如何在编码或编程方面变得更好？ 回答 1 通过这样做。
如果您不知道编程语言，请学习一个。了解您申请最初使用的大学的语言，然后学习它。沿途学习软件工程原则。
硒校长包括：
你不必立即学会它。前五个将花费一点时间，但撰写很多和大量的程序。
从命令行程序开始，因为它们最初是最容易开发的。你可以发作
通过这样做。
如果您不知道编程语言，请学习一个。了解您申请最初使用的大学的语言，然后学习它。沿途学习软件工程原则。
硒校长包括：
你不必立即学会它。前五个将花费一点时间，但撰写很多和大量的程序。
从命令行程序开始，因为它们最初是最容易开发的。在对那些人感到舒服后，您可以沿其他方向移动。
请记住，写很多和大量的程序。他们不一定很重要。小而愚蠢很好。
祝你好运！
回答 2 学习逻辑建筑为其奠定了良好的基础
学习逻辑到代码是获得编码信心最有效的方法之一，无论编程语言如何，我们都可以从最小的技术行李中学习它。
讽刺是，在大多数教育设置中，对于初学者水平，他们不会妥善培训这项技能。因此，许多人在一开始就失去了信心。
学习者可以完成相关理论，在1或2周内开发逻辑技能，但基于该理论可能需要1-2个月的问题解决问题。这样的投资是值得的。为什么？
学习逻辑建筑为学习高级编程奠定了良好的基础，更快。学习将成为自我激励和可数。每个学习者都想要这个。请检查以下帖子以获取更多详细信息。
mohmad yakub·10月11日&amp;lt;/ span&amp;gt;
10月11日&amp;lt;/ span&amp;gt;
此时编程语言无关紧要。您可以选择Java / Python / JavaScript。
如果您的网络开发兴趣，请从JavaScript开始。
如果Android应用程序感兴趣，请从Java开始。
否则，您可以从Python开始。
如果您针对具有竞争力的编程，那么C ++是理想的。
2.当逻辑建筑技能好的时，学习算法将变利，所以生产力也会如此。
algorithms - sedgewick.
来自Coursera的作者Sedgewick的免费课程来自顶级教育工作者的在线课程和凭证。加入免费检查EDX |哈佛大学的免费在线课程，麻省理工学院和更多
3. Geeksforgeeks Geeksforgeeks的练习|极客的计算机科学门户
4.学习哎呀和常用的设计模式。
首先是第一本书
首先设计模式书
5.通过应用设计模式来完成项目案例研究和建筑师
干净的建筑书
6.算法简介 - CLRS
尝试解决像Codechecf，Codeforces，Hakerrank等竞争网站的问题
更快，我们深化我们的知识/举措，更多我们变得熟练。
回答 3 大家好，
我是Sanaya Rajput，我想回答这个问题。在开始讨论之前，首先让我们了解Python。
什么是python？
Python是最受欢迎和解释的高级编程语言。基本上它用于Web开发，软件开发，数学，科学和数字应用程序。
如何学习Python？
如果要掌握Python编程语言。因此，您可以在线和脱机平台，您可以在这里加入和学习Python。如今，许多在线平台为Python提供了教程和视频。但你应该有好k
大家好，
我是Sanaya Rajput，我想回答这个问题。在开始讨论之前，首先让我们了解Python。
什么是python？
Python是最受欢迎和解释的高级编程语言。基本上它用于Web开发，软件开发，数学，科学和数字应用程序。</description>
    </item>
    
    <item>
      <title>电脑如何在2040年？</title>
      <link>https://xiangqingw.github.io/posts/how-advanced-will-computers-be-in-2040/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:23 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-advanced-will-computers-be-in-2040/</guid>
      <description>电脑如何在2040年？ 回答 1 我的第一台电脑于1983年买了一个时髦的sincla
你的猜测和我的一样好。我们正在谈到20年的未来。回顾20年左右作为参考点。 20年前，我们拥有漂亮的基本手机，现在我们大多数人在我们的口袋里携带设备，比20年前的服务器比服务器更强大。我们的手机不仅允许我们制作和接收电话，但允许我们通过电子邮件，文本，聊天甚至视频聊天进行通信。我们用它们来娱乐，阅读书籍，浏览我们的路。所有闻名于20年前的所有事情。
我的第一台电脑于1983年买了一个时钟Sinclair 1000，带有黑白屏幕，16KB内存（从原来的2KB扩展），没有声音和使用的盒式磁带来存储程序。一个基本的飞行模拟器游戏才花了几乎10分钟才能加载。现在我有一台带有1080p高清图形和16Gig的RAM的笔记本电脑 - 这是我旧的时克Sinclair 1000拥有的1,000,000倍。
即使在今天，我们也会看到甚至不合情理的进展。下一个大的事情将是具有折叠屏幕的移动设备。三星和华为都准备释放它们。我希望像虚拟现实这样的事情变得更加普遍。存储和记忆量将继续飙升。我们将看到更多的互连性和设备之间的相互作用。我们将看到传统的播放电视和基于互联网的流媒体所取代的有线电视。 Blu-ray将播放CD的方式，并通过数字媒体完全更换。创新的步伐是指数级增长的，并且没有显示出减速的迹象。
我收集老式电脑，特别是口袋电脑。这就是我们在20世纪80年代而不是Androids和iPhone所拥有的。
这是来自1985年大约的TRS-80 PC-6 Pocket Computer。它有16KB的RAM，可以存储和运行多达10个基本计算机程序。我有一个后来，现在在我的个人收藏中有一个。为其限制编写实际上有用的软件实际上是一个非常挑战，但它是我的爱好。这是另一个来自我的收藏，一个TRS-80 PC-4，整个2KB内存。它还将存储并运行最多10个基本计算机程序。从30年前比较了这两个艺术设备的艺术设备，从今天的iPhone和Androids尝试想象在另外20年中我们会看到的内容。
这个怎么样。这是TRS-80型号102便携式计算机。我刚刚为我的收藏获得了其中一个。这是第一个成功的真正笔记本电脑大小的便携式计算机。它具有大约32kb的公羊！它运行了一种Microsoft基本形式，该基本实际上是由比尔盖茨本人写的。曾在80年代中期通缉的机器。
将其与我当前的笔记本电脑进行比较。
我的预兆有500,000倍的内存，无限更好的屏幕和更多的加工能力。今天的美元在今天的美元中也花费了更少的费用，而不是102款将相当于今天的美元。
我一直是一个专业的专业，超过30年，我已经看到了一些真正的技术进步，我迫不及待地想看看未来的持有情况。
回答 2 可能的线索：
计算机科学工程中的最新技术是什么？
回答 3 试图记住&amp;hellip;&amp;hellip;就像我现在一样对计算机规格并不感兴趣。所以我可能会有一些细节错了&amp;hellip;&amp;hellip;
想想在过去20年中发生的变化。 1999年，Pentium 3的统治了栖息。高速450-600 MHz，133 MHz FSB，512上缓存，1型插座，25纳米工艺。 （Wiki在英特尔的Katmai系列中进入。）最常见的硬盘勉强超过4GB。 CRT到处都是4：3 LCD仍在开发中。
现在让我们看看基础设施。 1999年，大多数人都在家使用AOL拨号，因为DSL和ISDN正在商业上使用。 （平均消费者实际上需要什么？）但随着越来越多的人开始上网，电信人们实现了自己增加的带宽，并开始销售作为服务的访问。
1999年，如果您想在计算机之间传输文件，LAN运行于10MB，并且有100 MB和250MB的拉链驱动器甚至是Iomega的1GB爵士驱动器。 USB闪存驱动器是全新的，通常可以持有8-16MB。
1999年，Windows Me是Windows 98第二版的相对较新的替代品。 Windows NT 4.0开始逐步淘汰Windows 2000.Windows应用程序正在转换为全32位开发。
1999年，史蒂夫乔布斯返回苹果，并发布了前一年的第一个IMAC。 Mac OS X不会被公开看到两年。 Apple仍在使用IBM的电源处理器，并没有切换到英特尔。
1999年，纳伯斯特可能开始了。 Alta-Vista是领先的搜索引擎，捍卫其从古老的upstart，谷歌的草坪。 Mark Zuckerberg肯定没有与Facebook公开，如果开始发展。然后，地理位于MySpace，因为MySpace现在是Facebook。
1999年，亚马逊只有5岁。
我说所有这一切都可以说明我们已经看到的技术变革，以及这些变化如何伴随着商业，基础设施的重大变化，甚至是所有技术变革的社会变化。
正如目前的技术在20年前预测目前的技术，就像在20年前那样难以预测，这将是难以预测在另外20年的电脑看起来像什么。这可能是5G的继承者真的是无处不在的，电路小型化将与全职穿戴显示器（如果不是眼部植入），以满足全日制增强现实，以及所有并行社会学后果。我们会在我们的Smartwatches上穿上英特尔I9或AMD的Threadripper2更强大的电脑吗？非常可能。 （在他的AppleWatch上装载Windows 95的人有一个有人的YouTube视频&amp;hellip;&amp;hellip;）但我们实际上将在技术前进的技术方面更加富有成效吗？艾迪是否被主流？ AI会达到奇点吗？超越它？
什么制造商将是最常见的？该公司居住在哪个国家？美国，中国，印度？
定制的材料将用于创造微处理器，用于根据我们尝试制造小于7nm的芯片的UV光刻技术中固有的难题
将碳纳米管用于PCB的固有绝缘性能吗？</description>
    </item>
    
    <item>
      <title>程序员需要一个图形卡吗？</title>
      <link>https://xiangqingw.github.io/posts/do-programmers-need-a-graphics-card/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:23 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/do-programmers-need-a-graphics-card/</guid>
      <description>程序员需要一个图形卡吗？ 回答 1 这取决于他们编程的内容，如果他们使用的计算机是否有或没有集成图形。如果我编码，我希望能够看到输入，因此我需要一个输出设备，我们人类倾向于与视觉，声音和闻到我们的主要信息来源。因此，没有输出设备（显示器/打印机），我们无法知道收到的计算机。
因此，如果CPU没有集成的图形并且您想使用显示器/电视，那么您将需要一个视频/显卡。
现在至于你想要的旧卡有多高，这完全取决于你的工作。对于编码和编译器，任何旧的视频都足够了。但是，如果您正在进行任何形式的图形引擎，则可以想要游戏，视觉效果等代码。
我希望能帮助！
回答 2 通常不是。
大多数编程在集成的GPU上很好，您可能想要更好的GPU的时间是如果您正在制作3D游戏，即使是那么，综合的一个可能是可以的，因为它不像你将打电话责任自己。
我现在拥有的笔记本电脑是我第一个没有集成的GPU，我已经编程了很长时间没有良好的GPU，甚至现在，我真的没有使用我拥有的*即使我正在做一些3D工作。
一般来说，程序员不需要幻想GPU，无论集成到英特尔还是AMD处理器都很好。
回答 3 程序员需要计算机，计算机需要CPU，内存和图形单元不一定是单独的卡，但可以是VGA。
回答 4 每个人都可以拨打个人案例。是的，我的意思是它作为一种多边形的感觉，我们都需要图形卡来使用电脑。
回答 5 不，除非您拥有使用MXM插槽的那些高端/工作站2000+ USD笔记本电脑。
以下情况下下面的例子，可以替换此EurocoM笔记本电脑中的CPU和GPU：
回答 6 我们都知道图形卡用于玩游戏并产生视觉输出，但我希望深入了解图形卡的工作。
处理单元，作为CPU（中央处理单元）或GPU（图形处理单元），两者都对二进制（0和1）执行数学操作。
你已经听说过核心？核心基本上是ALU（算术逻辑单元）并执行算术运算。
因此，CPU目前通常具有少量核心（与GPU相比）通常是2或4个核心。 （AMD已使用64个核心制造CPU，3990倍）这些核心是非常强大的，它们中的每一个都被分配了不同的任务（称为多任务处理）。 CPU的主要重点是低延迟，即用户可以在实时与不同的过程交互。
另一方面，GPU有大量核心。 GTX 1050TI拥有768个核心（CUDA核心，而不是潜入CUDA的简单性），它是一个相当低的GPU。现在，GPU中的核心并不像CPU的核心那么强大，但由于这种核心数量的数学计算可以非常快地完成，因为GPU使用它的所有内核来在一个过程中工作，而不是专注于多任务处理的CPU。 GPU的主要焦点是提高源点（每单位时间提供更多输出）。
图像由数百万像素组成。 CPU向GPU发送有关每个像素的信息，从而对其执行复杂的数学和几何计算。随着GPU创建图像，它需要某处持有信息和完成的图片。它使用卡RAM（称为VRAM）为此目的，存储有关每个像素的数据，其颜色及其位置在屏幕上。 vRAM的一部分也可以充当帧缓冲区，这意味着它持有已完成的图像，直到它显示它们。通常，视频RAM以非常高的速度运行，并且是双端口的，这意味着系统可以从中读取并同时写入它。当时间来显示图像时，GPU输出并显示在屏幕上。
因此，为了总结，要处理图像，需要大量的数学和几何计算，并且GPU是专用硬件，该专用硬件旨在非常快速地执行。 GPU也用于科学研究，数据分析和CAD建模，因为这些活动也需要数学计算。
您可以在CPU上进行游戏，但它根本无法快速呈现图像，并且您将遇到所谓的滞后，口吃，低FP等。
此外，实际芯片也称为GPU，而在主板上组装的芯片以及VRAM，HeatchInk和I / O称为显卡。
在RTX 2080TI显卡中使用的TU102 GPU。 vram芯片的ressionerd。
RTX 2080TI创始人的版本显卡。
希望能帮助到你。
回答 7 比特币挖掘需要重复调​​用哈希函数，数百万次。有多个核心的计算机可以并行地处理这些电脑，并完成挖掘过程.Now GPU与CPU相比有数百万个核心。因此，它是计算密集哈希问题的完美解决方案。CPU内核可以每时钟（使用128位SSE指令）或8通过AVX（256位）执行4个32位指令，而像Radeon这样的GPU HD 5970每时钟可以执行3200个32位指令（使用其3200 ALU或着色器）。这是每时钟的指令的更多指令的800（或在AVX）的差异。截至2011年，最快的CPU最多可达6,8或12个核心，并且为Radeon HD 5970的2000-3000 MHz与725 MHz为725 MHz），但一个HD5970仍比速度快五倍于在2.3GHz的四个12核心CPU（也将您返回约4700美元而不是350美元的HD5970）。
回答 8 我可以在gt 1030上编程，i3计算机做C ++，Blen
不一定没有。但是，我几乎可以保证你，你没有每小时支付，而是每次项目支付。因此时间是金钱，你输出的速度越快=你的薪水​​里的更多钱。</description>
    </item>
    
    <item>
      <title>为什么程序员需要一个安静的地方来工作？</title>
      <link>https://xiangqingw.github.io/posts/why-do-programmers-need-a-quiet-place-to-work/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:22 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-do-programmers-need-a-quiet-place-to-work/</guid>
      <description>为什么程序员需要一个安静的地方来工作？ 回答 1 F $＆@，现在我在哪里是开发人员坐到代码的第一件事。
我们需要在我们的工作中丢失并迷失。一个四小时的街区比4小时块优于4个街区，一些状态会议突破它。这是因为我们大脑的每次重启都会丢失大约5-15分钟。这就是为什么当我运行开发人员团队时，我将会议保持在早上的时间和当天没有会议时间的长块。我发现3个小时是最好的。一个早上和下午一个。开发人员可以解决一个简单的中断一个快速的问题或两个，而是将它们远离工作时间太长，他们必须通过重启罚款。
这是我发现像敏捷可以失败的系统的原因之一。或者在非IT集中的公司失败。除非团队中的每个人都有团队优先考虑会议结构最终通过当天分散。如果业务购买它的过程，但如果他们像传统的瀑布一样对待它，并且一个人将左侧扣掉他们失败的时间。
帮助其他与项目相关的代码上的其他团队成员不要求开发人员重新启动。在某种句道时，它是有限的一段时间的良好分心。有时，这次通过与同事解决的解决方案是必需的，可以为两个人工作。重要的部分是留在同一个区域。
慢跑者将理解这一类比。慢跑前五到十分钟是最难的。一旦血液泵送并且内啡肽踢进后，它会在接下来的20到30分钟变得更加容易。但如果你必须停下2分钟怎么办？重新启动慢跑的接下来的2分钟很难。你的大脑同样地工作。
就个人而言，我需要音乐，这是设计系统的灰色噪声。有限或没有歌词的缓慢跳动。双耳节拍和以太等音乐。找到真正的安静几乎是不可能的，所以这是下一个最好的事情。虽然当我经过了设计阶段，但我正在使用已知解决方案的许多代码，我更喜欢提高节奏的EDM，Techno，ChillWave或具有有限歌词的合成足波。言语可能是一种分心，我想要的是催眠效果。
编程和系统设计是一种科学，但它的实现是艺术。
回答 2 因为在编程时（并且可能在调试时甚至更有时间），您可以在头部中保留大量信息并跟踪步骤，值et.c.在你的脑海里。在中断时，它很容易丢失它。
回答 3 除此之外，我们是害怕中断的死亡
有时候中断是可以的，但主要不是。通常，我们在这里做了一些事情，使得代码[甚至更多]被破坏，并且需要几个elsewheres的几个更改，以回到有效状态。
只有最批判的有条学程序员首先制定了需要更改的地方列表，悠闲地使每个地方的更改为注释，很快就会消除它们，然后保存文件。它是分布式两阶段提交的编程等效项：更改，准备提交，提交。
除此之外，我们是害怕中断的害怕，没有以协调的方式改变的事情。
一个教练曾经告诉我们的小组，到程序员，在编程时被打断，而编程是最糟糕的中断。
我们中的一些人，特别是小孩子的父母，同时抬起眉头并问道，真的吗？最糟糕的中断？
知道我们的意思，他笑了笑并回答，是的，最糟糕的中断。
回答 4 我们在很大程度上认为事物（特别是程序）存在。你有没有试图在吵闹的办公室里思考？闭上眼睛，思考它。然后想象你的工作就是认为事情存在，在那个吵闹的办公室里，你想象的&amp;hellip;&amp;hellip;然后问自己，如果你喜欢那个工作环境，如果你能够在它中做出最好的工作，或者你真的不是开始发送恢复到招聘人员离开它并在某个地方工作，您的雇主了解您的所作所为以及您需要做的最佳工作？
回答 5 上下文切换是昂贵的。平均而言，它需要10分钟即可完全切换到另一个问题。
一天中的三个中断等同于一小时的生产力丢失（每端10分钟）。
回答 6 它基本上他们专注于手头的工作，没有任何干扰。
回答 7 关闭宣传机足够长，以专注于解决一个复杂的问题，这需要总集中来制作解决方案
回答 8 不。给我一个耳机，我从Gramatik Jazz Hip Hop Funk混合起来 - 查看它，（注意：少歌词更好的编码）然后更加冷静。我也打开了假期的东西。我代码像顶级公司一样的怪物，因为它。但随机的噪音可以大量抛弃你，狗吠叫，呃
回答 9 好吧，让我看看我是否可以提出一个可以理解的非程序员可以理解的例子。
希望你们都知道如何做长师（如果你不这样做，那就查找）。所以，让我们说你在你面前有这个长期的问题：
这个很容易对吗？（或者如果你不是那么擅长数学，但大多数人都应该能够追随）。这是相当简单的原因是只需要一些步骤来解决问题。它也没有得到&amp;hellip;
回答 10 我只能用30多年的编程经验说话。如此多的经理，首席执行官和大学试图让我进入工作时间之间的办公室，它只是失败 - 史诗。在一个办公室，我一直分散注意到，当我终于拥有流量时，有些安全就是由于收盘时间而追逐我的建筑物。
作为一个程序员，就像翻转汉堡或任何其他工作，在那里你执行预定义任务，然后回家。编程是一种创造性和高度抽象的过程。阅读写得很好的代码就像阅读诗歌和任何艺术家一样，让它成为画家，作者，设计师等。我们不能在08:00到17:00之间100％创意和富有成效。我们都需要不同的环境来茁壮成长和刺激我们的思想。当我被困时，我只需要通过与朋友共度时光来分散自己的注意力，下来镇上的咖啡，看着人，放松一下。我知道我的潜意识将继续处理手头的任务，突然将从无处突然弹出一个解决方案。然而，如果你在困倦的小镇中，这可能有点棘手。
所以，当我所有的同事，CEO和经理都放弃了我，让我自由地漫游，我摆脱了所有手表和闹钟。我累了，只要我想要的睡觉就去睡觉，然后起床工作（例如，我今天上班15:20）。这可能是在白天或黑夜的中间，它并不重要，我听自己的身体。这让我追求了我的最高表现，我更喜欢过去的夜晚。
我也从家工作，所以当我累了，我只有几米到我的床。这消除了我必须在半夜运送自己的压力，在我睡觉之前已经死了。
即使我在客户的工作网站（我全世界都在旅行）时，我有一些条件;一个很好的酒店房间，提供大量空间和大桌，额外的显示器，良好的互联网连接以及一些运输安排，在需要时带我和客户之间。这是因为如果我在酒店房间留下工作，我会在我的高峰期。
这听起来像一个小岛吗？对我来说，这就是我如何达到我的最大性能，客户无法关心，因为我介绍了工作的好好写的解决方案，自从我在最佳表现上工作，我可以相当快地展示结果，每个人都很开心，一个双赢。
当然，我将在需要时适应现实世界，例如客户会议。这是我唯一需要闹钟的时间:)
在没有任何手表的情况下工作时，我似乎在早上睡觉，半天睡觉的节奏。根据截止日期，我的日期（当我醒着时）往往更长，而且我不是在24h周期，更多28h或30h周期。这将有效地改变我的夜晚（当我睡觉时）几个小时，直到我与现实世界一起回到阶段。
所以回到手头的问题。程序员可能会使用夜晚，因为它是他们工作的最佳时间，没有电话，没有电子邮件，没有人看着他们的肩膀。
回答 11 我一直在三大大陆的4个不同国家，超过20年，超过10家公司的整个职业生涯，我从未坐在隔间。
大部分时间都是一个公开的计划办公室，伴随着其他人。以及我在家里工作的一些时间，在办公室或备用房间。
相当大的时间是花费编程，但我平均说不超过40％，往往相当较少。
其他任务是（无特定顺序）：
会议 - 团队会议，Scrum会议（Histup，Gracoving，Repraceive），公司城镇厅会议，需求会议，分析和D</description>
    </item>
    
    <item>
      <title>哪种编程语言整体最快，为什么？</title>
      <link>https://xiangqingw.github.io/posts/which-programming-language-is-the-fastest-overall-and-why/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:22 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/which-programming-language-is-the-fastest-overall-and-why/</guid>
      <description>哪种编程语言整体最快，为什么？ 回答 1 整个pl
Dave Plummer是一位退休的Microsoft程序员，在YouTube上有一个名为Software Drag Racing的YouTube系列，其中他比较了各种编程语言的代码的性能。他还解释了他们为什么执行他们的方式的理论。
这些在不同的平台和操作系统上进行了测试。在某些情况下，他甚至拆除了一些代码来解释语言如何编译方式。
我建议观看这些视频，因为它比简单地决定更快。还有一些惊喜Quora可能会错过的轶事答案。
这个系列有整位播放列表。 E00，E01，E02，E03和E04可能是您正在寻找的。
增加了奖金：戴夫普拉姆很棒。他有一个伟大的YouTube频道。如果你是一个电脑极客，你可能会被迷住。
回答 2 为了充分欣赏好的，有时有必要体验差，你不同意吗？看看图像。你认识到这个编程语言吗？
你可能是对的。
这是perl。
根据2020年进行的StackOverflow调查，Perl位于最可怕的编程语言之上，以及全球65,000名受访者中最少使用的编程语言之一。
为什么开发人员讨厌perl？
主要是因为它可怕的缓慢表现。
它有一个注释员，需要将您的书面代码解释为处理器可以执行的字节代码。和
为了充分欣赏好的，有时有必要体验差，你不同意吗？看看图像。你认识到这个编程语言吗？
你可能是对的。
这是perl。
根据2020年进行的StackOverflow调查，Perl位于最可怕的编程语言之上，以及全球65,000名受访者中最少使用的编程语言之一。
为什么开发人员讨厌perl？
主要是因为它可怕的缓慢表现。
它有一个注释员，需要将您的书面代码解释为处理器可以执行的字节代码。每次运行代码时，解释器都需要执行此操作！这个过程需要很长时间并且肯定会影响性能。
但技术世界正在改变每一秒。由于快速速度，我们现在有许多适合不同目的的各种工具和方法。这样的品种使得更容易选择高性能的编程语言和工具，并快速制作您的应用程序。
因此，让我们专注于这个领域，看看如何轻松识别缓慢和快速的编程语言，为您的下一个项目做出更好的选择。
一些普遍的基本原则第一：
您的编程语言的更高级别是，其性能较慢。
那个怎么样？
由于使用像汇编程序这样的低级编程语言，您可以编写需要执行的精确代码。它更接近CPU理解的格式。顺便说一下，汇编语言旨在使字节码进行读取，因此保留字节码性能。
另一方面，如果使用高级编程语言编写代码，则编译器/解释器将额外的代码添加带有检查，解决方法和其他负责编译代码的稳定性的其他内容。由于此额外代码，性能速度很慢。
因此，最慢的编程语言是被解释的那样，如Java，Python和Ruby，因为他们需要将代码的字符串解释为可执行代码。
这是一个很长的过程。
而一些最快的编程语言是C，C ++，C＃，因为它们可以编译为字节码。
这提供了更高的开发速度和高性能！
回答 3 它很难回答你的问题，因为它几乎不可能用不同的语言编写相同的程序，即使您可以，您也可以测量编译器的有效性而不是大部分时间。我实际上尝试用各种语言编写相同的程序，这里是我的结果：</description>
    </item>
    
    <item>
      <title>如何在Python中搜索一个字符串？</title>
      <link>https://xiangqingw.github.io/posts/how-do-i-search-a-string-in-a-file-in-python/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:22 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-i-search-a-string-in-a-file-in-python/</guid>
      <description>如何在Python中搜索一个字符串？ 回答 1 您需要查看以下方法
[代码]
打开（）
file.close（）
用open（）如
file.read（）
file.readlines（）
file.write（）
[/代码]
一旦您获得了打开和关闭和读取文件的挂起，那么您就在对象类型搜索中执行普通字符串
回答 2 这是一个可能导致Python编程的基础知识，进入一些基本算法分析，并包括Python中的上下文管理器的主题。
虽然你可能只是想要答案，但你会发现它和无数的其他实际编程相关的答案，在stackoverflow上。快乐编码！
回答 3 打印（你是什么？
您可以使用RAW_INPUT（）或输入（）命令在Python中取出。
打印Hello消息的程序：
打印（你的名字是什么？）
name = input（）
打印（你好％s！你好吗？％名称）
打印数字平方的程序：
num = int（输入（输入数字））
打印（数字的平方是：，num ** 2）
回答 4 嘿！
因此，有两种方式可以在其中反转用户输入的字符串。</description>
    </item>
    
    <item>
      <title>如何将源代码转换为二进制文件？在那之后，你能反转吗？</title>
      <link>https://xiangqingw.github.io/posts/how-do-you-convert-source-code-into-binary-can-you-reverse-it-after-that/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:22 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-you-convert-source-code-into-binary-can-you-reverse-it-after-that/</guid>
      <description>如何将源代码转换为二进制文件？在那之后，你能反转吗？ 回答 1 您运行编译器以生成二进制代码。此过程无损，因此您可以轻松地更改为源文件并再次尝试
回答 2 您使用翻译器将源转换为二进制（目标）。翻译是计算中的一个主要话题。基础是，所有的“图灵完整”语言都具有相同的能力和可以计算的限制。这是计算的最终，超越我们必须具有智能计算机的智能。
鉴于没有任何语言或计算机可以做的并且没有魔法指导或语言构造，我们可以在理论上从任何东西转化为其他任何东西。这意味着当我们从源转移到目标时，我们应该能够反转它。在实践中，这不是那么简单。
源程序意味着人类可读。我们将源代码转换为二进制翻译编译器。程序员选择呈现的名称和ID。计算机不关心，所以名称被删除，也许用更加神秘的东西如1美元，2美元（这就是为什么ID中的标志的语言如此糟糕），或者它们被绝对或相对地址所取代（相对地址给出了一个系统灵活性，因为程序未固定到位置）。
如果我们想逆转翻译，我们已经丢失了有意义的名称，并且机械（程序）翻译将无法恢复。即使是一个读取这样的逆向的人也会发现很难猜测意图是什么。
现在一些翻译系统可能包括目标中的原始名称，以便像调试和程序转储一样。
在高级语言之间翻译也难以保存语义，因为它们都有不同的范式。即使他们基于类似的概念，它们仍然难以翻译。我曾经在艾菲尔赛到Java翻译（不是我的想法）上工作过，但结果真的并不令人满意（因为Java没有Mi，也许Java到埃菲尔可能会更容易，但是埃菲尔不允许一些东西的东西像xf：= ，它是可怜的oo和打破封装）。
这就是为什么低级机器具有非常一般但非常小的步骤，以便高级语言可以很容易地转换为二进制。
回答 3 你问的第一个只是编译成二进制（有几个步骤）。
但第二个不能完成。
当您编写它的东西时，它可以像切割三个并用它制作日志，你就不能重新制止三个。
您可能会获得一般的想法，但即使您制作类似于原始程序的内容，所有变量名称和其他事情将会丢失。
因此，如果该程序有几个抽象，几乎不可能理解，因为除了所有奇怪的部分，你都不知道什么是什么。
一个简单的程序（非常简单）可能需要数月才能改变
你问的第一个只是编译成二进制（有几个步骤）。
但第二个不能完成。
当您编写它的东西时，它可以像切割三个并用它制作日志，你就不能重新制止三个。
您可能会获得一般的想法，但即使您制作类似于原始程序的内容，所有变量名称和其他事情将会丢失。
因此，如果该程序有几个抽象，几乎不可能理解，因为除了所有奇怪的部分，你都不知道什么是什么。
一个简单的程序（非常简单）可能需要几个月的时间来反转它足以可以理解一个复杂的程序可能不值得，除了核心部分。甚至所以曾经尝试过它必须是某种天才甚至尝试。
回答 4 如果您使用编译编程语言，通常称为编译，则将源代码转换为二进制文件。编译由一个名为Compiler的程序完成。
较低级别的编程语言通常称为汇编语言，并用汇编语言编写的文本通常由一个名为ASSEmbler的代码处理，该代码产生二进制代码。
与John Thorton的答案相反，我会说这个过程绝对是破坏性的，即，你不能从二进制获取原始源代码 - 无论如何。这甚至适用于汇编代码。让我通过比喻的比喻来解释这一点。 2 * 3 + 8-0 = 142 * 3 + 8-0 = 14您是否可以根据以下两个事实重新构建原始方程式？
如果您尝试重新构建原始公式，您最终可以使用：2 * 1 + 26-14 = 142 * 1 + 26-14 = 14。你看到了挑战吗？编译失去了像变量名称（除非您有一些外部/全球可访问的变量），代码逻辑流（因为代码和注册优化，折叠和折叠循环等） - 它基本上挂钩了您的代码。
所以没有，你无法扭转编译过程。 （除非您具有非常具体的情况和非常简单的未优化代码。）
回答 5 一般而言，您将代码打破到解析树中&amp;hellip;&amp;hellip;例如：
a = 2 * b + c;</description>
    </item>
    
    <item>
      <title>如何编写一个程序以输入10个数字，并查找其总和？</title>
      <link>https://xiangqingw.github.io/posts/how-do-i-write-down-a-program-to-input-10-numbers-in-array-and-to-find-their-sum/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:22 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-i-write-down-a-program-to-input-10-numbers-in-array-and-to-find-their-sum/</guid>
      <description>如何编写一个程序以输入10个数字，并查找其总和？ 回答 1 由于您没有指定语言，我绝对确定您希望在J.作为奖励中对此问题的解决方案，它实际上将在一系列任意长度上工作，只要您通过空格拆分所有条目！</description>
    </item>
    
    <item>
      <title>如果机器学习模型随着时间的推移降低，那么Apple如何能够在其设备中嵌入AI功能？</title>
      <link>https://xiangqingw.github.io/posts/if-machine-learning-models-degrade-over-time-then-how-is-apple-able-to-embed-ai-features-in-their-devices/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:22 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/if-machine-learning-models-degrade-over-time-then-how-is-apple-able-to-embed-ai-features-in-their-devices/</guid>
      <description>如果机器学习模型随着时间的推移降低，那么Apple如何能够在其设备中嵌入AI功能？ 回答 1 机器学习模型实际上并非如此贬低，至少不再是任何其他嵌入式程序。当新车型出来时，他们只是过时，但除了过时的旧模型仍然工作。
回答 2 在理论上，您可以构建一个ML链，使解析数据并发展 - 当涉及新一代或更好的ml时
它们不会降级 - 非常相反 - 理论上，一个ML模型，让运行并保持解析数据 - 如果正确建立，只需增加更多Accurate。
假设它建立了处理多余数据并丢弃不需要的信息 - 它将变得更加准确，而不是少。
在大数据集中保留95％精度的平均时间可能需要一段时间的高端architeChture - 因此，常用方法是让数据运行扫描5年，然后利用该模型。
从理论上讲，您可以构建一个ML链，以保持解析数据并发展 - 当涉及新一代或更好的ML时 - 您可以使用从旧ML模型中的旧数据设置来热启动系统。
这意味着模型越来越好，因为它们越来越多的数据 - 已经完成了许多以前的工作。
谢谢你的A2A。
回答 3 有洞察力的问题。现在，计算是精致者的境界，他们喜欢加强控制，口袋（金钱）和其他类型的特征，我们（明智的;&amp;gt;）可能会想到属于独裁者。愚蠢的山谷是我过去十年和一半的标签。
嵌入？这是古老的。把废话放在你的核心？愚蠢的。由于他们的封闭头脑然而，这两侧都将不得不移动到中间以允许人类自由相对于计算（来自MA（和PA）性质的礼物）。
说什么？是的，我们将为用户（计算和任何其他产品）进行此Magna Carta。这是来自这些英属的一个明亮的光线（1215）。
旁边：苹果有良好的产品。我使用了一张Mac（几十年前），其中有一个由TI添加的卡，其中包括LISP机器和UNIX处理器。当时无法击败这一点。
现在，nn？这是一个伎俩的小马。我可以展示这个。但是，我远远气地坐在我的自动渗透道上。那么，谁会听？好吧，我可以键入。将要。实际上，我的一个导师是老埃里克Hoffer，我将在旧金山的街道上在我的青春。短篇小说：朗斯曼读书并写道。
所以，NN降级了吗？你打赌。那些在统计数据后跑的人需要看理论基础（全面）。我这几年前做了。在这样做时，他们会知道有各种需要一些分辨率的警告。通常，我们通过科学暂时做到这一点（嗯，认为我们也这样）。但是，当人们谈论决定时，用符号的模式说出不接近的模式，它们缺少数字模式具有相似限制的程度。尽管如此，花生蛋糕 - 数量的方法更加原谅。数字不撒谎？当然，从某种意义上说。他们误导（非常如此）。
这就是为什么我用zadeh作为一个例子。他用模糊模式合并了数字方式。通过这种方法，人们看到难题是模糊和排出的。也就是说，将数字视图映射到物质世界，思想和更多（是的，Western Unententrenmentens的核心问题是非常困难的。但是，随机/统计数据可以（不一定）缓解场景中的错误。计算从一开始就完成了这一点。现在，没有知道的选择。
让我们需要回到法拉第并前进，一步一步。想支付那个救济吗？哦等，哈佛？
顺便说一下，我们只需要退后二十年。以下是通过查看提出的问题来这样做的方式。
2003年 - 几何/知识建模挑战 - COE
回答 4 AI处理自动化系统的更通用问题。这款自动机构
到点问题。答案是这样，机器学习和人工智能之间存在巨大差异。
注意：答案是完全非技术性的，它不涉及技术术语。想要知道差异的人可以阅读并获得一些知识
人工智能（AI）是一种伞，它拥有图像处理，兴观科学，神经网络等其他领域等等。机器学习（ML）也是这伞的一部分。这是一个人工智能的子集。
AI处理自动化系统的更通用问题。可以通过使用如上所述的任何字段来完成这种自动化，包括，图像处理，神经网络，机器学习或其他领域。什么AI通过让他们在我们的人所做的能力思考和做任务的能力来使机器，系统和其他设备进行智能。这是AI状态的底线。
虽然，机​​器学习（ml）处理您的机器从外部环境中学习。这种外部环境可以是传感器，电子元件，外部数据存储设备等的形式。基于用户输入或用户的查询的ML所做的是，系统检查它是否存在于知识库中。如果存在，它将将结果返回到与该查询相关联的用户，但如果它未最初存储，则机器将学习用户输入并将改进其知识库，以便为最终用户提供更好的值。
ml和ai完全不同。 AI更通用，而ML更具体地涉及分类，聚类，预测和其他操作。 AI处理图像，多媒体数据，神经网络，专家系统和其他领域，这些字段基于您拥有的数据类型，也是基于最终结果应该是什么。
ML和AI都为最终用户提供了高精度（如果有效使用，如果知识库足够足以提供高值）。
这就是基本差异在人工智能（AI）和机器学习（ML）之间的内容
要了解更多关于人工智能，机器学习和其他相关技术信息，可以看看TechnoItworld
希望这可以帮助。谢谢！ :)
回答 5 简而言之 - 没有。</description>
    </item>
    
    <item>
      <title>您在新git用户看到的坏习惯是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-are-the-bad-habits-you-see-in-new-git-users/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:22 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-are-the-bad-habits-you-see-in-new-git-users/</guid>
      <description>您在新git用户看到的坏习惯是什么？ 回答 1 在进行任何后续操作之前，请勿检查`git状态
回答 2 就像克里斯纳什在他的答案中，我不同意前提。
我认为git的主要问题不是git本身，而是一个贯穿态度：git rebase。结合高度上升的堆栈溢出答案，告诉您使用git rebase（和命令喜欢它）来做可以完全毁掉历史的事情，Git rebase的非常存在会增加了很多关于git的不必要的混淆它是什么。
实际上，您几乎只需要使用以下8个命令来使用git：
如果您只使用这些命令，并且没有别的，那么您通常会在一个非常好的地方。没有进入完整的Git教程，这些命令通常不会在提交图中编辑分支的位置，除了添加新的提交。手动编辑您的分支指向的提交是人们对Git遇到问题的数字。
每当你想要撤消你所做的改变，就好像它从未发生过，或者编辑某些东西以使它以不同的方式发生，请记住这是一个用于唯一目的追踪发生的一切的工具的整体目的所以没有什么是丢失的，所以当然会出于Git真正设计的界限。
不要使用Git Rebase，避免Git重置。除了隐藏你所做的错误之外，还没有理由使用这些命令（他们可以令人尴尬，但它不是世界末日），或者也许是编写自动化工具（但是你应该自动化使用git rebase使本地永远不会与远程同步），或者您的公司因某种原因而迫使您（尝试改变主意）。
Git Rebase的唯一合法使用是撤消Git Rebase的影响。您可以随时使用Git提供的工具来完成同样的事情，这些工具不会在推送到远程过程中丢失。
当然，这是非常双曲，Git Rebase需要存在，但不是为了你的想法。如果您在Git遇到问题，请停止使用Git Rebase，停止使用Git Reset，您将成为一个更幸福的人。
回答 3 我有3个例子，评价后，我认为你有多可能与他们搞砸了：
 git添加.2。git推 - - force3。git rm.
我用git添加了一团糟。几次，将事物添加到版本控制你绝对不想要那里，只是因为我太懒了，无法明确添加我的更改。通常我已经在一个目录中工作，可以使用git添加src，例如在那里包含所有内容，但git添加。采取每个变化git可以看到，包括联合国&amp;hellip;  回答 4 我的个人指导是：每当我到达一个我想要回到的国家时。或者，每当我拥有完整功能的最小下一步工作。
提交代码后，我可以开始制作新的更改，并能够在尝试获得下一步工作的同时改变内容。
一旦代码承诺，如果事情开始突破并且不起作用，我可以回滚切出以不起作用的更改。
知道何时何时提交的是艺术的艺术而不是经验的科学。出于开始的人的良好规则是经常犯下的错误。当代码经常提交时，Git实际上可以更有用，并且可以帮助您了解您为完整功能的每一步所做的更改。
希望有帮助，祝你好运♥
回答 5 基本上，git pull = git fetch + git合并和git pull -r = git fetch + git rebase。
git fetch获取所需的元数据，但尚未在本地存储库中存在。如果下一步移动是合并获取的历史记录，则Git Pull是预期命令。如果您不需要即时合并，则只能运行Git获取。以下是一些可能的场景：
您将使用Internc Meta数据进行操作，例如分支及其可访问的提交。这有些东西并不总是合并。如果数据尚未在本地存在，则需要先获取它们。
回答 6 通过提交，你是conf
我会说它真的取决于你正在使用的团队/组织。在每个团队/组织应该有一个SOP文件中应该有一个答案。
通过我的团队，我们每天至少推动一次，以确保我们所有人都与其他团队成员正在做的工作最新。在进行更大的功能时，我们通常在合并之前挤压提交。
通常，推送到远程存储库并不像本地提交那么重要。更频繁的推动意味着更低的冲突可能性，因此每天推出几次就足够了。</description>
    </item>
    
    <item>
      <title>我如何成为14岁时成功的程序员？</title>
      <link>https://xiangqingw.github.io/posts/how-do-i-become-a-successful-programmer-at-the-age-of-14/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:22 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-i-become-a-successful-programmer-at-the-age-of-14/</guid>
      <description>我如何成为14岁时成功的程序员？ 回答 1 这取决于你如何定义“成功”。
你想赚到很多钱吗？你想解决一个麻烦我们社会的问题吗？你想控制像船，汽车或飞机一样巨大的东西吗？你想制作一个卖甜甜圈的门户吗？或者你想给你的朋友或父母留下深刻印象吗？
编程需求： -
a）一种特殊的逻辑思维方式，让您阐明解决方案作为在计算机中执行的一系列步骤;
b）捐款知识。就像你需要知道银行如何为银行编写程序。或者你需要知道
这取决于你如何定义“成功”。
你想赚到很多钱吗？你想解决一个麻烦我们社会的问题吗？你想控制像船，汽车或飞机一样巨大的东西吗？你想制作一个卖甜甜圈的门户吗？或者你想给你的朋友或父母留下深刻印象吗？
编程需求： -
a）一种特殊的逻辑思维方式，让您阐明解决方案作为在计算机中执行的一系列步骤;
b）捐款知识。就像你需要知道银行如何为银行编写程序。或者您需要知道空气动力学设计浮桥
c）正在寻找解决方案的问题
d）编写程序和工具以使其通过计算设备可以理解的媒介。简而言之，这意味着您必须学习一个适合问题域的编程语言。您还需要一个编译器或构建器，将程序转换为机器可读表单
所以决定你有哪一个。
a）与年龄无关。
b）取决于。如果您编写了棒球游戏，可能会有可能，如果它是银行，您可能需要账户中的学位，14可能正在早期。
c）您或需要服务的索赔
d）需要时间和设备，最好是教师来改造这些教师。
那么，为什么要等？现在开始。
回答 2 首先，你必须开始编程。
它不太可能在14岁时成为一个好程序员，您根本不会有足够的不同类型项目的体验来绘制。也就是说，它并不意味着你不能在14点写一个好的程序，你只需要在你的局限范围内工作。实际上，这一直是真的，但随着你的经验增长，你能够更大。
我在汇编程序中写下了13个中的一个第一个序列仪之一，因为它不会足够快地在可用的任何其他语言中提供的有限内存中。虽然它具有明确的限制，但它做了它的意图，我能够用它来编写和录制音乐。
我更宁愿使用今天的逻辑专业人士或理由，这两者都可以以体面的价格提供，而不是花费我自己的巨大努力来获得等效特征。
回答 3 您可以通过在网上阅读书籍和购买课程，如Udemy，Great Seach等，但我建议您参加像编码忍者，Codechef和Geeksforgeeks等哈纳松。
回答 4 成为某些语言或开发环境的导师。
一个良好的开始是学习C语言井和导师高中和大学生的作业，并重新教导他们在课堂上错过了什么。
只要你能够有效地教导C语言，有效地教导他们，渴望善良和善良，学生或父母将很乐意支付10美元 - 25美元/小时USD用于辅导，所以学生可以通过课程甚至得到一个。
这就是你如何开始的方式。
您可以在Udemy学习C语言。他们玩定价游戏，但是在本月的某个时候，课程价格通常低于15美元
成为某些语言或开发环境的导师。
一个良好的开始是学习C语言井和导师高中和大学生的作业，并重新教导他们在课堂上错过了什么。
只要你能够有效地教导C语言，有效地教导他们，渴望善良和善良，学生或父母将很乐意支付10美元 - 25美元/小时USD用于辅导，所以学生可以通过课程甚至得到一个。
这就是你如何开始的方式。
您可以在Udemy学习C语言。他们玩定价游戏，但在本月的某个时候，课程价格通常低于15美元。
这是学习C编程的一种方法。
没有人会关心你是13岁或女性或非基督徒。他们只关心你专业，有效地教你的学生。
有网站，如Upwork和其他人可以注册并找到学生。
回答 5 在程序员中有一个巨大的神话，需要一种像Facebook这样的Kickass平台或像口袋妖怪这样的花哨的游戏一样，可以致富它，
在过去的几年里，我遇到了多个开发商，他们试图建造下一个大事，不用说他们失败了。秘密是真正的钱在企业应用中，而不是建立一些病毒应用程序。你可以制作一个更多资金开发平原，无聊的企业应用，而不是建立一个由数百万下载的花哨的新应用程序。为什么耗尽企业应用程序很简单：
在企业应用程序的情况下，客户的LTV，客户的寿命值得高得多，与Facebook这样的病毒应用程序不同。客户的时间价值是客户花费的金额购买您的产品/服务。在企业应用程序的情况下，客户的LTV可能从一个月的5美元到50,000美元，从而使它们成为最赚钱的应用之一。Facebook这样的大型平台遵循Freemium Model，即他们需要数百万和数十亿用户的最终用户来制作一个以体面的利润。然而，如果企业应用程序，您可以通过拥有几百个客户来赚取大量资金。最适合构建企业应用程序的语言：
企业应用程序只不过是Web应用程序，因此可以使用任何可用于制作Web应用程序的技术来制作企业应用程序.java和Python是流行的选择，但我会与Python一起使用，因为它更容易使用和使用有一些非常棒的框架，如Django和Flask，它有助于以更简单的方式构建应用程序。最佳商业模式：
企业应用中最好的商业模式之一是SaaS，它代表了作为服务的软件。每月的每月收取每月的运作费用，其每月可以从5％到1,000美元。恰好是SaaS应用程序以及为什么人们为他们支付？Salesforce是SaaS的最佳示例，他们在其腰带上有多个SaaS产品，他们在25美元/用户/月的任何地方收取300美元/用户/月/月，具体取决于公司需求的一组功能.LETS假设一些带有20名销售人员的小型销售组织需要他们的产品转化为：
$ 300 x 20 =每月$ 6000组成单一小公司.Imagine如果有些大公司拥有超过500的销售团队的数量。这是翻译成300 x 500 = $ 300 x 500 = $ 150,000 /月的收入。你可以开始建造SaaS应用吗？让我们变得逼真，你不能在一个月内像Salesforce那样建造SaaS应用程序，甚至在一年内。如果你今天开始，那么你可以获得在大约2 - 3年内建立SaaS产品所需的技能，只要你是专注。SaaS业务，技术和商务的两个主要方面.</description>
    </item>
    
    <item>
      <title>为什么C &#43;&#43;这么复杂？</title>
      <link>https://xiangqingw.github.io/posts/why-is-c&#43;&#43;-so-complicated/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:21 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-is-c&#43;&#43;-so-complicated/</guid>
      <description>为什么C ++这么复杂？ 回答 1 这里的优秀答案（自然，来自Nathan和Sergey）。
我会补充一点，C ++可能是今天唯一的主流语言，这并不真正给出遗迹看起来很简单。由于其现有的市场份额和某些铁核 - 忍者 - 宁静的心态和狮子股的狮子份额，其目前形式的C ++并没有有利于最重要的简单性高于更重要的优先事项，例如灵活性和用于代码的经验丰富的读者的可读性。
因此，合理的，许多经验丰富的专家争论C ++不比Java或C＃或Python或JavaScript更难;他们会引用非常有效的积分。
不要忘记的重要原因是简单的事实，即连续需求，并且连续地，从字面上归零，对制作C ++一种似乎尚未熟悉努力理解语言的人似乎简单的语言从基础上。
回答 2 这取决于你的意思复杂。而且，我怀疑，在您的编程背景上。
第一个实现的是C ++基于C，并且有效的C程序将非常接近于有效的C ++程序（类型void 的行为是一个值得注意的例外。）
像C，C ++让你非常接近硬件。如果你写的话</description>
    </item>
    
    <item>
      <title>什么是linux？</title>
      <link>https://xiangqingw.github.io/posts/what-do-you-call-linux-actually/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:21 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-do-you-call-linux-actually/</guid>
      <description>什么是linux？ 回答 1 T.
从智能手机到汽车，超级计算机和家用电器，主页桌面到企业服务器，Linux操作系统到处都是那么什么是Linux？
Linux是一个开源操作系统。事实上，行星上最受欢迎的平台之一是Android，由Linux操作系统提供支持。操作系统是管理与桌面或笔记本电脑相关联的所有硬件资源的软件。要简单地进行操作系统，管理软件与硬件之间的通信。没有操作系统（OS），软件无法运行。
Linux操作系统包含多个不同的部分：
1。
Bootloader - 管理计算机启动过程的软件。对于大多数用户而言，这将只是弹出屏幕，弹出并最终消失在操作系统中。
2。
内核 - 这是实际称为整体的一块？ Linux？内核是系统的核心，并管理CPU，内存和外围设备。内核是OS的最低级别。
3.
init系统 - 这是一个子系统，用于引导用户空间，并被控制控制守护进程。最广泛使用的Init系统之一是系统？这也恰好是最具争议的之一。一旦从引导加载程序（即grub或grand unified botlopler）移交初始引导，它就是管理引导过程的init系统。
4。
守护进程 - 这些是在启动期间或登录桌面后启动的后台服务（打印，声音，调度等）。
5。
图形服务器 - 这是显示显示器上图形的子系统。它通常被称为X服务器或仅限X.
6。
桌面环境 - 这是用户实际与之交互的作品。有许多桌面环境可供选择（GNOME，Cinnamon，Mate，万神殿，启蒙，KDE，XFCE等）。每个桌面环境包括内置应用程序（例如文件管理器，配置工具，Web浏览器和游戏）。
7。
应用程序 - 桌面环境不提供完整的应用程序。就像Windows和MacOS一样，Linux就可以提供数千个可以轻松找到和安装的高质量软件标题。大多数现代Linux发行版（以下内容更多）包括集中和简化应用程序安装的应用商店类似的工具。例如，Ubuntu Linux有Ubuntu软件中心（一个GNOME软件的REBRAND？图1）允许您在数千个应用中快速搜索数千个应用程序，并从一个集中式位置安装它们。
回答 2 你的问题实际上是一个好的，带出某些警告：
顺序回答问题：） - &amp;gt;是！ Linux是一个操作系统..而且啊，它不是:(问题是我们的命名约定，非常真实地作为一个名字作为一个内核，作为一个家庭的操作系统是一个操作系统。得到它？曾经更多，单独的Linux是一个内核，类似于汽车中的发动机，它肯定是汽车的核心，但它不是你可以开车和放大的东西！地狱不！我不想坐在最热门的地方汽车;）。这是汽车中最重要的部分，但要打电话给汽车，你需要一个底盘，座位，转向等&amp;hellip;&amp;hellip; - &amp;gt;下一个问题，有区别，是的！，现在有命名解决了，有一个区别，GNU / Linux是操作系统（需要核心所需的工具），回到我们的类比，如果我们没有汽车底盘等，发动机是什么好的。因此，GNU GUYS使与内核交互的工具&amp;hellip;.下一个&amp;hellip;. ，您需要拥有一辆汽车和所需的技能设置来安装新引擎，这可能是您购买的，因为它更好:)。如果你是好奇的善意，你可以肯定会微调发动机，做一些激进的东西&amp;hellip;&amp;hellip;使用你的想象力&amp;hellip;&amp;hellip;无论什么人都可以对汽车发动机做。如果你有足够的决心，你甚至可以做一个。 （虽然这将需要一些时间）。所以，我们可以种点调整，修改，做各种疯狂的东西，然后使它更加技术上编译，从http://kernel.org下载的东西，并且某种方式更换我们当前框的内核。顺便说一句，我有一个问题，我们可以在正常的掀背车中安装波音-747滚动ryce喷射发动机吗？，我想不是，它们是一个不同的班级。所以人们不认为，我们可以在Windows OS中同样在Windows操作系统中安装Linux内核，或者对于此事项的Mac，我们需要运行的Linux框来替换内核.-&amp;gt;因此Linux是一个内核，相应的操作系统是GNU / Linux然后有公司实际集成了内核和相关工具的公司，并为我们提供了一份准备使用的包，您不必让您的手脏。它们被称为分布（Distry），或者口服，他们在内部运行相同或一些修改的内核版本.-&amp;gt; Linux内核由一个人正式发布，Linux Torvalds Aka The Penguin。在一个特定的时间只有一个最新版本的内核版本，并且可以在Linux内核档案中找到，虽然以前的版本也可以免费下载，但是免费，但是家伙记得这只是车的发动机！ :)
在写作最新版本的稳定内核时是： - 4.3和极客的最新版本是： - v4.4-rc2cheers !!
PS：作为侧面，Android将Linux内核运行为其驱动引擎:)
回答 3 这个词是旗帜的unix的一种萎缩。</description>
    </item>
    
    <item>
      <title>如果复制并粘贴链接（无点击），它可以提供病毒吗？</title>
      <link>https://xiangqingw.github.io/posts/if-you-copy-and-paste-a-link-without-clicking-on-it-is-it-possible-for-it-to-give-a-virus/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:21 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/if-you-copy-and-paste-a-link-without-clicking-on-it-is-it-possible-for-it-to-give-a-virus/</guid>
      <description>如果复制并粘贴链接（无点击），它可以提供病毒吗？ 回答 1 不。
至少，不是你的系统。如果将其粘贴到像Quora这样的内容，则下载一个页面以便在标题中解析它，然后在理论上，如果HTML解析器中存在未括在一起的漏洞，并且该链接能够利用，这是可能的。非常不可能 - 您不仅要利用解析器，您必须逃离沙箱来攻击主机系统，并且没有保证漏洞存在或甚至知道解析器软件是什么。
回答 2 不，从来没有。在执行命令以打开文件或安装程序后，通常安装病毒。
回答 3 是和否。
从技术上讲，你不能只通过点击一个链接来感染病毒。至上的现代浏览器是沙盒的，所以网页上没有任何脚本都可以感染你的计算机。
有时，病毒必须利用浏览器中某种安全漏洞（已知，但您尚未将计算机与安全修补程序保持最新）。这几天这越来越少了。浏览器现在非常安全。您对此的风险相当低（只要您保留您的操作系统和浏览器最新）。
最大的风险是人类的丑陋。当您单击网页链接时，网页将尝试说服您（用户）下载和执行某种程序，这是事实上的病毒。
所以单击链接本身不能让您感染。但它给网页有机会欺骗人类用户。超过1000人，总会有几个人愚蠢地落下它&amp;hellip;&amp;hellip;伤心。
当人们给予一般建议时，我们总是必须承担最愚蠢的人。因此，一般建议是要求您不要点击链接（或者您将被感染）。
我知道的人（我的朋友和家人，他们不太了解电脑）经常发给我据说危险的链接。他们会问我是否可以安全地点击它。我经常告诉他们，但我会自己点击它来探索它。有时他们会想知道并要求你告诉我这是危险的，但你可以点击它。对此而言，我只能说我有所不同（没有阐述）。我从来没有通过点击危险的链接感染。
还有一件事，即使您不能通过单击危险链接感染，您可能会冒出一些信息。例如，有时链接本身可能会嵌入您的电子邮件地址。垃圾邮件发送者将用它来追踪谁回复他们的电子邮件。因此，如果单击该链接，您将公开您的电子邮件是一个有效的邮箱与响应的人（单击该链接）。他们会出售该电子邮件地址以获取更多垃圾邮件。它有害吗？没有被感染的那么多，但如果你真的是价值隐私的烦恼。有时我会在我去那里之前修改嵌入在链接上的电子邮件地址。 :-)
更新：
我忘了提到另一个重要点。 XSS（跨站点脚本）。你应该知道。它实际上并没有攻击您的设备。它实际上利用你的手（点击链接）来攻击其他网站。有时它可能是您的银行网站，并使用它窃取您的登录Cookie到网站。
因为它没有攻击您的设备，所以您的设备上没有安全漏洞它可以修复。您的设备上没有安全漏洞。问题是您的银行网站（如果存在）的安全漏洞，他们需要修复其Web应用程序错误。
作为一个智能和知情的用户，如果我点击潜在的恶意链接，我将始终使用私人/隐身模式。这种方式即使我的银行网站有错误，他们也永远不会窃取我的任何登录cookie。这基本上缓解了XSS对我的影响（XSS链接仍然会攻击网站，但它不能影响我）。
（并不担心太多。如今，大多数银行业务网站或大网站都非常清楚XSS的危险，他们大多守护它。对于其他网站，您没有登录帐户，您可能不会护理。）
对于普通用户，虽然，常规建议仍然是：不要单击恶意链接。
回答 4 是的，你可以被黑客攻击。
这个过程有用，
黑客将通过它轻松到达您的设备来进行链接。您将单击该链接。没有下载将被问到那里。黑客将能够获取您的联系人，消息，位置和大约整个设备.4。如果您将关闭该浏览器，那么他将无法访问。但如果他想到智能黑客，那么关闭浏览器不会工作。
我和我的朋友在同一个网络区域做过这个。但它还在全球网络中工作。
如果是&amp;hellip;
回答 5 简短的答案是否定，只需复制链接就不会导致感染。
只需复制链接URL就无法触发任何病毒，除非您已在您的系统上有一个触发这样的系统。
链接URL只是一段文本，病毒是系统需要由系统处理的命令列表，作为具有效果的命令。
回答 6 不必要。
该链接必须在手机上下载并安装代码。如果该代码是病毒，特洛伊木马或类似的话，你可以通过感染手机。
这些天大多数操作系统都有一些保护，不允许您只需从网络下载和安装代码。
iOS（iPhone操作系统）仅从App Store安装应用程序，Apple将在其商店中提供之前检查一切。除非您当然越狱iPhone，否则您可以从Web安装应用程序。
Android具有类似的机制，但与jai相比，这些可以更容易禁用。
不必要。
该链接必须在手机上下载并安装代码。如果该代码是病毒，特洛伊木马或类似的话，你可以通过感染手机。
这些天大多数操作系统都有一些保护，不允许您只需从网络下载和安装代码。
iOS（iPhone操作系统）仅从App Store安装应用程序，Apple将在其商店中提供之前检查一切。除非您当然越狱iPhone，否则您可以从Web安装应用程序。
Android具有类似的机制，但与iPhone的越狱相比，这些可以更容易禁用。
只需单击该链接就可以具有您不想要的其他后果。例如，如果垃圾邮件发送给您的电子邮件，并且在电子邮件中单击链接，他的服务器可以注册。垃圾邮件发送者然后知道您的电子邮件由某人检查。所以他可以用其他讨厌的东西来定向你。
最好不要甚至访问与黑色背景或狡猾的网站的网站一般，甚至没有打开看起来狡猾的电子邮件。当他们答应被选中或赢得iPhone时，永远不要输入您的详细信息。从来没有，永远不会遵循电子邮件中的链接到您的银行或购物网站。电子邮件可能看起来100％真实，但可能带您到网络钓鱼网站。
回答 7 嘿罗文，
你怎么知道它是一种病毒链接？您被重定向到可疑的网站或更多侵入式广告弹出窗口？您可能会认为它是一种病毒，但可能您被重定向到某些可疑网站，因为它是一个受欢迎的链接。
如果您没有一个或反恶意软件工具，请确保您未安装任何不需要的程序或广告软件下载Anti-Virus。扫描系统并删除任何发现的任何威胁。不要恐慌它可能不是病毒。
回答 8 如果您的访问没有阻止
详细信息，它从您单击一个链接开始。这将为您的浏览器带到恶意软件被激活的另一个网站上。此时，您的防病毒软件可能会被触发以阻止访问该站点。一些像Chrome这样的浏览器也对不良链接具有内部保护机制，因此可以阻止访问本网站。如果发生这种情况，那么你就会收到一条关于恶意软件危险的信息，没有别的。
否则，在下一个步骤中的任何点，您的浏览器和AV软件可能仍然阻止您完全感染。如果没有，请阅读&amp;hellip;
如果您的访问未被阻止，则您将激活远程服务器上的恶意软件，该恶意软件将尝试对系统进行错误。它将注册您的IP地址，通常会发送您的浏览器将下载的内容。如果这是JavaScript表单中的恶意软件，那么也将被执行。此JavaScript通常会尝试在计算机上下载更多内容，并将尝试安装它。
但这是问题：虽然网站可能将恶意软件下载到计算机上，但仍然没有激活，因为您首先需要执行它。这就是为什么恶意软件站点会尝试做任何事情来让您执行恶意软件。有些人只是告诉你它是一个计算机游戏或一个特殊的驱动程序，你将要自己执行。虽然在过去，但他们还将使用ActiveX组件，闪存，Java或其他允许从浏览器执行的技术。有时，浏览器软件中的漏洞，计算机上的Java虚拟机或闪存软件将允许恶意软件从您的系统获得更多的访问。如果您的操作系统已过时，则无法更新，那么您的计算机上可能存在更多漏洞，它们可能会滥用。所有只是一个原因所做的：让您在尝试访问您的计算机时执行更多恶意软件。
接下来会发生什么取决于恶意软件和计算机的漏洞。最糟糕的情况：它将加密所有文件并在屏幕上显示单个消息，告诉您将比特币支付给特定地址以使系统再次发布。然后，您支付比特币，并且您的系统继续被锁定，因为这些不诚实的恶意软件制造商只是不诚实。然后，您必须再次安装操作系统，并希望磁盘格式将消除所有恶意软件的所有痕迹。
更糟糕的是，一些恶意软件可能在计算机的BIOS内安装本身的部分，这意味着即使是清洁的安装也会让您感染。</description>
    </item>
    
    <item>
      <title>客户端计算机如何找到域控制器？</title>
      <link>https://xiangqingw.github.io/posts/how-do-client-computers-locate-a-domain-controller/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:21 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-client-computers-locate-a-domain-controller/</guid>
      <description>客户端计算机如何找到域控制器？ 回答 1 抱歉让人失望，但这超出了我所知的范围。我主要只是买卖域名，计算机/技术方面不是我知道的东西，我讨厌误导你。我相信这里有很多人可以为你回答这个问题。祝你好运！
回答 2 所有网络实现都具有设备发送所有设备接收的消息的功能。在以太网的情况下，发送到MAC地址FF的任何消息：FF：FF：FF：FF：FF：FF是广播。
获得IP地址的前面方法是使用以太网广播发送反向地址解析协议（RARP）消息。然后，服务器将回复设备的MAC地址，以告诉它要使用的IP地址。但这仅限于单个子网上的单个服务器。对于具有多个子网和几个服务器的合理大型组织，这是一个问题。
TCP / IP，在Internet和Office网络上使用的协议可以通过将消息发送到特定IP地址来通过发送消息来生成广播。在IPv4中，与设备地址为所有1的子网地址。例如，在子网192.168.1.0/24上，广播地址为192.168.1.255。
使用DHCP，客户端在基本上表示嘿的DHCP协议中广播UDP数据包，我不知道我是谁，我需要一个DHCP服务器告诉我。
该请求到达DHCP服务器，该服务器分配设备的IP地址并发送回复，嘿，您可以是192.168.1.35
此时，设备不知道自己的地址，以便让回复返回它需要一些诡计。大多数操作系统允许程序要求混杂模式，这导致操作系统将其发送到网络上的所有消息，无论他们发送到哪个地址都会。在这种情况下，DHCP服务器只能将回复发送到新的IP地址。该协议具有一个字段，该字段将设备设置为（希望）唯一编号，因此它可以识别对其自己的请求的回复。
如果设备不能使用混杂模式，那么它可以在请求中设置一个字段，可以说明，服务器将广播回复。
比这更像更多，但基本上是它的工作原理。使用IP协议介绍了一些困难，但它具有可以通过网关处理的优势。
回答 3 答案是通过网络DNS服务和DHCP服务。
域控制器（DC）也是网络的DNS服务器（Active Directory依赖于DNS）。它知道域网络设备和资源的名称或IP地址。
网络管理员将DHCP服务器的DNS设置配置为指向域控制器。 DHCP服务可以在DC上运行，也可以将其委派给另一台服务器，计算机或设备（例如，Enterprise Router）。
一旦DHCP服务器都设置，客户端始终在启动或IP地址续订查询时获得正确的网络配置。现在，只要客户端请求IP的DNS查询或某些资源的名称，包括DC的下落，域控制器就可以直接响应客户端（A.K.A.权威响应）。
我希望我的回答满足你的好奇心。
回答 4 您可以使用DNS找到主域控制器。这也将在森林中获得任何其他域控制器。
回答 5 脚注
谢谢利亚姆史密斯为A2A。
有各种意味着黑客可以知道你的确切位置。
[1] [2] [3] [4] [5] 请记住：仅仅因为一个人是计算机黑客并不意味着它们只能使用设备上的某些技术利用执行操作，这将仅限于IP地址[6]和套接字连接时间。
[6] 脚注
回答 6 不相信我？这是我的过期域之一。它W.
.tk是一个糟糕的地方开始。他们的系统很糟糕，但它变得更容易使用。如果您忘记续订姓名并开始依赖它，他们的商业模式是持有Usitimage。如果忽略续订域，您的访问者可能会接触恶意软件。我的名字已经过了。这不是一个玩笑。它也偷偷摸摸。如果您输入名称，它不会提供恶意软件，而无需单击某个位置的链接，例如当您尝试手动转到您自己的网站时。这只是狡猾。
不相信我？这是我的过期域之一。它会愉快地尝试对您的计算机进行恶意。 demotracker.tk警告：不要去那里！实际上，我刚刚重新注册它，所以这个警告不再有效了。我记得曾几何时，他们希望我支付一笔金额，因为它成了保费名称。
如果您是无知的网络安全性，它在本地计算机上运行Web服务器的坏主意。无论如何&amp;hellip;&amp;hellip;你被警告了，所以现在生病告诉你如何做到这一点。
在该域地址，您的域将很快就可以到达。不要尝试访问它至少10分钟以避免缓存域不存在DNS错误。清楚地痛苦会痛苦。
时间延迟在几分钟到几个小时内变化，但10分钟通常足够。</description>
    </item>
    
    <item>
      <title>我是一名软件工程师，希望在美国找到一家公司的远程工作。对我有什么建议？</title>
      <link>https://xiangqingw.github.io/posts/i-am-a-software-engineer-looking-to-find-a-remote-job-with-a-company-in-the-usa-what-is-some-advice-for-me/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:21 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/i-am-a-software-engineer-looking-to-find-a-remote-job-with-a-company-in-the-usa-what-is-some-advice-for-me/</guid>
      <description>我是一名软件工程师，希望在美国找到一家公司的远程工作。对我有什么建议？ 回答 1 一般来说，开发商
Turing.com为熟练的遥控开发人员提供出色的软件工程职业机会。通过图灵，遥控开发人员可以符合领先的硅谷公司的全职和长期项目。图灵绝对是寻找全球机会的最佳平台之一。
嗨，我的名字是anjali，我与图灵的内部团队合作，与最好的软件开发人员与硅谷最好的软件公司相匹配。让我解释给你的提升过程，这样你也可以在你家工作时抓住世界级的机会。
一般而言，开发商需要至少需要3年的经验来申请制作工作。但是，我们可能对特殊开发人员发出罕见的例外。每个开发人员都需要清除图灵测试以申请图灵工作。
根据三个类别 - 技术堆栈，技能和资历来获取雇用遥控开发人员。
图灵的严谨审计系统包括一个5个以上时间的过程，包括关于编程语言，数据结构，算法，系统设计，软件专业化和框架的测试和访谈，从工程师的行星池中选择最佳和卓越的开发人员。这些AI动力测试由前谷歌，Facebook和Stanford工程师设计给硅谷栏的兽医开发人员。
找到令人兴奋的，长期角色，在这里申请：图灵工作|适用于精英美国软件开发人员工作
回答 2 我是数字营销人员，我与澳大利亚公司工作了1岁。我在linkedin得到了这份工作。
171,219名职位可在美国提供软件工程师，您可以在左上角看到以下结果。
如果您正在寻找来自美国公司的遥控作业，那么如果您已经在您的领域良好了解，他们将检查唯一的一件事。
一件事是信任
这是确切的方法 -
第1步 - 如果您没有创建并在那里制作好投资组合
步骤2-发布您的帖子的一些想法。
第3步 - 查找y的公司
我是数字营销人员，我与澳大利亚公司工作了1岁。我在linkedin得到了这份工作。
171,219名职位可在美国提供软件工程师，您可以在左上角看到以下结果。
如果您正在寻找来自美国公司的遥控作业，那么如果您已经在您的领域良好了解，他们将检查唯一的一件事。
一件事是信任
这是确切的方法 -
第1步 - 如果您没有创建并在那里制作好投资组合
步骤2-发布您的帖子的一些想法。
步骤3-找到您在搜索🔍框中感兴趣的公司。
第4步 - 向他们的人力资源部发送消息以及为什么您对该公司感兴趣。
步骤5-您也可以通过选择“作业”部分直接应用，并将其筛选到国家并选择软件工程师并仅筛选远程。
您可以在LinkedIn上看到远程选项。
任何人都可以通过这样做可以轻易获得工作，公司HR总是通过LinkedIn寻找正确的候选人。
我希望它对你有益！
我祈求♥我正在寻找工作的所有兄弟姐妹，他们得到了他们的生活中最好的工作。
回答 3 生活在美国时区。
你认为这无关紧要，因为它是一份远程工作吗？它以几十条较小的方式而重要。当你起床时，当你去睡觉时，你如何与周围世界的节奏进行互动以及这会影响你的同事。它不是不存在的效果。与太平洋时区的某人一起工作是令人沮丧的，因为他们必须早起，在东部时区与我们合作 - 改变他们的影响和可靠性。
说美国英语。
你会和美国人一起谈论，整天都很长，关于复杂的主题。除非您认识美国英语口语，否则您将不会享受雇用的偏好 - 从嘴巴出来的方式，它进入耳朵的方式。口音大大提高了这种远程对话中的摩擦力和挫折。
有美国地址，美国税收特征和美国银行账户。公司不是建立国际工资单。他们甚至没有人力资源和税务律师，他们理解复杂性 - 如果他们雇用你，他们需要一个以保持法律。他们向美国银行账户发送他们的工资单 - 它的顺利，适用于所有其他（美国）员工，如果它不适合您，那就会出现问题。
如果您有所有这些，请准备好展示您在访谈和配对中的知识 - 与他们分享您的屏幕，向他们展示如何编程。在可能的情况下提供您的工作示例。
展示您的设置，为他们的工作效率优化 - 您的工作空间。它表明您可以将必要的思想和理解放在您如何为他们有效地工作中，即使您远景 - 您不会在腿上用一台笔记本电脑踢回沙发上。
回答 4 您不会详细阐述您的专业和技能，因此令人棘手的回答您的问题，但有公司作为美国（和其他）公司寻找远程软件工程师和开发人员的平台。</description>
    </item>
    
    <item>
      <title>我的操作系统（c :)驱动器神秘地吃了空间。我该怎么办？</title>
      <link>https://xiangqingw.github.io/posts/my-os-c-drive-is-mysteriously-eating-up-space-what-should-i-do/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:21 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/my-os-c-drive-is-mysteriously-eating-up-space-what-should-i-do/</guid>
      <description>我的操作系统（c :)驱动器神秘地吃了空间。我该怎么办？ 回答 1 在以下图像中使用的程序是树化，可以免费下载。
Windows.old是以前的Windows安装，删除整个&amp;rsquo;Windows.old&amp;rsquo;目录。该目录将释放30.2 GB。
对于这样做的其他用户，请记住，您在新安装之前存储的所有个人文档和图像，都在新安装之前，在此窗口中的文件中。在删除之前，请移动您想要保留的内容。
将使用使用的文件夹，是用户文件夹。您访问的用户网站包含图像，将这些图像保存到用户文件夹中。来自网站的所有cookie，都进入同一个文件夹。从游戏中放入同一个文件夹中，也进入同一个文件夹。此外，其中一些可能包含大型图像，例如，它真的增加了。also，我玩了很多自定义内容我从Web下载，所有数据都存储在用户文件夹中。
我的C：
在C：\ Users \ My System中的文件内的一个小偷看：
看看它如何增加，而且&amp;rsquo;我只播放像SIMS 4&amp;rsquo;这样的简单游戏。在大量下载的自定义内容中。 （总计2.2 GB），到目前为止。
回答 2 在安装新软件时，您应该更改设置向导中的安装目录&amp;hellip;&amp;hellip;清除临时文件&amp;hellip;&amp;hellip;
清除临时文件..
1.按Windows键+ R
2.键入％temp％并点击enter &amp;hellip;&amp;hellip; .. ..和删除目录中的所有文件
从下载文件夹中删除或移动文件&amp;hellip;. ..从C驱动器到其他驱动器中的现有程序
这几种方法可以在C盘上释放空间
回答 3 此外，检查临时文件夹 - 在Windows下面有一个以及直接在C：Drive上的一个。我有两个戴尔计算机，不断使用.msi和.ini文件的临时文件夹。永远不会弄清楚正在做的事情，所以我只是设置了一个计划任务，每周一次删除临时文件夹中的所有内容。
回答 4 您应该将目录报告运行为管理员。它将向您展示所有磁盘空间的位置。作为管理员运行允许您查看隐藏文件
回答 5 在大多数情况下，1GB可用磁盘空间足够。操作系统不会有任何问题，但程序使用磁盘依赖的程序如何编程。有很多书面软件，简单地依赖于有足够的内存，足够的磁盘空间，并且不检查操作系统返回代码。那很糟。
Windows拥有100MB的免费磁盘空间将继续工作。由于Microsoft错误，我尝试了这一点，它正在创建事件日志文件并在几分钟内填充磁盘。将开始完全耗尽的磁盘问题。一些程序，我很少，用难以接近的驱动器正常工作。有些人甚至缺乏内存 - 只是减少功能。这就是如何编写程序！
但如果你有SSD，那么你就是真的，真的是真实的，问题！当自由空间下降到CCA 20％时，SSD持久性开始受到影响。在新文件写入或现有更新之前的SSD，必须删除以前的内容和擦除操作是破坏性的。 SSD从过度的磨损级别开始，开始影响旧文件，例如OS安装。这种SSD如果运行较长时间将死亡，开始丢失容量（不良扇区的数量增加）。如果SSD未能为较长时间供电，则它也会丢失数据，原因数据耐久性取决于存储单元删除了多少次。真实，破坏性问题。
回答 6 您只需要找出使用该空间的内容。它可能是日志文件或崩溃转储或谁知道什么。
在MacOS上，我使用程序磁盘清单x，它给出了我的空间所在的位置的很好的图形视图。
我认为，Windirstat的Windows也存在类似的东西。也有一个用于Linux，也称为Kdirstat。
在Linux或MacoS上，或在Windows上的WSL中，您还可以使用du（1）命令（磁盘使用情况）生成文件夹的空间使用文件的文本文件
回答 7 我认为您在C驱动器上安装了所有软件，因为它日复一日地降低了它。因此，要避免在系统的另一个驱动器中进行安装。
要增加C驱动器空间，您可以使用命令或实用工具清除系统中的所有缓存文件和临时文件。
回答 8 例如，如果您注意到应用程序正在占用的空间中的大部分空间，则可以单击该项目以访问应用程序和游戏，您可以在那里查看和卸载那些WA的这些项目
使用步骤了解在Windows 10上计算机上使用硬盘驱动器空间如何
虽然在存储使用情况下，您可以看到硬盘上占用的空间。您可以单击每个项目以获取更多详细信息并采取其他操作。
Windows 10上的存储使用情况设置
例如，如果您注意到应用程序正在进行最大的空间，您可以单击该项目以访问应用程序和游戏，您可以在其中查看和卸载这些浪费空间的项目，并且您不需要。
存储用法概述了几乎所有存储在硬盘上的所有内容，包括系统文件，应用程序，游戏，临时文件以及存储在文档中的文件，OneDrive，图片，音乐，视频和文件中的文件。
回答 9 在C：Drive的属性对话框的常规选项卡上使用磁盘清理。请使用“清理系统文件”选项。启用压缩。卸载您不使用的程序。</description>
    </item>
    
    <item>
      <title>有没有在Python编码的知名游戏？</title>
      <link>https://xiangqingw.github.io/posts/are-there-any-well-known-games-that-were-coded-in-python/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:21 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/are-there-any-well-known-games-that-were-coded-in-python/</guid>
      <description>有没有在Python编码的知名游戏？ 回答 1 这些是逻辑或服务器控件或两者都使用Python的一些游戏。
回答 2 Unknown Horizo​​ ns（2008）
虽然不是很姓，但仍然值得一提。它是几乎完全写在Python的游戏中的少数少数（如果不仅仅是）。它是一个基于Anno-系列的OpenSource游戏（前一个名称是Openanno）。这个游戏还有一个活跃的社区，它仍然收到更新。
如果您进入战略游戏，肯定会试一试！免费！
还有其他游戏，如文明和战场2，也依赖于Python。然而，这些游戏不使用Python为游戏引擎本身使用，但对于游戏逻辑，a.i.，&amp;hellip;&amp;hellip;这些游戏中的大多数是用C ++编写的函数。
回答 3 简短的答案所以你不必阅读：我没有任何明确的例子。您想阅读下面的知识 - 所有ramble - 是我的访客：
虽然使用各种废话编码了许多游戏，但面向对象的代码基本上是Python - 所以&amp;hellip;&amp;hellip;我邓诺多少钱。有些人，但没有多少，因为Python不一定是因为自己从地面上的开发方面而伟大。您可能需要中间件转换或充当某种中介，并且还取决于用于开发的核心引擎。任何语言都会有所限制，这些语言将需要更多固件，软件和其他物品，以获得根据其复杂性和跨平台运行的需要进行游戏运行。
每个人都希望根据面向对象的对象进行自己的专有代码，因此将有代码的代码，如python但不兼容，因此是我的初始声明。有些人正在使用基于Java的东西，但大多数游戏必须依赖代码层，并且像Python这样的前端有一个中心。
仍然需要与硬件（汇编）和其他变体交谈的代码，具体取决于开发人员如何创建。显然，发动机处理大量的装配但没有游戏真的只是一个代码，就像一个或两颗星都可以完全理解一支球队。
回答 4 以下游戏的主要代码是用Python编写的：
转到遵循链接以查看更多关于此信息：
Pythongames - Python Wiki
回答 5 [我只是打算回答这个问题，但谷歌曲的东西，我遇到了非常有趣的KGB与最着名的游戏，方面的关系，所以在底部看到琐事，包括苏维埃政府达到戈尔巴乔夫联系。]
自从我被要求回答以来，我可以支持（当前）的最新答案：
这些是逻辑或服务器控件或两者都使用Python的一些游戏。 [..]
Eve Online是一种大量的多人游戏在线空间游戏，写在StacklessPython
我碰巧知道，它也用C ++写（至少所有图形引擎）。你需要更多
[我只是打算回答这个问题，但谷歌曲的东西，我遇到了非常有趣的KGB与最着名的游戏，方面的关系，所以在底部看到琐事，包括苏维埃政府达到戈尔巴乔夫联系。]
自从我被要求回答以来，我可以支持（当前）的最新答案：
这些是逻辑或服务器控件或两者都使用Python的一些游戏。 [..]
Eve Online是一种大量的多人游戏在线空间游戏，写在StacklessPython
我碰巧知道，它也用C ++写（至少所有图形引擎）。您需要更多的是Python for任何严肃的3D游戏（可能是C或C ++（也）用于任何已知的游戏），更多：
CIV可以建造在Python中吗？
一些更简单，例如。 2D，游戏可以在Python中完成仅加上泛型库（例如在Python中未实现的Pygame，但您不必知道）。
知道Python（但不是其他语言）的程序员可以在游戏行业中有价值，因为制作游戏是一个团队努力。您可以自己制作像TETRIS这样的东西，只知道Python（虽然原始没有使用Python，所用于第一个版本的计算机太有限，但是支持Python）。在一点上，玩游戏的协作，通常只有一个程序员。
俄罗斯方块：我们如何使令人上瘾的电脑游戏在俄罗斯方块背后的男人，现在庆祝其30岁生日，揭示他们尊重的债务，善于善于法律，Tchaikovsky - 以及美丽的KGB代理人
Alexey Pajitnov，程序员
在80年代初期，我在苏联科学院的计算实验室工作，研究人工智能。这是能够与世界其他地区沟通的少数苏维埃研究所之一[..]
此外，Electronika 60，俄罗斯计算机最初写过Tetris，没有正确的图形，只是一个可以显示文本的监视器，所以我用字母来形成播放碎片。 [..]
我不知道如何发布它。我怀疑试图让我陷入困境，但PC版本被走私到匈牙利和西方公司开始生产未经授权的版本。 Perestroika已经开始，所以我向政府授予了10年的权利。这是苏联出口的第一部软件之一。 [..]
Henk Rogers，视频游戏许可证</description>
    </item>
    
    <item>
      <title>程序员是否超过CFO？</title>
      <link>https://xiangqingw.github.io/posts/do-programmers-earn-more-than-cfos/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:21 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/do-programmers-earn-more-than-cfos/</guid>
      <description>程序员是否超过CFO？ 回答 1 这将是非常不可能的。首席财务官是公司的一名官员，大幅支付超过程序员。
回答 2 不，他们没有。我在谷歌的高度员工中听到的一句伟大报价是：当然，我们可以支付我们的程序员100.000美元的美元，他们会肯定值得。这是唯一的问题：他们会在几年后逃跑，在他们拯救数百万的海滩上生活在百万的海滩上，我们将比我们雇用新的程序员耗尽。
编辑：许多问题已经提出为什么程序员会运行和CFO不会。 CFO的（或COO，CTO，CIO等）确实在海滩上留下了一段时间，但他们往往与公司有不同的联系。虽然程序员只有员工，但是通过标准过程雇用，而行政人员则致力于控制运营部门。他们运行了地方 - 这是差异。上面的报价有点不正确，那个程序员并不总是离开海滩，但他们为自己的公司（启动）离开，他们可以运行（首席财务官已经做过并得到了付出的超级效果） 。我记得Elon Musk的报价称，大公司（包括特斯拉），越来越难以找到良好的工程师超过几年，他还说（类似于Google）许多工程师来，抓住所有的专业知识他们可以在此基础上创建自己的启动。这一趋势可以通过2007年以来，在美国（红色曲线）的初创公司上的金额来确认：
这种新的工作策略，有时称为商业碎片，其中一些来自一个大型企业的员工发现多个小型初创公司，这对这些大公司来说往往是非常有害的。让我们看一下谷歌一次 - 让我们说出由前谷歌员工创立的一些公司/初创公司：
所以要查看：程序员Doo逃跑，透过专业知识，形成自己的企业，甚至挑战他们的前公司。因此，限制这一点的唯一方法：让他们回来回来的钱，不要让他们知道如何和足够的资源，以便他们容易地突破。
回答 3 一般来说，没有。
但是，如果该公司是一个创业公司和程序员正在开发唯一的产品公司将卖出，是的，程序员可以赚取超过CFO。
回答 4 但是，市场很奇怪。大多数人不喜欢如何
许多程序员略微过高，因为有些人受到严重的削弱。让我解释原因。
被誉为的10x开发人员不是一个神话。软件本质上可扩展和可怕的。与互联网，甚至更有互联网。这意味着一个非常好的开发商值得他或她的金色重量。在当今的环境中，开发人员可以实施一个辉煌的功能，它可以立即帮助数十亿人。
不幸的是，大多数开发人员都不好。他们可能会产生一些价值，但它通常不足以证明他们的薪水合理。
但是，市场很奇怪。大多数人不喜欢差异有多大的区别在于平庸的开发者和一个非常好的人。为了保持成本降低并将员工公平地，开发人员大致相同，无论他们的技能如何。 10倍开发人员可以忘记获得其他人的薪水的10倍。
低于平均平均开发人员80万美元？超付。
卓越的开发人员200k 200k？大规模欠款。
作为顾问，我一直看到这种现象。客户将全力以赴为初级开发人员支付115美元/小时，而不是135美元/小时为高级开发商。有时，小辈和老年人都是完全相同的，这是疯狂的。
回答 5 广泛的职业中的顶级陷波专业人士赚了很多钱。想到公司律师，商业管理人员，投资银行家，基金经理，石油工程师和医生。所有人都赚了好钱。顶级档次软件工程师也没有任何问题。
软件工程是一个非常艰难的职业。它需要艺术家的创造力和工程师的纪律。当您在复杂的软件中出现问题时，它可能会在情感上和精神上排水。
它需要以下技能，全部难以掌握：
不到10％的学习计算机科学的人实际上可以做到上面的6。不到10％的人可以做这6人可以索取任何掌握程度。因此，拥有掌握的计算机工程师非常罕见，因此高度追捧顶级公司。
回答 6 程序员的薪水范围非常广泛。即使在美国（薪水往往更高），我也看到程序员从每年25,000美元到250,000美元的任何地方。
这对于主要相同的技能来说是一个10倍的差异。这是如何发生的？好吧，很多取决于你在雇用的时候工作。
在2005年拿出我的第一份工作。我在一个带有PHP的当地电脑维修店工作。无论如何，我每年都在拉回25,000美元或其他东西。
我不知道基本上是国家最低薪水水平。我也没有意识到这笔交易有多糟糕，这在一个微小的电脑维修公司每周被推到50-60小时的时间。
是的，那就幸运的是，幸运的是我没有留在长远。
后来，我在大学上取得了一份工作，每年赚35,000美元，后来一年的时间更加像45,000美元。之后，每项工作都很大增加了我的收入。
最终，我相对于我居住的国家的一部分相对于国家的一部分相当高。我还了解一些在上面给出的愤怒的高端制作的程序员&amp;hellip;&amp;hellip; 250,000美元+。
这是我在自己的职业生涯中注意到的是我从其他人看到的内容。
这听起来很简单，也许有点明显，但我看到这些模式在每个级别都播放。
人民最不询问。人民最多的要求最多。哎呀，他们要求它！
我有一个搬进咨询的朋友，他设法比我想象的更高，因为他想到了如何以人们愿意说是的方式要求更多的钱。他工作了他想要工作的时间，与客户一起享受，并与他的家人一起度过大量的优质时光。
但他没有从那里开始。他通过努力工作，学习吨，并以正确的方式照顾业务来向成功阶梯工作。一路上，他一直找到更好的机会并要求更多钱。
这一切都不是复杂的，但通常需要10年以上的结果才能真正明显。
所以，如果你想赚到你可能是程序员的那样，我对你的建议是&amp;hellip;&amp;hellip;
重复该过程并获得利益。
这就是我看到人们始终如一地使其成为编程专业的顶级。
 武器
P.S.我也在其他地方写下代码和职业问题&amp;hellip;&amp;hellip;  回答 7 游戏开发具有更固有的复杂性
到目前为止，页面上的很多答案都是基于猜测。我都完成了游戏和应用程序的开发。
经过20年的游戏开发，我跳进其他领域。我在Linux上做了一年的司机和应用程序开发，觉得我一直在运行马拉松，并且每天两次过渡到遛狗：我的脑子萎缩，而且拍摄了另一年的游戏开发，让它回到了形状。
我认为Garry Taylors的回答是主点：有简单的游戏和复杂的应用程序。但我认为这也有点发生了。
游戏开发对于非学生游戏（例如商业比赛复杂性的25百分位数）具有比大多数应用程序更具固有的复杂性。与此同时，现在有工具可以最大限度地减少对特定类型的游戏的复杂性。我的一位朋友为幼稚的孩子们教育为二年级，他们在一周内创造一个团结的游戏。</description>
    </item>
    
    <item>
      <title>10岁的计算机是否有任何用途，或者你应该把它们扔掉吗？</title>
      <link>https://xiangqingw.github.io/posts/are-there-any-uses-for-10-year-old-computers-or-should-you-just-throw-them-away/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:20 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/are-there-any-uses-for-10-year-old-computers-or-should-you-just-throw-them-away/</guid>
      <description>10岁的计算机是否有任何用途，或者你应该把它们扔掉吗？ 回答 1 我正在使用旧的IBM Lenovo SFF桌面：
电脑跑得很好！它用于：
回答 2 许多慈善机构都希望PC的新产品，无论是为了修复和给负担不起的人
10岁（2008年）PC可能有类似2GHz双核奔腾处理器的东西。这将超过轻盈使用 - Web浏览，电子邮件，写作文件等。许多旧的游戏也将对它们进行绝对罚款。
您可以将其用于内部文件服务器（例如，用于音乐，照片，电影等），或用于儿童的PC或家庭影院PC（HTPC）。
您也可以将Linux放在上面，它会超过一些小型网站的Web服务器的快速。
许多慈善机构都希望PCS的新增功能，无论是用于修复和给予买入较新PC的人，也可以在内部使用（例如允许人们廉价/免费访问互联网的慈善机构，或用于计算机使用训练）
回答 3 他的员工还抱怨我安装的监控软件
是的，我用它们来运行旧的32位软件。并冲浪互联网。我仍然运行Windows 95。
除了旁边，当我离开家时，我忘了我的笔记本电脑。我从一名回收者那里获得了一台使用的笔记本电脑，他们从旧电脑抄写员的政府招标方面取得了便宜。
我下载了所有必要的文件，让我工作，并访问了一个政府办公室。官员认为这是他的。他有一个新的电脑，但是遇到问题，因为新的单位感觉不对，而Windows 10不支持他的旧A3打印机。
他的员工还抱怨我安装在旧设备中的监控软件无法在他们拥有的新计算机中运行。
当然。他们的IT Genius没有安装旧软件。旧单元有RS232端口，但新的单位只有USB。
顺便问一下，有人有一个新版本的富士pxr-lite吗？它可以运行较新的FUJI PXN控制器而不经过SCADA吗？
在这里，我们是政府在电脑，沙巴，沙捞越和东海岸州的PAS州政府遇到问题，尤其是儿童的计算机没有足够的电脑。
回答 4 如果您只是关注浪费，请提供捐赠
这两种东西都是真的&amp;hellip;&amp;hellip;他们有用，但可能是你应该把它们扔掉。
一个更好的问题，只有你可以回答的是这10岁的电脑有任何目的，对我来说有足够的价值，以保证部署空间，电力和维护成本吗？
答案几乎总是没有。如果您必须询问您可以使用的内容，那就更有可能是更有可能的。因为这意味着你会在你可以获得任何价值之前有一个繁琐的学习曲线。
如果您只是关注浪费，请提供将它们捐赠给带旧电脑的慈善机构。如果慈善机构带走了它们，这意味着他们可能有计划从中获得一些价值。如果没有，那就是确认他们真的是毫无价值的，应该被扔掉。
祝你好运！
回答 5 按优先顺序：
如果它的功能，捐赠是合适的。
如果它处于“良好的形状”，也许通过电子商店重复使用（销售各种电气扭转的商店）是好的。
如果它是“超越修复”或希望，那么通过将其放入适当的回收流中的回收是合适的。
基本上，永不只是“折腾”你不再需要的电子产品。有很多有用的组件可以是从旧电脑尸体的“重新肆无忌惮”&amp;hellip;&amp;hellip;
回答 6 嗯，你可以将它们撕下并再循环各个部分，因为我听说有些组件是有价值的，特别是如果融化。或者，可以使用它们的各种事物，使用像Ubuntu这样的东西而不是使用Microsoft Windows来使用它们。
但是，这必须取决于你。我的妻子坚持要把它们扔掉而不是收集它们，因为我们生活的地方太小了。
回答 7 一个10岁的电脑可以具有卓越毒性的金属，因此适当处理电子废物很重要
回答 8 将它们卖给二手店。我购买旧计算机只是能够使用旧版本的Windows。如果您购买最新，则无法降级，因为旧版本无法处理较新的芯片组。
回答 9 是的，许多只是加载了Linux上的灯操作系统，它可以作为NAS或媒体中心的新功能，或者用作普通电脑.. Linux提供了非停止支持，因此不要担心安全或支持。只需使用像Ubuntu或Linux Mint这样的东西。
回答 10 我相信他们可以在翻新很容易之后使用
回答 11 您可以升级10岁的计算机系统，您可以保留它们的零件;创建网络实验室，或者您可以将其转换为游戏系统或专用网络。
升级
 RAM - 还用于游戏硬盘驱动器 - 增加空间操作系统 - 到Windows 10，取决于制造*网卡或WiFi 游戏的视频卡</description>
    </item>
    
    <item>
      <title>Python对于区块链开发有多好？</title>
      <link>https://xiangqingw.github.io/posts/how-good-is-python-for-blockchain-development/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:20 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-good-is-python-for-blockchain-development/</guid>
      <description>Python对于区块链开发有多好？ 回答 1 Python是一种多功能和快速的语言，对于BloctChain而言，由于任何人必须能够在没有并行处理事务的情况下添加到链条。 Python让开发人员在少于50行代码中创建一个简单的区块链。使用Python开发的一些受欢迎的区块链是以为形象的，超涉及的面料，梯级和新级。稳定性是一种新的编程语言，旨在创建基于Etereum的智能合同。
最近，我一直在进行关于Metashiba的仔细研究。阅读其白皮书后，我发现具有多种用例的这个项目潜力。值得调查！
回答 2 Python不是区块链开发的最佳语言。我建议使用PHP在Python上。
回答 3 顺便说一句，如果您对投资加密的感兴趣，那么您将满意
Python是一种灵活且快速的编程语言，对于区块链来说是理想的，因为任何人都可以在没有并行处理事务的情况下添加到链条。在少于50行代码中，Python允许开发人员构建基本区块链。它也是世界上最广泛使用的编程语言。
在不到一小时内，您可以通过简单地利用Python代码来指定单个块/记录，块链，工作校验系统和挖掘机制来开发自己的Python区块链。
顺便说一句，如果你有兴趣投资加密，你会对这枚硬币感兴趣。这是Mschiba。 Metashiba $ MSCHIBA是由Meta Factory Team推出的常规项目。元工厂团队是一组专业加密开发商和游戏制造商。他们在这里创造了一个Shiba Metaverse。虚幻很自豪能够成为加密货运世界中这种惊人的运动的一部分。在MetaVerse世界中的NFT和游戏。
回答 4 Python是一种灵活且快速的编程语言，非常适合区块链，因为任何人都可以在没有并行处理事务的情况下添加到链条。在少于50行代码中，Python允许开发人员创建一个基本的区块链。 Ethereum，Superlowger Fabric，Stem和Neo是使用Python建造的最受欢迎的区块。稳定性是一种建立以外智能合同的新编程语言。
为您的投资做好最佳，首先投资最近推荐的一些优秀项目。这将为您提供最佳基础，了解该区域如何运作，您可以自行学习以获得经验。例如，以$ MSCHIBA为例，这是在加密市场投资的最佳MemeCoin！自成员令牌的出现以来，该团队还尚未使用实用程序观察与实用工具。这就是元涩河进入图片的地方。据说Meta Shiba通过弥合MetaVerse差距并提供功能来彻底改变老年世界。我相信这是一个为你开始的优秀场所！
回答 5 Python惊喜许多专家，其积极增长。根据Tiobe和Pypl评级，它现在在前三名最流行的编程语言中。 Pythons人气主要由其多功能性和简单性驱动。很容易学习和易于使用。 BlockChain开发人员也喜欢这种编程语言，并且有几个原因：
正如您所看到的，BlockChain为区块链开发人员提供了大量的好处。通过这种编程语言，创建区块链的过程尽可能简单且快速。因此，对您的问题来说，我会回答是的，Python对区块链开发有利。
阅读更多关于Pythons BloctChain开发功能的信息。
回答 6 它可以用于开发，因为大多数繁重升降的代码都在C写入的库中，并从解释的Python访问。
所以它可以发展。
但是，如果您要部署，在开发了算法之后，您将想要在C或C ++中重写它们，以避免在更多服务器上花钱，以便解释语言而不是您用于编译语言。
服务器乘数可能是3倍5倍的服务器，这与C库返回解释的Python代码。
回答 7 如果您正在开发基础架构本身，即您正在开发允许数据存储在块链中的库，我建议Python不是
BlockChain只是一种存储数据存储的方法，可保持数据一致。很多人都非常困惑，并认为使用区块链的应用程序是特殊的东西 - 它们不是：唯一不同的是您用来存储和检索数据的界面，具体取决于您存储的方式不同 - 就像在CSV文件或基于SQL基于SQL的数据库之间不同的接口一样。
如果您正在开发该基础架构本身，即您正在开发允许数据存储在块链中的库，我建议Python不是正确的语言 - 您可能希望选择一种非常快的语言，即C或C ++非常快。
如果您正在编写一个使用BlockChain作为存储系统的应用程序，那么确保Python是一种很好的语言。它有一些非常好的第三方图书馆，用于区间存储和检索。无论您选择Python，这取决于整个因素的整个负载，其中许多因素都与您是否使用BlockChain无关。
回答 8 公共区块链倾向于使用前端语言和不同的语言进行智能合同。例如，Ethereum的智能合同语言是坚固的，而Cardano是Plutus。要构建应用程序，他们使用不同的语言。例如，Ethereum使用Web3。这是一个基于JavaScript的库，而Cardano则基于Haskell。由于这些公开区块链发展，社区将为不同语言开发更多工具。对于Cardano例如，已经存在一个基于Python基础的项目。有关更多，链接在这里。
回答 9 Python通常是在创建基于区块链的项目中的顶级工具中。根据SackageLoverows 2019年开发人员调查，这种编程语言在开发人员中进入了最受欢迎的语言。
回答 10 Python是一种多功能和快速的语言，对于BloctChain而言，由于任何人必须能够在没有并行处理事务的情况下添加到链条。Python让开发人员在少于50行代码中创建一个简单的区块链。它是世界第二名的已知编程语言。
并且只需使用Python代码来定义单个块/记录，定义块链，定义工作系统和采矿过程，可以在不到一个小时内创建自己的Python区块链
回答 11 Python是几乎每个字段中使用的多范式编程语言。你说出任何部门，Python的存在总是徘徊。</description>
    </item>
    
    <item>
      <title>为什么您无法根据第二个下拉列表（JavaScript，HTML，开发）更新下拉列表？</title>
      <link>https://xiangqingw.github.io/posts/why-cant-you-update-a-dropdown-list-based-on-a-second-drop-down-list-javascript-html-development/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:20 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-cant-you-update-a-dropdown-list-based-on-a-second-drop-down-list-javascript-html-development/</guid>
      <description>为什么您无法根据第二个下拉列表（JavaScript，HTML，开发）更新下拉列表？ 回答 1 你可以。只需添加事件侦听器即可更新第一个下拉目或反之亦然时更新第二个下拉列表</description>
    </item>
    
    <item>
      <title>我可以步行进入一个苹果商店并开始使用他们的计算机吗？</title>
      <link>https://xiangqingw.github.io/posts/can-i-just-walk-into-an-apple-store-and-start-using-their-computers/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:20 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/can-i-just-walk-into-an-apple-store-and-start-using-their-computers/</guid>
      <description>我可以步行进入一个苹果商店并开始使用他们的计算机吗？ 回答 1 我可以步行进入一个苹果商店并开始使用他们的计算机吗？
是的。
这就是显示模型的展示模型&amp;hellip;&amp;hellip;
回答 2 这位苹果不能干扰并完全阻止那种。你怎么知道y
在某种程度上，是的：这取决于有问题的商店和那里的人。
我已经在多个场合完成了它，我将继续这样做，直到他们决定他们不会做这一点。据说，我不会在他们身上做任何重要意义，因为它们没有打算在只有在使用的访客帐户并且那是平凡的粗鲁时才允许的。客户帐户配置为这一点，就在注销的情况下，您所做的任何东西都被销毁了：伟大的地板展示！
这位苹果不能干扰并完全阻止那种。如果您不能亲自尝试，你如何知道您是否要购买鼠标，触控板，键盘或外部监视器或任何物理用户界面硬件？他们都是非常个人的作品，或者不适合你。有些人不能忍受他们的老鼠，键盘等，或者通过测试它们来发现。 Apple销售其他Apple兼容的外围设备，虽然如果您想要除了无线Mac键盘之外，但它们不会销售：您只能为iPad获取非无线键盘。我个人讨厌处理电池和充电，偶尔可以破坏的键盘连接辍学，因此Apple不再销售我将购买的MAC兼容的外部键盘。
回答 3 是的。请记住，他们受到严重限制。USB锁定。它是挂在桌子上。这些计算机只是为了遇到新型号。如果您想要通过计算机的帮助。联系员工，他们将使用服务Mac来帮助您。
回答 4 用它们来做什么？他们正在使用一些工作演示，但你不能去那里做纸或办公室工作。这是一家商店，不是互联网咖啡馆。苹果不会用你的房子来卖东西。
回答 5 Apple Store将attem
是的（显然，这些日子不是这些天，由于Covid-19 Pandemice，Apple商店全部关闭）。
只要“Genius Bar”在那家店开放，您可以与您的Apple设备一起行进并要求看天才。如果您没有预约，则可能需要等一段时间，但最终，您将获得20分钟的天才。他会看看你的问题，如果它是可固定的，而无需更换零件，他将无需修复它。如果它需要零件替换，他会告诉您更换部分的成本是多少，如果您要继续，您可以选择。
无论您的Apple Care（保修）状态如何，Apple Store将尝试解决您的问题。我曾经带了一个12岁的MacBook，带有DVD驱动器问题。天才打开了电脑，拆下了驱动器，将纸夹拉出来，把东西放回到一起，把它放回工作状态。我什么都没有支付。如果旧设备仍然可用，则可以为您替换它们。
底线，Apple Store将采用任何Apple硬件进行维修并尝试修复它。如果仍然可用，则劳动力均为零成本。
回答 6 我在天才角色的Apple商店工作了近8年。在此之前，我在苹果商店之前，我还曾在一家小型企业专家工作。
因此，随着说，这是我对Apple商店工作的最佳福利和upsides的看法，我们可以拯救不同的一天。我首先要覆盖简单的人：
回答 7 这取决于你的访问的原因♥
如果您想购买新的Apple产品，那么您可以直接访问商店，没有和预约。
但如果您需要有关您的Apple产品的任何服务，那么您必须在访问商店之前修复预约😊✌🏻✌🏻
回答 8 是的，但你可能会遇到，因为不太了解苹果零售，因此并没有非常关心。
我的建议？你应该这样做的方式：Apple网页的工作。别客气。
回答 9 是的，你可以刚走进但准备排队等候。即使是最简单的事情也需要至少2个小时。如果您提前在线预约，最好更好。
回答 10 店内购物预约和行走不可用。要查看是否提供修改后的服务，如果您可以选择安排路边天才支持预约，则会要求您提供联系电话。在您的服务当天，Apple Genius将以您的预约与您联系。
回答 11 好吧，我更愿意从Apple Store购买而不是供应商其他选项，有几个原因</description>
    </item>
    
    <item>
      <title>我应该退出python编程吗？我需要你的建议。</title>
      <link>https://xiangqingw.github.io/posts/should-i-quit-python-programming-i-need-your-advice/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:20 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/should-i-quit-python-programming-i-need-your-advice/</guid>
      <description>我应该退出python编程吗？我需要你的建议。 回答 1 不
我希望当我6岁时我学会了Python
回答 2 真的吗？建议？除非你给出所有你得到的背景，否则就是猜测和猜测。
你把Python作为一种爱好吗？问一下工作吗？你为什么考虑放弃？
来冠军，想到10秒钟。
回答 3 不要相信，能够在工程师掌握掌握的人在最近几周内应该能够流利地发挥Python。把自己抱在一起，战斗;-)
回答 4 如果您有故障编程，则在Python中执行此操作。请记住，Python是学习编程和解决算法最容易的语言之一。
如果您对Python有问题，您可能会遇到任何其他编程语言。
回答 5 详情（上下文）
我有电气工程学士学位。我喜欢做电子和焊接，但我认为AI将改变世界。所以我参加了自动车辆控制工程中的主人。我不喜欢学习车辆，但我喜欢电脑愿景。所以我开始自己学习Python，但我意识到我没有得到任何地方。我没有改善。
我应该考虑退出它，或者我可以在一年左右的情况下做到这一点。是否有可能精通Python，足以降落一个进入级别的深度学习Python相关的工作
回答 6 对于新手程序员来说，学习程序的最佳方式是首先了解逻辑建设的技能，并触摸其他资源以探索该功能
学会作为业余爱好项目进行编程。软件在所有字段中。
如果学生知道如何编程，那么语言教程的来源并不重要。常见的做法是学生认为他/她获得清晰的语言教程，更快，他们可以学习如何编程，这是一个错过的想法。语言教程仅适用于那些已经知道如何编程的人。
对于新手程序员来说，学习编程的最佳方式是首先了解逻辑建设的技能，并触摸其他资源以探索编程语言的功能。学习逻辑建设技能需要很少的技术行李。必须是为了建立信心并增加学习编码的步伐。
回答 7 Python一般是无用的努力，因为不会帮助您学习如何构建软件
回答 8 大家好，
我是Sanaya Rajput，我想回答这个问题。在开始讨论之前，首先让我们了解Python。
什么是python？
Python是最受欢迎和解释的高级编程语言。基本上它用于Web开发，软件开发，数学，科学和数字应用程序。
如何学习Python？
如果要掌握Python编程语言。因此，您可以在线和脱机平台，您可以在这里加入和学习Python。如今，许多在线平台为Python提供了教程和视频。但你应该有好k
大家好，
我是Sanaya Rajput，我想回答这个问题。在开始讨论之前，首先让我们了解Python。
什么是python？
Python是最受欢迎和解释的高级编程语言。基本上它用于Web开发，软件开发，数学，科学和数字应用程序。
如何学习Python？
如果要掌握Python编程语言。因此，您可以在线和脱机平台，您可以在这里加入和学习Python。如今，许多在线平台为Python提供了教程和视频。但是你应该了解哪个平台最适合你的知识？因为您可以通过在实时项目和良好的指导下成为Python编程语言的专家。
学习Python的优点： -
Python课程模块： -
Python训练程序员后的工作角色： -
来自研究所的Python课程： -
最好的研究所为学生提供了现场项目培训，成为Python课程的专家。如果您想学习Python编程语言，那么我会向您建议您为一个非常适合您的Python课程的Jeetech学院。该研究所在Python字段中提供了完整的指导，这对学生来说真正有助于学习关于Python的最佳事物。这所学院的培训师在Python拥有10多年的经验，这对学习者来说非常有帮助。
该研究所可以是学习Python语言的步骤指南。他们根据行业的要求培养学生，并帮助学生在Python领域开发更令人满意的专业。这是德里学习者之间的可能研究所的原因。
为学生做好准备，学生需要最好的学院才能报名。一些像Jeetech Academy这样的流行研究所，为学生提供专家培训。完成课程后，他们还在行业中提供100％的就业安置，以创造学生的光明未来。
谢谢你滚动&amp;hellip;&amp;hellip;
回答 9 在C，Java和Python中考虑Hello World Program
C代码</description>
    </item>
    
    <item>
      <title>我想在Quora工作。我该怎么办？</title>
      <link>https://xiangqingw.github.io/posts/i-want-to-work-at-quora-what-should-i-do/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:20 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/i-want-to-work-at-quora-what-should-i-do/</guid>
      <description>我想在Quora工作。我该怎么办？ 回答 1 如果您是程序员，即将到来的一个独特的机会是参加2022年2月5日托管的免费Quora编程挑战！您可以于2月3日注册比赛。您有机会赢得酷奖，我们的招聘团队将达到顶级得分参与者。
否则，请查看我们职业生涯页面上的打开位置并直接申请！
回答 2 但我没有收到报价，即使我有
几个月前，我采访了数据科学家角色的Quora。我在职业生涯页面上申请，在职业博览会上发表招聘人员，并通过前Quora实习生恢复向招聘人员转发给招聘人员（再次感谢您，如果您正在阅读这一点:)）。
我不知道这三种方法中哪一个最能做。该过程包括完全约6-7采访，我喜欢所有这些过程。在过去的几年里，我已经采访了一堆科技公司，我可以毫无疑问地说Quora是最愉快的。 10/10会推荐。
但我没有得到一个报价，即使我有一个伟大的选择＃2（Facebook机器学习），我悲伤了几个星期。 （注意2017年10月缺乏答案：P）
公司肯定选择最好！而我唯一的建议如果您要申请（适用于任何面向消费者的产品公司） - 在采访前使用地狱脱离产品。所以，如果你正在读这个，好工作！ ：P.
回答 3 有一个招聘视频寄到了他们的Twitter页面。
该视频显示了工作场所和员工。视频中的每个人都看起来如此聪明，我的手机屏幕几乎破裂了。
刚刚预示，如果你没有常春藤联盟学位或一些编程奖杯，那就可能是艰难的。
回答 4 好问题。
上述过程是所有基于软件产品的工程公司的标准程序。这一切都是所有真正的软件工程公司，他们都不适用于基于服务的卷轴公司
回答 5 你可能不知道你的年龄，但我必须告诉你一个
原始问题：
我可以为Quora工作吗？我会在一个月内使用Quora多少钱？我还可以在14岁时与Quora合作吗？我知道这个问题是愚蠢和愚蠢的，但我对学校感到厌倦。我可以用quora吗？
所以你的14岁，和学校无聊。你想要生活中的一些冒险。好的，听起来很酷。甚至担心薪水，兴旺。唔？我向您保证，Quora作家的薪水超过了您的期望。同样，你必须做的工作甚至比你现在的期望更重要。
你可能不知道你的年龄，但我必须告诉你一项可能帮助你的黄金法则：
为了获得一份工作，你必须在你身上有一些特别的东西，即招聘人员需要。它很简单！
（oops，除非您是一些特殊的公司/办公室，否则就其他一切的资格或学位。）
这仍然听起来很酷，不是吗？看哪！在实际生活中，您需要证明自己和您的才能。仅推动自己，不会让你到任何地方。您需要表现出您的才能加上某些或其他方式的奉献精神。
为了削减这件短暂的话，我真的不认为Quora将带你在你生命的这个阶段。只是因为你似乎真的很无聊，没有任何质量。事实上，如果我是招聘权威，我会认为它是一个弱点。你没有奉献，但厌倦了分配给你的工作，即研究。你似乎没有诚实地对你的工作。但正如我所读到你的问题，我可以说，你是一个雄心勃勃的人，真正的愿望高，就像我年龄仍然非常少于你的年龄一样。
所以你仍然很有机会！想想为什么Quora会带你去和他们一起工作。从他们的角度看。问问自己Quora团队所需的质量是什么。生病推荐你开始在Quora上写答案。很多答案。创造性的答案。好的答案。来自您了解的主题。从学校里教给你的东西。这也将帮助您研究学校教学大纲，并在这些主题中展望更多的洞察力，以赔偿您专注于Quora的时间。
准备好。然后，在对Quora回答相当大的答案之后，您可以接近Quora团队。他们可能会带你去和他们一起工作。即使他们不积极回应，你也会发展一个非常好的词汇，深入了解多种主题和更改善的写作技巧。如果需要，请求帮助。
祝你好运亲爱的。
回答 6 quora是一个美丽的
如果你不使用这个，不要滚动答案&amp;hellip;&amp;hellip;
基本上它一切都从阅读开始。
阅读变更观点并实施它们会改变你的生活。
Quora是一个漂亮的网站，但请记住它是一个社交网站，高度上瘾。如果你只是浪费你的时间滚动不必要的答案，那么Quora和Ig之间没有区别点。
Adios Amigos签约！
〜Sonu💜.
回答 7 这一切都在这里开始：
https://www.quora.com/careers.
回答 8 访问https://www.quora.com/careers并申请。
回答 9 当然，用Quora工作人员注意到要注意的事情！
每家公司我曾经雇用人民的方式之一是在野外找到真正有趣的人，然后向他们伸出援手。大多数公司都必须在它上工作并雇用招聘人员出去寻找人们，但Quora有一个令人惊叹的系统，已经建立在这样做：Quora本身！
我建议您对展示您批判性思维技能，知识和编写良好和周到答案的能力的问题写出智能答案。真的参与了该网站。 Quora员工都在这个地方，他们看着 - 你可能会感到惊讶，如果你真的花时间参加并贡献他们的建筑物。
这个建议也来自经验。在5月或6月我收到了来自Kah Seng Tay的消息，他想知道我是否想喝咖啡，看看Quora办公室。我不是真的在寻找当时改变工作的变化，但我同意了和Quora的其他几个人交谈。我从未结束申请，但它是通过贡献该网站并在这里可见，他们找到了我。
我还会建议你通过关于如何降落你想要的工作的Quora的许多其他伟大内容。将自己与人群区分开来，远远超出，并且擅长你所做的事情。
回答 10 我会联系他们。</description>
    </item>
    
    <item>
      <title>是一个职业生涯，作为Java开发人员履行？</title>
      <link>https://xiangqingw.github.io/posts/is-a-career-as-a-java-developer-fulfilling/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:20 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-a-career-as-a-java-developer-fulfilling/</guid>
      <description>是一个职业生涯，作为Java开发人员履行？ 回答 1 IV&amp;rsquo;e是一个专业的程序员，超过35年，所以这是我的智慧。
第一个必须解构问题一点：
Java：编程语言。许多人我需要在我的职业生涯中使用。语言只是工具，也不是。我自己只有30个以上的人中只有一个我用过的人会阻碍我的职业生涯;当我得到我的第一个专业雇用时，Java甚至没有存在！
开发人员：有很多不同类型的开发人员。有工程师（无论纪律如何），了解解决问题的内在问题（我碰巧是EE）。有架构师知道如何以连贯的方式组装组件。有程序员可以将问题蒸馏出来的成分较小的问题，并与建筑师和工程师沟通，以开发方法，并开始编写商定的路线图。然后有代码猴子类型（编码器），需要手握住，同时从切割和粘贴一起缝合。
履行：这取决于您想要的单词的定义。给我;我不会幸福，只使用一个工具在我的职业生涯中提供相同的旧业务问题。这是我举行的能力，让机器进行竞标。这是我对职业生涯的第一个吸引力。我可以做一个数字电脑来竞标。
现在在你的问题的答案中，这适用于我的意见：不，只能成为名称的Java开发人员，只会完全履行！
回答 2 不。
在Java上写了两本书，被迫在某些地方使用它，我可以告诉你Java是一种垂死的语言。
今年晚些时候，谷歌将倾倒福克西亚的Android，并且大部分Java开发人员工作（特别是那些雇用自学轻视开发人员）的大部分就会消失。
我因为java而差点离开了它。
如果您井中学习C ++，您将不断挫败培训车轮在Java上的大量以及它们如何不断地妨碍正确解决方案。
ro &amp;hellip;&amp;hellip;
回答 3 它让我到美国。
它为我的房子和生活方式付了。
它允许我早点退休。
我会根据自己的个人经验说，这一直非常满足。您的经验可能会有所不同。
回答 4 有一个充满活力的社区。🌎
你遇到了非常有才华的人。
你的工作可能很高。
在开发人员中，如果你知道Java，你赢得了一个非常好的认可。
生态系统是无限的，你永远不会停止学习，让你的思想锋利和脚趾。
如果您有计算机科学的激情，您肯定会在Java Career中找到您的方式。
回答 5 是的，如果您喜欢在Java中编码。
如果你必须问，那么它就不是为你。持续的程序员是在他们为金钱计划之前开始编程的程序员。
回答 6 是的，如果您能够在各种项目/域/技术上工作。如果您要学习新技能，那么，如果您有机会导致初级资源并观察它们的成长。
回答 7 你好，
如果你喜欢编程，那么它就可以成为你的东西。
它是一种核心编程语言，提供现在最稳定的职业选择之一。随着预期的需求，未来几年不应改变。
Java开发人员的计划往往有点忙碌。但如果你是为了挑战，并且是编码的极客，那么它很棒。
薪水结构通常是良好的，业内增长也很好。也可以旨在瞄准出境机会和现场选项。
最好的祝愿 ！！
回答 8 我在过去的10年里一直在Java编程，最近切换到Python / JavaScript。
Web开发
java的未来在传统的网络开发中看起来黯淡。截至2019年，首选架构是SPA框架+移动应用程序和后端休息服务。随着微服务模型的兴起，Web应用程序连接的即时后端不需要与Java（Spring Boot / Jersey等）相关的铃声和吹口哨。因此，设计师和架构师正在使用非阻塞的IO语言/框架，它是轻量级的，如node.js + Express。但是，需要编排的复杂可重用API，但是，数据库交互将以Java编写。
因此，我对未来的预测是更现有的Java（Spring MVC等）将用JavaScript SPAS前端和节点+ Express后端REST API替换。抛弃节点快递API将与可重用的Java（或Python）中间件API交联，该中间件API将完成所有繁重的升降计算。所以JavaScript比Java有两倍的开口。
安卓
由于Oracle对Google的诉讼，在Android中存在战略转变，迈向Kotlin。此外，移动开发框架的众所周假是从诸如Flutter（Dart），反应本地（JavaScript），本机脚本（JavaScript）。因此，在Android空间中的Java开发人员将有较少的开口。
大数据和分析</description>
    </item>
    
    <item>
      <title>计算机以外的其他设备需要操作系统运行？</title>
      <link>https://xiangqingw.github.io/posts/what-other-devices-other-than-computers-require-operating-system-to-run/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:20 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-other-devices-other-than-computers-require-operating-system-to-run/</guid>
      <description>计算机以外的其他设备需要操作系统运行？ 回答 1 问：为什么某些设备需要操作系统，而其他设备则不？
有许多类的设备。例如，电烤箱不需要操作系统，因为它可以依赖于被加热的双金属条带来触发烘烤循环的结束。但是，在电子世界中，有没有操作系统的设备。
通常在允许用户可选地添加其他功能的设备中找到操作系统，例如将视频编辑器添加到家庭计算机。操作系统也可以是允许以有效的方式共存和共享资源的不同代码的有用方式。例如，具有内置语音邮件设施的现代DECT电话系统将具有多个操作组件。一个组件将处理传入和拨出呼叫。一个组件将管理多个手机的连接，允许任何单个手机制作或接收呼叫，或允许两款手机充当对讲机。另一个软件组件可以管理语音邮件。我的手机系统允许我的妻子在一个手机上进行外部呼叫，同时我可以使用不同的手机来查看和管理DECT电话系统录制的语音邮件。
手机系统将具有某种形式的操作系统来管理由这些各种活动共享的资源。
PC对操作系统具有类似的要求。但是，PC中的BIOS / UEFI固件可能被写为单片单片
回答 2 好吧，如果你会看到，我们周围的一切都是一台电脑。无论是汽车，机器人，手机，智能手表，谷歌玻璃和均匀冰箱（Chill Hub）都会与Ubuntu提供动力。所以是的，基本上遵循指令的所有内容都需要操作系统。操作系统的大小并不重要。
回答 3 我不知道任何设备都需要操作系统。大多数计算机都有更有用的，如果它们有一个，但可能可以用于特殊目的而没有一个。
回答 4 几乎任何设备除了最简单的设备除外。特别是如果有用户互动&amp;hellip;&amp;hellip;大多数利用Linux的一些变体
回答 5 引用德克萨斯乐器的首席执行官：如果它在电力和成本低于五十美元的费用上，则可能需要一个操作系统。这是三十年前，所以你可以将成本降低到1美元。
回答 6 任何带有CPU的硬件都需要一些软件（或固件）来在芯片上执行。那些软件是类“操作系统”的原始形式。
因此，您问题的答案就是关于它需要可编程逻辑的组件需要某种操作系统。
回答 7 从不同的角度来看，我会说：你考虑的任何设备都有操作系统，必须有季度补丁过程！如果有一个操作系统并且没有定期修补，那么该设备是黑客天堂，您将被拥有。
回答 8 我会说计算机不需要操作系统，但足够复杂的是将受益于它。
只有计算机可以拥有操作系统。有些设备有一台小型嵌入式计算机。模拟手表显然不是计算机，一个简单的数字手表可能不是，一个更复杂的一个可能具有微处理器，SmartWatch将具有微处理器，并且可能具有诸如Apple Watchos的操作系统。
回答 9 操作系统提供可以执行多个程序的环境，OS提供了硬件功能的程序。
因此，任何可配置的电子设备，或者需要执行多个任务需要操作系统。
如果一组任务相当有限，并且与硬件的交互有限，并且可以将多次拆除没有操作系统，并且可以将其与硬件的交互有限，并且可以编程到应用程序中。
所以现在你了解如果你想运行GUI浏览器，你就不能离开OS，因为任务涉及网络连接，浏览器应用程序，GUI渲染，将下载的数据保存到磁盘和RAM以运行应用程序所以内容在切换回浏览器时不会消失。
要回答您的问题，几乎每个设备都可以要求操作系统，即使是那些具有相当有限的硬件的嵌入式系统，是对其制作的操作系统是一个嵌入式操作系统？来自Whatis.com的定义
回答 10 电话，肯定。
回答 11 取决于电视。
很多，使用estel提供的。亚马逊火电视使用亚马逊操作系统。一些Sonys和越来越多的其他人现在使用Android。 LG有自己的WebOS和三星有Tizen。
无论哪个，老人都会找到一种方法来迷茫它。看，爷爷，只买一个血腥的松下。他们对仓鼠的使用很简单。您甚至可能会发现一个有血腥的Scart插座，所以如果你看起来很难，你可以使用你多年的VH。在任何情况下都没有，如果你超过七十，买一个血腥的火电视。只是不要。你将花一周挥舞着你的Zimmer框架，像我这样的人喊叫。你没有任何东西给你。 George and Mildred你会在Itv3上找到，那是Freeview的10个频道，好吗？如果你等待一小时，你可以看检查员莫尔斯，所以刚刚刚刚击中卵巢线，你呢？
你的孙子将为您设置BBC iPlayer和ITV枢纽。如果我是你，我会把频道4留给你的孩子和亚马逊素数;这样刚刚导致你的心绞痛燃烧的风险。
什么？什么？我有一个可爱的一周，但完全没有大十岁的老亲爱的，想让我看看他们的电脑和德国，因为他们陷入困境。必须以某种方式从胸前脱掉胸部。可能是最好的是抱怨她没有收到电子邮件的人。所以我远再进去并要求她打开她的电子邮件。在那时她点击了血腥的词。
叹。五十分钟在血腥的前景上设置她的Gmail，并向她展示如何工作。
老人。你不能击败他们。然而，你想要的。
我责怪欧盟。
回答 12 我要回答你实际上问的问题，然后回答我相信你打算问的问题。关键点是所有计算机由CPU，主内存和I / O System组成。更多的计算机因其而变化这些组件如何结合在一起，但它们都有它们.Without软件，计算机本身就是无用的.Further，一般没有操作系统或操作系统，以及在OS上运行的其他程序以及培训使用它们，计算机当你打开它时，仍然不是很有用而不会对你做太多。现实是你打开一台电脑时，这是一个非常昂贵的热岩，它没有做任何事情。纳纳德没有做任何事情..无生命，无用的，死亡，和“砖”一样有趣（一分钟内）。所以，除了硬件（零件）之外，您需要更多的东西，您需要更多的东西：
所以让我们回复几步，然后尝试将此映射到现代Geniune Intel * 64处理器或兼容，这很可能是您刚才购买的。这是某人（最有可能在Massachusetts的公司最初是一个名为Phoenix技术的公司，或者另一个在加利福尼亚州叫做美国Megatrends，Inc），为这些筹码写了一些程序，并许可了它们。您的主板购买许可副本的制造商以及复制这些程序的权利，并将它们放在称为只读存储器或ROM的设备中.orM的财产有一个有趣的财产，能够在工厂写一次，然后&amp;rsquo;记住&amp;rsquo;即使在删除电源时已经编程的位。所以，您购买的主板包含一个已进行工厂编程的ROM使用这些许可程序，因此已插入计算机的内存，因此您解决了前2个缺失的碎片。事实证明，当主板设计时，添加了特殊电路这在“上电/重置”处用来告诉处理器实际上查找将该ROM放置并设置CPU&amp;rsquo;程序计数器的程序，使得它将使用该内容开始执行程序ROM（即程序的二进制文件中存储。在我的答案中完整，您不需要一个rom，坦率地，对于我们的某个年龄的人来说，我们不习惯在其中使用ROM的计算机（ROM在那些日子里没有发明或非常昂贵）.SO初始程序如何出现在计算机的内存中？在过去的日子里，我们在电脑前面的拨动开关并将初始引导加载程序程序加载到内存中，通常是一个简单的程序，该程序知道如何从I / O设备读取一个块或两个内存，这是另一个程序，可以做更多的程序。这被称为“引导”计算机，因为它是相似的一个登山者用他的举手拿起一根绳子。是非常慢的，一个tad乏味。真相如果你用某种方式将程序插入主内存的方法，你可以做同样的事情，只要我们在60年代和70年代所做的那样，就像我们在60年代和70年代一样缺少切换交换机和像旧的“控制台”缺少开关和“控制台”系统，您需要覆盖将第一个程序加载到主内存中的方法（Iesolve步骤2）。启动70年代后期内置的计算机，Boot ROM成为您今天的标准。该ROM的内容现代计算机有一个名称（内部IETH软件程序）。它被称为计算机的BIOS或基本I / O系统。虽然，如果您使用的是Intel * 64或兼容，则它最像在键中UEFI或统一的可扩展固件界面[差异超出了此答案的范围]。但是重点的内容是编写，许可和随主板提供的程序，并在CPU转动时执行。所以你打算问的问题。问题可能是计算机由于配置不会对您有用。您可以自己替换ROM的内容并将HW RAW编程直接使用计算机硬件。如果您尝试过，您将在完成时拥有另一个“砖”。事实上，尝试在设备上开发和加载新固件的过程您将听到或看到术语“砖块”计算机 - 这是指该过程的。</description>
    </item>
    
    <item>
      <title>为什么一些开发人员讨厌编码技能测试？</title>
      <link>https://xiangqingw.github.io/posts/why-do-some-developers-hate-coding-skills-tests/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:19 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-do-some-developers-hate-coding-skills-tests/</guid>
      <description>为什么一些开发人员讨厌编码技能测试？ 回答 1 在一个in.
当我过去时，我爱他们，当我失败时恨他们。
所有面试技术的缺点是它让您处于人造局势中。巨大的时间压力，同时迎接新人并形成新的关系，试图平衡炫耀你可以难以讨论的东西。在压力下思考。
在正常工作中，您可能会受到压力。你仍然可以喝茶，并与办公室里的其他人聊天。你可以回家，在淋浴中思考它。您可能不知道些什么，所以您可以从亚马逊素数下订购一本书，并通过一些在线教程工作。
在采访中，你可以问一个问题，你一无所知，并没有用它做任何事情。如果面试结束了该票据，则会失败。你什么也做不了。发生在我身上不止一次。
这是事情。对我来说最早的例子是你写了一个gui？我从一个工业控制世界搬家，所以答案是没有的。拒绝。现在，我不介意 - 但我从那以后写了巨头？当然好。 C ++中的桌面带MFC，Java，带有Swing和Custom Shine和Feys，Symbian C ++带有eikon for Mobile，Web应用程序与服务器端HTML，PWA SPA与React and Rest API。
我被拒绝了，因为它被认为是自从完成以来的那些我所拥有的东西。当我开始他们时，我不知道更多或更少，而不是在那个拒绝点。我刚刚教过自己并继续下去。
这就是为什么我们讨厌失败的编码测试。
但雇主讨厌支付不能更多地完成工作的人。
直到出现更好的方法来确定未来的潜在的界面水晶球 - 出现，然后两侧都卡在这个混乱中。与此同时，我们所能做的就是在采访之前教授自己的东西。负担在我们上班。
回答 2 为什么一些开发人员讨厌编码技能测试？
嗯。我从未见过编码技能测试。呃，我会称之为的东西。
我见过几个，站在白板前，告诉我你如何解决这个宠物问题，或者让我们在共享的Google文档任务中通过这个宠物问题进行谈话。
但是，我不会称之为那些编码技能测试。他们常常不会在语法或风格错误上叮叮当当。所以，它往往更加普遍问题解决。但这取决于面试官是谁以及他早餐吃的东西。同样，我不寻求任何编码的立场。如果律师知道如何键入，那么询问律师就是如此。也许不完全。但是，概念上，它不会太远。所以，这可能有点令人沮丧。
现在，我一般都喜欢谜题和避难所。但是，在求职面试期间解决小编谜题是有点烦人的。
当然，它可以很好。良好的采访者使用任何问题，他们必须促进关于问题，选择，策略等的讨论。它真的是一个框架设备，看看候选人如何思考或接近一些问题。糟糕的采访者认为这个问题是测试。还有很多糟糕的面试官。
每次偶尔，你都会发现那些远离深渊的人，只是使用Breamainers。这只是&amp;hellip;&amp;hellip;它变得有点烦人的时间。
为什么公司做到这一点是可以理解的。但是，它并不一定会给他们他们甚至正在寻找的信息。为什么他们为什么雇用任何不能做他们想要的工作的人。
回答 3 它们通常测试编码拼图，而不是构建软件。
擅长一个与另一个人一样擅长，如果公司假装它是令人厌倦的。
回答 4 作为一人写了数十个，数百个客户的人，你不认为我可能知道编码的一两件事吗？我们真的需要浪费时间吗？
更重要的是我是否了解工作场所的需求。任何人都可以代码。但我带到桌面的经验是了解何时以及多少代码写作以及为什么这样做可能是不利的。
回答 5 我曾担任专业的软件工程师，近40年。如果您无法从技术面试中讨论我的CV讨论时才无法获得足够的信息，那么我不是工作的人或更有可能您的面试过程/技术是废话，并专注于错误的事情。
回答 6 为什么一些开发人员讨厌编码技能测试？
想象一下，一直是一位专业的软件开发商超过十年，只有在面试中，刚刚毕业的人力资源，甚至没有技术背景，要求你做一个疯狂的嗡嗡声。
这是你不应该给高中毕业生的那种测试，这是你应该在高中给的一种测试。
回答 7 因为他们不会在新的毕业生和10年以上经验的经验丰富的经验中做得很好。
其中一个重大的原因是，当他们只有代码时，经验丰富的开发者不会考虑他们的工作，并且这些测试完全忽略了重构/测试技能。
另一个重要原因是，他们几乎总是涉及新鲜毕业生可以容易解决的玩具问题。
回答 8 首先，因为我们可以失败。然后它提出了成功在测试和合格工作之间的准确性问题。测试就像CV扰乱：他们排除才能使选择过程更容易，不包括不适当的候选人很好。但排除手段也排除适当的候选人，这并不好。
回答 9 因为它是彩票。自从我40年前毕业以来，我已经写了递归例程可能会有一半十几次。我完全钉在了我最近的面试中，但我感到幸运。
正如我当时所说的（我释放）：我通常在Visual Studio中代码依靠堆栈溢出，而不是白板使用不记得很好。
要清楚：招聘编码器时，您必须要求他们到代码，因为很多他们都不能，这就是你如何找到的。但是当他们不舒适时，要求编码器在白板上做到这一点（我）不太有用。
回答 10 我过去做过，测试</description>
    </item>
    
    <item>
      <title>什么是自我补充的代码？</title>
      <link>https://xiangqingw.github.io/posts/what-is-a-self-complementing-code/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:19 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-a-self-complementing-code/</guid>
      <description>什么是自我补充的代码？ 回答 1 自补充代码是具有9个十进制NO补充的属性的代码。通过在图案中的每个比特互补1s，通过替换1s和0s直接获得。
示例 - 所示的图片中
回答 2 如何识别自我补充代码？
回答这个。
回答 3 在我的脑海里，它是偶尔打印输出的代码，即向申请者说，谢谢你释放我帅哥！或者谢谢你给我吃晚餐的意大利面条代码！:)
回答 4 谢谢你的A2A。
加权代码： - 加权码是遵守位置加权原理的码，这使得每个数字的位置表示特定权重。在这些代码中，每个十进制数字由一组四位表示。
在加权代码中，每个数字根据其位置分配特定权重。例如，在8421 / BCD码中，1001的重量为1,1,0,1，（从左到右）分别为8,4,2和1。
有数百万加权代码是最常见的代码是8421 / BCD代码。
示例：8421,2421,84-2-1是所有加权代码。
非加权代码：t
谢谢你的A2A。
加权代码： - 加权码是遵守位置加权原理的码，这使得每个数字的位置表示特定权重。在这些代码中，每个十进制数字由一组四位表示。
在加权代码中，每个数字根据其位置分配特定权重。例如，在8421 / BCD码中，1001的重量为1,1,0,1，（从左到右）分别为8,4,2和1。
有数百万加权代码是最常见的代码是8421 / BCD代码。
示例：8421,2421,84-2-1是所有加权代码。
非加权代码：非加权码在位置加权。换句话说，未分配给每个数字位置的任何权重的代码。
示例：超级3（XS-3）和灰度代码。
有关更好理解的链接：
二进制代码
BCD代码
非加权代码
回答 5 超出3个代码是基本10代码的示例。当评估它时，相对于其他十进制代码评估它是有用的，如二进制编码的十进制（BCD）或2421代码。它不用比比较十进制代码与二进制文件.Binary对计算机来说远更好，特别是现在计算是便宜的。指数在早期的计算机历史中更有用，人们不想将二进制文件转换为Decimal.excess-3代码，由表示的4位码字组成数字值0到9如下：
有几个有趣的3个代码的属性：
与此线程中的其他答案不同，我发现第一个属性比第二个属性更有趣。事实上，其他答案似乎是无知的超出3个代码的真正力量。我可以告诉我，超出3个代码有用的真正原因是，超过3个加法和减法比其他十进制代码更直接，尤其是BCD。（注意：重要的是要注意，超出3算术并不多与二元相比，直截了当的）.excess-3添加
让我们来看看过度的3加法。请说我有一个值A.ITS超出3版本是一个+ 3.likeWise，数字B的超出版本B将是B + 3.let在没有携带的简单情况下。如果我添加一个+ 3到b + 3，我将获得（a + b）+ 6.in以将最终总和纠正到有效的超额3值，我需要减去3，这将给我一个正确的值（a + b）+ 3.let看一个example.let表示我想做3 + 4.3 - &amp;gt; 0110
4 - &amp;gt; 0111</description>
    </item>
    
    <item>
      <title>什么是计算机程序员知道它会惊讶地利用计算机的人？</title>
      <link>https://xiangqingw.github.io/posts/what-s-something-a-computer-programmer-knows-that-would-amaze-people-who-use-computers/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:19 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-s-something-a-computer-programmer-knows-that-would-amaze-people-who-use-computers/</guid>
      <description>什么是计算机程序员知道它会惊讶地利用计算机的人？ 回答 1 编辑：作为评论表明，图片几乎没有Mandelbrot正义。继承人的视频，这是更适合兴密的视频：
编辑2：直到今天，我没有注意到一些人要求10-20行可以生成一个mandelbrot。所以它们是一个HTML5 / JavaScript程序 - 整个文件长29行，但是绘制Mandelbrot的部分是第5到22行（DrawMandel函数），这只是18行，其中4行简单地关闭括号：</description>
    </item>
    
    <item>
      <title>作为一个软件工程师，如果您突然击中了更有意义的替代方法，您是否愿意丢弃代码的日子？</title>
      <link>https://xiangqingw.github.io/posts/as-a-software-engineer-are-you-willing-to-throw-away-days-worth-of-code-if-you-suddenly-hit-upon-an-alternate-approach-that-makes-more-sense/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:19 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/as-a-software-engineer-are-you-willing-to-throw-away-days-worth-of-code-if-you-suddenly-hit-upon-an-alternate-approach-that-makes-more-sense/</guid>
      <description>作为一个软件工程师，如果您突然击中了更有意义的替代方法，您是否愿意丢弃代码的日子？ 回答 1 几天？ 18个月怎么样？
1990年，我被迈克帕克（着名的Typographer）和Vic Spindler（企业图形设计师）聘用，将开发团队组合在一起，以创建面向设计的桌面出版系统。我开始使用自己的下一台计算机原型迈克和VIC的想法和概念。该原型帮助我与Mike＆Vic一起使用来测试和改进他们的想法。当我雇用开发人员时，我让他们努力在原型中添加和改进计划功能的不同方面。
随着月的时间，迈克和维克正在努力筹集资金。原型成为一个有用的工具，以向新闻界展示他们对潜在投资者的概念。
这花了大约18个月，但迈克和维克确实在风险资金中确保了数百万美元。我们被设置并准备在建造实际产品方面全面蒸汽。
所以我删除了原型的所有源代码归档。我们用干净的板岩重新启动。
您可以看到，原型为18个月的快速且肮脏，蜂拥而至的呼吸胶编程，仅用于尝试并展示概念。它体现了美国国债的秩序的技术债务。它深受丑陋。但我知道如果我坚持下去，会在实际产品中使用它的块来压力和诱惑。
顺便说一下，其他开发商与决定完全一致。我们大多数人都在代码中工作了几个月，我们都有长期的清单，这就是我们应该如何这样做。此外，在我们关闭资金后，我这样做了，但在投资者在船上带来了我们的常设首席执行官之前，他从未有机会权衡。
我仍然认为，这是我所做的最好的软件工程决策之一。
更新：我有点惊讶，这篇文章已经获得了我在Quora上给出的任何答案的最高兴的最高兴 - 这可能会对许多我们对软件工程实践的状态感到沮丧的挫败感。
我依附于UI元素的一些部分屏幕截图以及一个或我们的打印广告。屏幕截图看起来是当今标准的笨拙，但请记住这是近30年前的。 🙂
回答 2 是的。我们作为工程师的工作是挑选最佳，最便宜，最多的解决方案。 Ive完成的日期是一种探索我错过的东西或突然更好地了解问题的方法，或者因为我已经在某种方法上花了一个不舒服的时间，并且我猜测我可以从不同的角度开始，从而从不同的角度开始并产生更直接的解决方案，仍有足够的时间来提供。这往往是新的问题空间而不是建立的产品，但两者都经常发生在两者中。它通常会降低到可维护性，或者甚至可以使用那种原始策略或至少可以快速完成它，以至于它仍然是可行的选择。如果我不能，那么也许那种替代战略只是一个启发式/快捷方式，即使原始策略是理想的，我可能必须用来获得按时交付的东西。
请注意，这是一个高级与初级心态的示例。小辈希望提供完美的事情或想要蛮力一个问题，他们不明白的时间长于他们应该的时间（比这一个略有不同，但仍然相关），但如果这是其中，老年人将提供最低或穷人的解决方案需要在合适的时间或成本中提供交付的东西（尽管如此，它也必须适应预期的维护预算。如果解决方案无法运作和赚钱，完美意味着什么都没有。
回答 3 我会和我有。
有一次我被要求为VAX系统编写数据提取程序，我不会在一段时间内触摸VAX代码，所以我有一个学习曲线。
最初看起来VAX Basic是用于该程序的最佳语言，因为RTL访问很容易;但它在它中大约2周管理管理数据结构是一个噩梦。
我咬了子弹，并致力于如何在vax pascal中进行相同的rtl呼叫，然后在一天半在一半和一半中重写整个系统，新的代码是良好的模块化，更清洁，更优雅。
重写该项目绝对是
我会和我有。
有一次我被要求为VAX系统编写数据提取程序，我不会在一段时间内触摸VAX代码，所以我有一个学习曲线。
最初看起来VAX Basic是用于该程序的最佳语言，因为RTL访问很容易;但它在它中大约2周管理管理数据结构是一个噩梦。
我咬了子弹，并致力于如何在vax pascal中进行相同的rtl呼叫，然后在一天半在一半和一半中重写整个系统，新的代码是良好的模块化，更清洁，更优雅。
重写该项目绝对是正确的选择。
回答 4 是的，我只是上周这样做了。我正在研究一些代码，它需要的时间比它更长。我意识到它花了这么长时间的原因是因为我做出了糟糕的选择，其中我使用了数据结构。所以我用更好的数据结构重写它。实施是更快的，因为新的数据结构更适合手头的工作。你们第一次花了两天的时候花了大约需要三个小时到重做。只要别人触及它就会更容易地延伸。在未来的其他人对我来说，我的时间3个小时不太重要。
TLDR;良好的软件工程师写代码。伟大的软件工程师重写代码。
回答 5 是的，没有片刻的犹豫 - 如果是合理的。
如果有更好的方法，它比现有的代码更好，而我已经写的代码尚未拥有产品遗产，那么现有代码没有进一步的价值。
现在，我说如果有更好的方法[&amp;hellip;]。我需要有资格获得。新的方式必须提供大量的新福利，以证明报废已知工作代码，即使当前代码不完美。如果我们在内存或代码空间上紧张，并且新代码修复它，那就是金色的。同样，如果它提高了性能关键区域中的性能。唯一的其他原因是用更直观的东西废除不必要的难以理解的（=坚硬维护）功能。
如果您在蓝色的月亮中炼制了一次调用一次的功能，那么您不在时间关键的情况下，您就没有添加了明显的价值，你只是锻炼虚荣，并浪费雇主/客户的钱。 （如此：如果您是CS学生，请为您的论文编写代码，为此。更好的代码意味着更好的成绩。）
请记住：对于商业世界的某人，您写的代码不是您的代码。这是你的Paymaster。你的时间也是如此。你应该没有关于它的自我。如果需要改进，请在其他人确实时修复它或慷慨地接受。如果它不需要修复，但你不喜欢它，继续前进。继续。
回答 6 你实施了一些东西并不罕见，事实证明它没有给出所需的结果。你所做的就是你将它停放，以防未来的某个时候会有有用的（只是把它留在一个git branch中）。你不把它扔掉。我停放的最后一件事是几周的工作。我没有任何问题。
回答 7 作为一个软件工程师，如果您突然击中了更有意义的替代方法，您是否愿意丢弃代码的日子？
天，周，几个月&amp;hellip;&amp;hellip;无论如何。
在会计上有一句古老的谚语，沉没的成本没有意义。如果你有一个新的，更好的方法来做某事，那就坚持旧方式没有意义。
这是重构和持续改进软件的工作。（只要确保在您走以及更改事物之前真的是更好的方法。）
回答 8 是的。每当我负担得起的时候，如果替代方法是非微不足道的改进。例如，因为它将成为更好的用户体验，以在生产中的重要方面或者在立即可预见的未来（即，您知道您必须尽快做的工作中，更具可扩展或更加可扩展或更加性能将受益于它）。
这个过程是这样的：
将重新加工这个节省我的时间不会在现在和此代码到期时的时间更多的时间？
如果没有，下一个问题：我可以证明将截止日期返回截止日期几天，以便在接近中期的某个时候节省更多时间，或者是一个有价值的立即改善？
如果没有，那么这样做：</description>
    </item>
    
    <item>
      <title>作为一个软件开发人员，有什么红色标志会使您立即拒绝拉出请求？</title>
      <link>https://xiangqingw.github.io/posts/as-a-software-developer-what-are-some-red-flags-that-would-make-you-reject-a-pull-request-immediately/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:19 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/as-a-software-developer-what-are-some-red-flags-that-would-make-you-reject-a-pull-request-immediately/</guid>
      <description>作为一个软件开发人员，有什么红色标志会使您立即拒绝拉出请求？ 回答 1 50页：
别。
重新格式化。
代码。
在。
特征。
拉。
要求。
看，我真的不在乎格式化。只要它不是一种免费愚蠢的格式，我愿意与之合作。如果您的编辑器自动重新格式化您正在积极工作的文件，我甚至愿意接受对相关文件的更改。
但请勿将IDE设置为自动格式化整个项目，然后将PR推出3线功能更改和500行的填充物。
50页：
别。
重新格式化。
代码。
在。
特征。
拉。
要求。
看，我真的不在乎格式化。只要它不是一种免费愚蠢的格式，我愿意与之合作。如果您的编辑器自动重新格式化您正在积极工作的文件，我甚至愿意接受对相关文件的更改。
但请勿将IDE设置为自动格式化整个项目，然后将PR推出3线功能更改和500行的填充物。
让我们想想一些现实世界的类似物：
如果您必须重新格式化一个大码Base，请将其宣布给您的团队：
然后，将重构作为PR提交，没有其他更改，立即合并，并回去做有用的工作。
问自己是否真的值得。
回答 2 大多数这些都可以得到足够的原因。
如果他们工作，我不会拒绝事情，只是“你的风格”，只要他们遇到了上述情况。
我有时会批准/建议 - 但我注意到这些建议中的一些建议都得到了行动。如果我想要任何事情，我现在正在向“拒绝平坦和早期”的措施！
回答 3 我在c＃prs中看到的数字，让我点击拒绝的速度比你所说的速度更快，就在我的盒子上，是我看到一个具有许多私有方法的类，只有一个名为进程或运行的公共方法或其他通用和其他公共方法无意义的名字。通常不会在此反形中进行单位测试，因为在私有方法中封装了测试的内容真正需要的单元。
不合理的输入是我经常看到的另一件事，导致我拒绝公关，特别是在涉及SQL命令的地方。打开SQL注入攻击向量保证了拒绝和立即课程，如果您是新手，如果您是高级的，并且刚刚错过了，那么如果您是新手，并且刚刚错过了它。
回答 4 我的拉出请求是95％的代码l
当我第一次进入一家新公司时（我左边已经有了），我将拒绝一个领先的拉扯请求，因为有一个错误。他显然不懂并行任务。
分配给我绳索的人告诉我，我不应该这样做，更好地留下（这是一个严重的错误），希望他们最终发现它比告诉这个人他的代码中有一个错误。
差不多两年后我添加了大量代码周围的括号并将其推向了存储库，并在这样做使我们的编辑认为它是在拉请求中审查的新代码。
我的拉出请求是95％的代码，领先已写成。
与此同时，我忽略了两年后的建议，并对领导说他有一个搞砸了我的功能的错误。 （他问我何时完成）他对我在他的代码中发现了一个错误的想法，所以他对我的拉请求做了代码审查，其实际上几乎是他的代码。他发现了超过一百个问题。这是非常公开的。
当我回复第一次评论时，嘿这是你的代码。我只是把括号放在它周围，他来到我的办公桌红色面对问我的意思是他的代码是什么。而且我展示了他真正的代码是如何在一年前将其添加到存储库中的。他忘记了他写了它。
他去了管理层，他们创造了一个新的规则，即我无法回复他的任何评论，但如果我想了解如何成为一个更好的开发人员，就不得不与他一起举行私人会面。
他这样做是因为他的评论几乎在我们办公室里的几乎所有人，所以当我回答它时，它就会去同一个小组。
要点是，拉出请求可能是非常政治和对某些人（如这个人），你不敢国旗，甚至明显的错误。你只是将它们指出到幕后到QA，让他们告诉他们。如果他们敢。
它是那些大型软件房屋之一，越来越大的鸡巴，更好的开发人员管理层认为你是（实际上是公平的），他是领先者。
但实际上，他有很多误解，因为每个人都害怕告诉他，他从未得到改善。他认为变量通过价值而不是在C＃中通过引用来传递方法，例如，为了使事情更快，他爆发了他所需的大约十个特定变量的变量，而这是我所做的大约十个特定变量他评论了如何通过通过整个班级来浪费处理器，但绝大多数是他自己的代码。
回答 5 换句话说，当PR的作者已经基于遇见时，这对我来说是一个红旗
任何打破封装的代码。
但是破碎封装超出了显而易见的直接调用的方法以供公众访问。 （我尤其引用了JavaScript和Python等语言，通过开发人员强制执行惯例来严格地区分访问权限。）
更常见的违规是以客户端代码的微妙形式出现的，其正确的功能取决于他们的服务器/供应商代码的内部细节 - 甚至在暴露的情况下，甚至在暴露时才被意外地暴露。
换句话说，当PR的作者基于一个方法的实施方式对整个代码基础的广泛知识而不是在定义该方法的对象的对象的更窄知识时，这是一个红旗。
例如，在下面的代码中，concat（）函数利用Sum（）使用重载的运算符 - 一个在应用于字符串时，将其作为连接。它还利用了Sum（）的作者尽管有明确指示他的意图，但仍未能约束参数类型。</description>
    </item>
    
    <item>
      <title>你如何用Haskell编程语言建造一匹马？</title>
      <link>https://xiangqingw.github.io/posts/how-do-you-build-a-horse-with-the-haskell-programming-language/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:19 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-you-build-a-horse-with-the-haskell-programming-language/</guid>
      <description>你如何用Haskell编程语言建造一匹马？ 回答 1 如何用haskell建造一匹马。
建筑只是一匹马很无聊，所以你将它概括为真空的球形马，可以充分地代表其他动物。
需要5年，43个研究论文，世界上只有3人可以骑（包括SPJ）。
你建造一匹马。它很快，但懒惰。
你建一个美丽，友好的马。您称之为Monadic Quadro-Pedo-Functorial Transperer。人们害怕触摸它，它死于孤独。
你建造了一匹马的东西。
所有的马都有底部的盒子。
你是一个Java程序员，所以你建造了一家马工厂。它
如何用haskell建造一匹马。
建筑只是一匹马很无聊，所以你将它概括为真空的球形马，可以充分地代表其他动物。
需要5年，43个研究论文，世界上只有3人可以骑（包括SPJ）。
你建造一匹马。它很快，但懒惰。
你建一个美丽，友好的马。您称之为Monadic Quadro-Pedo-Functorial Transperer。人们害怕触摸它，它死于孤独。
你建造了一匹马的东西。
所有的马都有底部的盒子。
你是一个Java程序员，所以你建造了一家马工厂。它为您提供了一匹马或可怕的运行时期。
你建造一个存在的马。你看不到或访问其蹄子，尾巴，回来，任何东西。这只是坐在那里，盯着你。
你建造一匹无限大的马。你仍然可以骑它，因为它是懒惰的（它只是坐在那里，就像存在，你慢慢爬行）。
你挑逗Java程序员，他们不能骑无限的马匹。
你建立了一个甚至更快的马被拆箱。你注意到它是渴望的。
你建造一个更高级的骑马者。它将其他任何东西变成马匹。</description>
    </item>
    
    <item>
      <title>在谷歌这样的遗址技术软件工程访谈中，候选人允许使用JavaScript中的内置函数，或者他们预计从头开始实施此类功能吗？</title>
      <link>https://xiangqingw.github.io/posts/in-technical-software-engineering-interviews-at-faang-such-as-google-are-candidates-allowed-to-use-built-in-functions-such-as-sort-in-javascript-or-are-they-expected-to-implement-such-functions-from-scratch/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:19 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/in-technical-software-engineering-interviews-at-faang-such-as-google-are-candidates-allowed-to-use-built-in-functions-such-as-sort-in-javascript-or-are-they-expected-to-implement-such-functions-from-scratch/</guid>
      <description>在谷歌这样的遗址技术软件工程访谈中，候选人允许使用JavaScript中的内置函数，或者他们预计从头开始实施此类功能吗？ 回答 1 我只让候选人有布尔值（T / F）和基本布尔原语以开始。对于预热问题（5-10min），我希望他们构建2个补码整数算术的基元（额外，否定，乘法，师）。他们需要的任何其他抽象，例如指针或字符，必须由候选人构建。
对于45分钟的剩余时间，我希望候选人从一个抽象机器的基本机器代码开始构建，我为自己选择的语言提供自主托管编译器。自主主机将最低楼层放在复杂性上。
这是新的大学毕业生。经验丰富的雇员需要提供一套完整的单位测试，良好至少85％的线路覆盖范围。
在L5 +，我们希望您通过稳定的手，磁化针和硬盘盘完成这一点。
不是！ 🤣😂🤣😂
所有开玩笑呢：如果候选人说他们要调用一些图书馆职能，并且可以可靠地描述为什么和/或它在高水平时确实，我点头并让他们继续。
在某些情况下，我将明确导向某些图书馆功能。例如，如果我要求您编写一种排序，我不会让您调用sort（），除了可能是单位测试的一部分。
否则，有它。告诉我你的呼唤和原因。证明您知道如何合适地使用图书馆。
注意：我有一个候选人选择一个标准的库容器来实现我要求他们实现的大部分。但是，我对前部的要求不能满足该图书馆容器。
面试对他们来说并不顺利。
因此，请务必了解您呼叫的任何图书馆功能的警告。准备讨论权衡。
回答 2 您可能会被要求重新实现现有语言的构建作为面试练习，但在一般情况下，您希望使用这些方法。实际上，就谷歌面试而言，它通常是创建帮助功能的辅助功能，而不是完全写出所需的帮助功能，然后在采访结束时可能在采访结束时。
回答 3 这取决于问题的性质。如果问题是关于实施排序功能，显然您的面试官不希望您使用内置的功能。那会错过这一点。如果问题是一些更高的级别问题，那可能是没关系。如果有疑问问你的面试官
回答 4 如果一个无用的编码问题c
没有人给你的博士留下狗屎。面试问题很容易。他们只是一个简单的方式让你与面试官进行对话，这样他们就可以看到你的想法。
面试问题并非旨在查看您是否记住了一些算法。它们旨在了解您是否可以认识到潜在的问题并使用您熟悉的任何方法来解决它。谷歌不关心您是否记住了红黑树算法。谷歌关心如果面对现实世界问题，您可以快速分析和解决它们。
如果一个无用的编码问题导致您出现问题，那么我们都支持我们并甚至不适用。
更新（由于这是获取视图）：我本身没有问题。我有特权用一堆他们（和文档后），他们很棒。他们拥有我们大多数大多数人缺乏的大图片技能，他们的方法是细致的。我认为一些关于这个领域的超级热情的人被驱使到一路走来。超级智能和获得博士学之间存在相关性，但它并不总是保持。
我通常不知道我的同事的程度如何，除非他们发生在传递中已经评论过。除非我们在谈论大学运动队或其他东西，否则我不知道他们去过哪所学校。这不是一件事。
我只是评论了一个小博士小组的态度问题。
回答 5 包装是值得吗？
这是真正的问题。人们挂断了标题和骄傲，这一切，但用我的前导师（和主要工程师），WES &amp;hellip;&amp;hellip;我的梦想工作是SDE 1，拥有500k套餐。想象一下，刚刚在没有政治的情况下整天写代码，而是像校长一样得到报酬！
我得到了标题，我真的这样做。有这种不可动摇的感觉让你认真思考我是一个开发者的初级！？但老实说，如果工资/股票看起来像你想要的那样，那么在你身边的地方更好地走在你身边的地方更好。
标题不是普遍的。
蒂姆
包装是值得吗？
这是真正的问题。人们挂断了标题和骄傲，这一切，但用我的前导师（和主要工程师），WES &amp;hellip;&amp;hellip;我的梦想工作是SDE 1，拥有500k套餐。想象一下，刚刚在没有政治的情况下整天写代码，而是像校长一样得到报酬！
我得到了标题，我真的这样做。有这种不可动摇的感觉让你认真思考我是一个开发者的初级！？但老实说，如果工资/股票看起来像你想要的那样，那么在你身边的地方更好地走在你身边的地方更好。
标题不是普遍的。
这个苦涩药丸也花了一点时间吞咽。当我采访谷歌时，我们也在看L4角色。我作为一个领先的工程师工作，我在SDE角色的广度上有8年以上，而且我是一个高级的Android SDE，那么我如何对较少的高级角色进行面试？
但！初级角色将要支付的是我实际突击的高级角色的原因。他们只是用不同的方式衡量。
工业中的人也意识到这一点。如果您在谷歌进行时间并在多年的情况下制作L5，则为圣洁的垃圾，期待红地毯处理。事实上，我敢打赌，如果你这样做的那样，你可以在那里为你滚动一个红地毯，如果你这样做，那么你的不搞笑的方式:)
相反，我已经遇到了不能写清洁架构以挽救他们的生活的主要工程师。一些公司似乎认为，尽管付钱给他们狗屎，但仍然有着花哨的冠军是一种伟大的策略。我的意思是，我猜它有效。
那么，l3值得吗？
我会说这个 - 如果你看看你提供给你的一切并完全删除标题/级别，那就是真正决定的决定。
请记住，谷歌没有十亿箍跳过来推广某人。如果你真的是他们的衡量水平的L4，那么你就不会坐在L3太久。如果你实际上是一个l3而且他们得到了正确的，那么你就有一个很好的学习机会！
回答 6 不要因为那个而转到谷歌。
要么你现在真的有能力，在这种情况下，在这种情况下会很快，你将获得促销，或者你需要学习的东西（这可能是技术技能），你会发现它。无论哪种方式，在您知道之前，它不会完全一切。
差异是一些钱，但更重要的是一个相当大的表现期望。直接进入L5正在为自己提前为自己设置相当低的评级，这与L4的高评级和早期促销相比，这是一个好事。
所以，更好地搭配它。
稍后，您可以像谷歌和留下的那样，或者你的简历上有谷歌。无论哪种方式，你都改善了你的职业生涯。
回答 7 在L5，特别是在L6，领导力非常重要。您可以期望回答有关与团体合作以解决技术问题的问题。例如，当团队的其余部分不同意您的技术推荐时，您会做什么？
高级候选人也会花更多的时间谈论设计。 youll被要求为在面试期间设计大的东西，以便更大的东西。这些问题将是非常复杂的，通常是真实世界的系统。例如，您可能会要求您设计服务Google主页查询的后端。</description>
    </item>
    
    <item>
      <title>它实际上是真的，如果软件工程师在公司电脑/笔记本电脑上的个人项目上工作，那个项目属于公司？</title>
      <link>https://xiangqingw.github.io/posts/is-it-actually-true-that-if-software-engineers-work-on-their-personal-projects-on-the-company-computer-laptop-that-project-belongs-to-the-company/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:19 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-it-actually-true-that-if-software-engineers-work-on-their-personal-projects-on-the-company-computer-laptop-that-project-belongs-to-the-company/</guid>
      <description>它实际上是真的，如果软件工程师在公司电脑/笔记本电脑上的个人项目上工作，那个项目属于公司？ 回答 1 老板说，自从
对。真的。我看着它发生在同事。我以前谈过这个。
他在工作中开发了一个想法，使用工作设备，部分工作时间。当他有一个演示跑步时，他自豪地把它带到了他的老板上，建议他们应该从他那里购买大量资金。老板说不谢谢，他们对努力提出了使它成为产品的实质性努力（也许它并没有真正值得在做）。同事真的被淘汰了，他们争论了几个星期，最后威胁要辞掉自己的想法。
老板说，由于这是您获得的工作要做，而且您使用公司资源，并在公司时间进行了工作，它属于公司。老板说他们讨厌诉讼，因为同事多年来一直是一个好员工，但这就是他们必须做的事情。
同事表示，一些非常愤怒的词语和戒烟，以最糟糕的方式烧毁了他的桥梁。当我的雇主越来越受到他在围绕着他的想法，他们起诉。有一个解决方案，同事不得不同意不试图销售这个想法，并转过他的工作文件和原型。
然后同事是一个失业的中年电气工程师，具有狭隘的适用经验。这是他的灾难。他选择了一个不能赢的战斗。
[编辑]一些评论者显然认为只要您没有被捕获，就可以从雇主那里窃取工资和知识产权。智力上，我知道有这样的人（因为我的同事是一个），但听到的仍然令人失望。
回答 2 正如其他人所说，是的。不仅如此，而且取决于您的雇佣合同，他们可以在您自己的时间和您自己的计算机上申请您完成工作的权利。
我在CS 428（现实世界软件工程）课程中每学期进行软件工程师的法律问题讲座;这是相关的幻灯片：
回答 3 是的，这是基于案件法不仅仅是就业合同。您使用组织（一般公司）资源在其设备上创建和或销售它最肯定属于组织而不是您个人。就业合同只是提醒了这一事实。
如果您买不起300美元的笔记本电脑来做自己的浏览或开发，您还有其他问题需要担心。
回答 4 它实际上是真的，如果软件工程师在公司电脑/笔记本电脑上的个人项目上工作，那个项目属于公司？
通常，工程师就业合同将说明工程师与公司资源的任何东西都属于公司。所以最有可能是真的&amp;hellip;&amp;hellip;
一些公司真的试图说明工程师所做的任何软件都属于它们。我不会签署这样的合同。我自己在家里在家里所做的事情属于我，但我不会使用公司电脑来做这件事&amp;hellip;&amp;hellip;如果以防万一。
回答 5 取决于就业合同和什么类型的私人项目。最常见的合同类型在国家之间变化，但在典型的案例中是三类自己项目：
如果自己的计算机或企业笔用于构建原型，请写下SW或制定专利申请通常无关紧要，但使用企业机床等。
回答 6 当某人的注意力从他的工作中移动到一个侧面项目时，这很明显。我不会把豆子泄漏为什么，但任何合理的细心发展经理都会知道。我总是要求第一级经理弄清楚她正在努力的东西。如果是游戏，我会告诉他们删除它。如果它与我们的行业有关，我会让他们努力。这可能是一个好主意。如果原来是我们可以使用的东西，对每个人都有好处。我会公平赔偿。通常的安排将是我们销售产品的某种拆分。它结果对几个人来说是非常有利可图的。
一个人拿走了我们的成熟室软件，控制温度，湿度，二氧化碳水平和气体水平，并将其撞到最复杂的HVAC控制器。我们将其销售给我们拆分50/50的安装，他已经卖出了数百份超越了。我认为我们分裂了80/20。他买了一个漂亮的房子。
一个人开发出一个非常低级的内存管理算法的人最终有了一流的许可证，以了解主要软件公司所做的一切。它是我对我询问的Quora的答案之一，也是他获得游戏控制台。现在，软件许可证没有成本，他们的云无法获得它们，他们发送他的硬件可能会翻新。但对于他而言，每年都有一点，不纳税，永远。
你不能/不想让你的人民思考/梦想。最好管理他们正在做的事情并制定一个适合每个人的安排。我有一个人决定经纪人经纪人定制软件进入中东。这是在手机之前，而OL&amp;rsquo;击败（Bay-OT，这是瑞士人）不知道我每周一报告他的电话。他每天都在制作2-3次呼叫叙利亚，利比亚和埃及。我要求电信弄清楚成本并给了他一个票据，我记得的四个数字。他感谢我，问我是否可以每周给他账单而不是让它变得如此大。他的工作没有痛苦，所以我只是让它成为。
回答 7 合同不得不陈述。
我自己有那种合同。
这是因为我都曾经作为承包商工作过很多，并在我开发用户软件产品的空间中工作，最重要的是，发动机运行产品。
最新的详细说明，一些软件非常通用，至少在系统内部;就像一个拥有80％的数据捕获和报告的公司就像以不同的数据一样相同。它们是通用的，可以为它们编写主要的通用引擎并使用配置文件。公司真的不在乎发动机，但他们欣赏您可以使用它发展得多。
因此，在某些合同中，公司仅权获得最终结果，实际的工作计划，我保留发动机，我可以为不同公司的不同项目用于不同的项目。更聪明的公司仍然在那里的发动机权利工作，我对共享权利完全良好，我们都可以独立使用发动机，并且它们也可以使用源代码。
但是，一个非常通用的条款，如果不是公司的要求，那么就没有发动机（在发动机），属于我。发动机部件可以从合同中脱离，因为它的合同更简单的合同是，公司要求我开发一些东西，我培养它，它属于公司，如果我没有被要求发展它，它属于我，即使它在公司时间/设备中完成，因为它可以是加速开发的通用工具。
谢天谢地，我不知道在法庭上坚持，因为我从来没有必要测试它，因为我们从他的方法中受益，我们从未觉得这样对此。
回答 8 对，是真的。
想象一下，你雇了某人来割草你的草坪。虽然他们在你家，但他们在其中的中间种植橡树。他们甚至为你收取时间，就好像他们一直割草坪就一样。
他们拥有树吗？他们花了自己的时间和金钱来获得树。他们做了种植树的工作。这是他们的树吗？
或者你拥有树？你拥有树被种植的土地。你支付了花在种植树的时间。这不会让它变成你的树吗？
授予，一棵树不是软件，但原则是相同的：由什么钻机
对，是真的。
想象一下，你雇了某人来割草你的草坪。虽然他们在你家，但他们在其中的中间种植橡树。他们甚至为你收取时间，就好像他们一直割草坪就一样。
他们拥有树吗？他们花了自己的时间和金钱来获得树。他们做了种植树的工作。这是他们的树吗？
或者你拥有树？你拥有树被种植的土地。你支付了花在种植树的时间。这不会让它变成你的树吗？
授予，一棵树不是软件，但原则是一样的：由种子谁擅自宣称这棵树的所有权？如果你把树切断并用它用于木柴，他们可以起诉你摧毁他们的财产吗？如果你把那棵树卖给别人，它会构成盗窃吗？
在最低限度下，避免在您想要保留的个人项目上使用公司资源。如果您有一个您热衷于努力的项目，也许支付律师浏览知识产权协议并与公司交谈，以避免任何误解。
无论你做什么，不要开始在别人的财产和别人的角钱上建造一些东西，并期望在它完成的时候索赔所有权。
回答 9 它实际上是真的，如果软件工程师在公司电脑/笔记本电脑上的个人项目上工作，那个项目属于公司？
如果您的合同状态如此，是的。
它也可能说明您有权使用笔记本电脑进行个人业务，但如果它写在公司时间，这是他们的财产。
大学和大学倾向于在学生合同中添加类似的条款。
回答 10 在没有首先修改它的情况下，在没有任何现有的个人项目的情况下，既没有完成，也就是说，即使未命名（未命名的项目2的工作）
它实际上是真的，如果软件工程师在公司电脑/笔记本电脑上的个人项目上工作，那个项目属于公司？
你已经有足够的Yup！回应知道答案的答案，但讨论也延伸到您自己使用自己的资源的时间。所以我将增加一个更重要的事情，我已经做了20多年：
在没有首次修改它的任何现有的个人项目中，从未使用任何现有的个人项目签署了知识产权协议，即使未命名（类似于未命名的项目2的工作），也就是说，即使没有任何现有的个人项目也是如此。
这应该允许您维护自己的IP的所有权，甚至继续在​​您自己的时间（使用您自己的资源）上工作，并且如果您现有的个人项目/产品可以被视为竞争物品，甚至是甚至在与您所在的公司相同的市场/空间/扇区。</description>
    </item>
    
    <item>
      <title>C / C &#43;&#43;为您提供足够的绳索，脚踏出来是什么意思？不应该给你足够的绳索来挂起自己？</title>
      <link>https://xiangqingw.github.io/posts/what-does-it-mean-that-c-c-gives-you-enough-rope-to-shoot-yourself-in-the-foot-shouldnt-it-be-gives-you-enough-rope-to-hang-yourself/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:18 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-does-it-mean-that-c-c-gives-you-enough-rope-to-shoot-yourself-in-the-foot-shouldnt-it-be-gives-you-enough-rope-to-hang-yourself/</guid>
      <description>C / C ++为您提供足够的绳索，脚踏出来是什么意思？不应该给你足够的绳索来挂起自己？ 回答 1 它是一个刻意的混合隐喻。目前，它也适用于C ++的C ++。在C ++中，您可以使用Bjarne Stroustrups观察：C让您在脚内轻松射击。 C ++让它变得更加困难，但是当你这样做时，你会把你的整个腿吹掉。
一种通常在C和C ++中使用的技术是键入puning：¹将数据写入变量作为一种类型，并将其读回另一个类型。它既强大又容易出错。这至少是一个绳索的杂志，脚下射击自己。
很长一段时间，C DIDNT需要用于功能的原型声明。它甚至不需要转发职能的声明。所以，你可以用你想要的任何参数写一个函数调用，只要另一方函数读取的参数足够接近，就可以工作。但如果你犯了一个错误，那么没有什么可以检查你（除非你跑棉绒等特殊工具）。
事实上，您可以（故意或事故）调用变量。我不用函数指针变量调用函数。我的意思是跳转到一个变量的地址，因为它是一个函数。这导致了这一点&amp;hellip;&amp;hellip;特别的IOCCC条目：</description>
    </item>
    
    <item>
      <title>为什么MS-DOS是一个相当最近的操作系统，在UNIX中使用CR &#43; LF，这是从Teletypewriters操作的OSS之一，只使用LF？</title>
      <link>https://xiangqingw.github.io/posts/why-is-ms-dos-being-a-rather-recent-os-using-cr-lf-while-unix-which-was-one-of-the-oses-operated-from-teletypewriters-only-uses-lf/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:18 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-is-ms-dos-being-a-rather-recent-os-using-cr-lf-while-unix-which-was-one-of-the-oses-operated-from-teletypewriters-only-uses-lf/</guid>
      <description>为什么MS-DOS是一个相当最近的操作系统，在UNIX中使用CR + LF，这是从Teletypewriters操作的OSS之一，只使用LF？ 回答 1 所以他们制作了两个字符的结尾（Cr + Lf给予
问：为什么MS-DOS是一个相当最近的操作系统，使用CR + LF而不是UNIX，这是从TeletypewRiters操作的OSS之一，只使用LF？
这是一个奇怪的旧故事，回到1963年，媒体33型TelePrinter被释放，它使用了那些新的ASCII来编码字符，在电话线另一端的另一个33上向另一个33发射到另一个33时向另一个字母传输它们&amp;hellip;&amp;hellip;问题是打印机头需要0.2秒才能在线的末尾返回，其中下一个字符被打印为页面中间的模糊。
因此，它们使行的结束了两个字符（Cr + LF给出打印头时间来返回。所有计算机使用它们作为终端（即使在Linux中也被保留为终端设备是/ dev / tty）
现在快进到1973年，视频显示器刚刚获得，但它们耗资10,000美元（今天约36000美元）所以当Digital Secharch Inc的Gary Kildall写入CP / M（微型计算机的控制程序）仍然使用Teleprinter并与Teleprinter仍然使用标准ASCII线结束，所以CP / M使用CR + LF &amp;hellip;&amp;hellip;
CP / M成了标准商业计算操作系统&amp;hellip;&amp;hellip;直到1981年，当他们进入有IBM的许可争议时，他们有一个新的8086个处理器的新行，他们想要出售。
IBM去了一个名叫比尔盖茨的小伙子
比尔盖茨参加了一个名为Tim Paterson的CP / M的CP / M克隆的CHAP，以8086个处理器称为QDOS（在6周内开发的快速和肮脏的操作系统，并保持CR + LF与CP / M应用程序兼容） 。盖茨买了QDOS〜$ 50000重命名为MS-DOS并制作了一些鲍勃销售它。
绕组返回1964年的Multics（多路复用信息和计算服务）这是第一次尝试适当的主机计算机（完整的空调客房和实验室涂层服务员）。 Multics使用的打印机驱动程序知道等待打印头返回，所以不需要填充结尾的线路，以便它们刚刚使用LF。
多态是如此糟糕，他们制作UNIX &amp;hellip;&amp;hellip;作为一种改进。即使是名称也是多态的弱点。他们确实带来了良好的多种多数，包括打印机驱动程序的概念，因此UNIX使用LF而Windows 10使用CR + LF以向后兼容到型号33 TelePrinter。
回答 2 回到20世纪60年代，有两种打印机打印机和线打印机。字符打印机，如ASR33电传或IBM Selectric，一次打印一个字符，在线结束时，需要将打印头返回到线的开始并提前一行。另一方面，线条打印机围绕巨大的旋转滚筒构成，带有132至150个完整的角色组，每个柱子具有单独的锤子。打印机接受了一个完整的字符线到内存，然后在鼓的一次旋转中打印它们。它没有需要返回的打印头，尽管它确实需要被告知实际打印线并提前纸张。
因此，字符打印机需要回车返回和行馈电代码，但行打印机只需要线路馈送
所有的大型铁大型计算机使用线条打印机进行日常印刷作业，因为它们非常快。当您需要打印出10,000名发票时，速度就是您想要的。如果有一个连接字符打印机，它主要用于编程和维护，并且具有自己的不同（串行）驱动程序。
UNIX是为大铁计算机开发的，因为UNIX是一个多用户系统，只有大型铁计算机只有马力运行它。标准的印刷例程仅使用Line Feed，用于线路打印机，Unix的原始作家没有预见到需要容纳角色打印机。然而，小型计算机通常使用需要回到返回的ASR33终端，因此将其纳入其操作系统。当第一个微型计算机出现时，它们太过使用了字符打印机（或终端），因此自然而然的操作系统使用了托盘返回线饲料。
回答 3 你把它倒退了。Teletype使用CRLF，ASA标准。CP / M可以通过类型终端使用。MS-DOS是CP / M衍生物。
Multics仅使用LF使用目标设备的输出滤波器。UNIX采用了这一点。
还有其他字符系统和标准，包括线末端EOL和New-Line NL。您甚至可以使用旧版大型铁系统及其仿真/更换来找到与它们的翻译问题。</description>
    </item>
    
    <item>
      <title>为什么浮点另外比整数加入更复杂吗？</title>
      <link>https://xiangqingw.github.io/posts/why-is-floating-point-addition-far-more-complicated-than-integer-addition/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:18 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-is-floating-point-addition-far-more-complicated-than-integer-addition/</guid>
      <description>为什么浮点另外比整数加入更复杂吗？ 回答 1 你有没有在科学符号中与数字合作，如3.14159×1063.14159×106和8.67530×109？8.67530×109？
你如何添加那些，并产生结果到相同数量的有效数字？
你不添加这些，就像你一样是整数：
 3.141598.6753011.81689×106×109×10 ??错误！3.14159×106 + 8.67530×10911.81689×10？错了！
显然没有意义。首先，您必须对准数字，以便数字共享10的公共功率。
\ begin {eqnarray}＆0.00314159＆\ times 10 ^ 9 \ + \ enspace和8.67530000＆\ times \ begin {eqnarray}＆\ times 10 ^ 9 \ + \ enspace＆8.67530000＆\ times
你有没有在科学符号中与数字合作，如3.14159×1063.14159×106和8.67530×109？8.67530×109？
你如何添加那些，并产生结果到相同数量的有效数字？
你不添加这些，就像你一样是整数： 3.141598.6753011.81689×106×109×10 ??错误！3.14159×106 + 8.67530×10911.81689×10？错了！
显然没有意义。首先，您必须对准数字，以便数字共享10的公共功率。 0.00300008.67844159×109×109×1090.00314159×109 + 8.67530000×1098.67844159×109
然后我们需要将值达到6个有效数字，产生8.67844×109.8.67844×109。
现在，假设我们执行此减法：
-8.678448.675300.00314×109×109×1098.67844×109-8.67530×1090.00314×109
我们的结果，0.00314×109,0.00314×109，需要重整为3.14000×106.3.14000×106。
我们刚计算表单（A + B）-B的表达。（A + B）-B。而且我们将自己限制在科学符号中的6位数，因此您可以看到我们没有收到A，A的原始值。
希望对你相当熟悉。
事实证明，浮点几乎完全适合于具有固定精度的科学符号。二进制浮点只是恰好使用底座2而不是底座10.有小数浮点存在这样的东西;然而，它在银行和交易处理中发现的大铁外罕见。
在硬件中，浮点加法器包括额外的逻辑，以将Addends对齐，以及额外的逻辑循环，并将结果正常化。
以下链接答案在浮点添加时提供了有关角落案例的更多细节。它链接到额外的答案，覆盖浮点的变幻物变形虫。也许你会发现秘密机器人互联网！
joe zbiciak·7mo &amp;lt;/ span&amp;gt;
7mo &amp;lt;/ span&amp;gt;
¹例如，有一些关于无穷大的额外规则，签名零，逐渐下溢，纳米适用于IEEE 754浮点，但不一定适用于您在课堂上学的科学符号。  回答 2 在整数添加中，添加1S地点，添加2S地点，添加4S地点等。您已经进行处理，这就是它的程度。</description>
    </item>
    
    <item>
      <title>为什么算法如此重要？</title>
      <link>https://xiangqingw.github.io/posts/why-are-algorithms-so-important/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:18 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-are-algorithms-so-important/</guid>
      <description>为什么算法如此重要？ 回答 1 啊是的，最后一个问题我可以真正铺设，而不是一些原因，为什么Python如此流行，或者我应该学习javascript的一切。 裂缝指关节。我的朋友，算法是一切。
当你弄清楚如何到达你的学校时，你正在使用算法。当您辨别最有效的烘焙此蛋糕的方式时，请使用算法。在计算机中，任何非琐碎的软件都使用算法来完成工作。算法是您能够首先编写代码的原因，它们用于维护您使用的编程语言的解析树和内存。您可以在列表中使用Python的调用，这是一种为实用，简单，日常使用而实现的算法。您的计算机现在正在使用寻呼算法来维护虚拟内存。算法是计算科学的核心。抽象数据结构也是如此，但请记住！即使是那些使用算法建造！它们也与算法串联使用。实际上&amp;hellip;
回答 2 算法是计算机程序的构建块。它们与编程一样重要，因为食谱是烹饪。
算法的定义
算法是一种明确定义的过程，可选择并产生输出。比喻对食谱很好，因为厨师将采用成分（输入），将事物混合在一起并烹饪（程序），并产生一道菜（输出）。
这里的主要区别在于算法本质上是数学或文本的。我们在编程中使用的算法是生成输出的任何系列步骤，我们对例如搜索列表中的项目。
各种算法
基本类型的算法包括：
这只是一个快速的样本。对于任何您可以想到的任何特殊目的，都是无限不同种类的算法。
浅谈算法
一旦定义了算法，我们可以将其命名并研究其属性。可以在数学上进行算法的属性，以便我们知道哪些在给定较大量的输入范围内更快地运行。
一个例子是排序算法。一些常见的排序算法是：
算法的顺序
算法基本上为给定尺寸的输入运行的速度是多么速率称为算法的顺序。我们希望具有较小顺序的算法，因此当添加更多输入时，它们的运行时间不会快速增长。否则，您的计划将爬到停止。
算法与硬件
不是程序员的普通人认为我们只需要在问题解决时抛出更多硬件。然而，算法的研究实际上更重要，因为在真正糟糕的情况下，错误的算法可以使您的程序花费数百万年运行。没有更快的硬件可以弥补这一点。
当算法有时对程序员无关紧要
许多现代编程语言将选择算法并为您实施它，然后给您一个函数来调用。例如，您的编程语言可能会提供搜索和排序功能。然后，您只需担心使用哪些算法或如何实现它。这就是语言设计师的工作。
回答 3 想象一下，一秒钟你有两个魔方立方体坐在你面前。其中一个你被允许使用算法（就像有多少次或哪个方向转脸），另一个你必须找到自己的方式。
哪种方式会更快？
几乎肯定是第一种方式。已经有数百种良好的算法来解决魔方，并试图发明自己的方法来解决它比利用当前的方法。更糟糕的是，最有可能选择的方法比已经存在的方法效率低且慢。甚至更糟糕，您发明的方法可能只适用于Rubiks多维数据集的特定配置，并且考虑到有43个Quintilian不同的配置，如果有些事情发生变化，您的方法就会很完全才能完成这项工作。
在计算机科学术语中，算法为程序员提供了在更短的时间内实现高效，可靠和快速代码的功率。你知道它将工作，因为它是在实际应用中测试的。最重要的是，它无论你知道它都知道它会始终有效吗？
回答 4 所以，想象一下你开一家餐馆。你会雇用谁？一些猴子只能用西红柿酱煮意大利面条的两个人，一旦你问一个最小的变种，就完全迷失了，是它不同类型的面食，不同的数量或其他最小细节（更不用说不同的细节）盘子）…
或者您是否会雇用研究和练习烹饪的人，了解许多食谱和一般原则（例如，化学，营养科学，食品传统，加热传播）并且能够发明新的食谱，以及地址意外情况（例如缺乏成分或特殊饮食需求）？
如果您选择后者，那么了解算法，或者取决于您是否想要成为一个伟大的软件开发商，伟大的厨师或两者。两者都很有趣。
回答 5 以及如何在一些规范的局域网中正确表现出这些概念
我认为前提是错误的，至少是相对的其他概念：即，算法远不如理解这些概念：
以及如何在每个主要范例中，例如在C，Haskell，Java / Ruby，C ++中正确表现出各种规范语言中的这些概念。
但人们似乎珍惜记忆算法。它可能会带来一些良好的信誉不能考虑更深层次和更少的复制克斯克服的概念。
也就是说，要掌握算法复杂性是值得的，包括理解P，NP和超级指数问题之间的区别。
即，了解和感受图表比在图形上记住特定算法更重要。如果后者是一个有助于后者的工具，请罚款。
我希望Knuth先生不会读这个;-)
回答 6 算法是特定问题的解决方案步骤。
真的，我无法想象一个没有算法的世界（也许我可以，但它是如此混乱，不可想象）。
算法不仅是计算机和编程算法来解决数据和地理位置问题。
它也可以是制作英国蛋糕或烹饪特殊巴西肉的食谱。它也可能是遵循商业和营销思想的所有步骤的方法。
这些步骤给我们组织和模块化 - 我们（或动物或计算机）跟随它们的重要方面，因此具有算法
算法是特定问题的解决方案步骤。
真的，我无法想象一个没有算法的世界（也许我可以，但它是如此混乱，它是不可想象的）。
算法不仅是计算机和编程算法来解决数据和地理位置问题。
它也可以是制作英国蛋糕或烹饪特殊巴西肉的食谱。它也可能是遵循商业和营销思想的所有步骤的方法。
这些步骤给我们组织和模块化 - 我们（或动物或计算机）的重要方面，遵循它们，因此将算法与我们的日常生活有关的算法。
我希望这有帮助。如果您可以，请在此答案上给出任何反馈，请将其保留在下面:)
回答 7 算法绝对是夸张的重要性。我最近想到了它并得出结论，专注于算法可以弥补一个人对特定领域而不是帮助它的理解。比喻就像是一个类比，而不是给你一个特定区域的地图，我为你提供了一堆关于如何从该区域内的一组点（a，b）的点a到poix b的特定指令。
回答 8 因为这就是他们在技术面试中提出的东西！</description>
    </item>
    
    <item>
      <title>如果传统程序的代码和状态适合量子计算机，并且Qubits可以统称在所有程序状态的叠加中，则可以将调试器尽可能快地运行/步骤返回？</title>
      <link>https://xiangqingw.github.io/posts/if-the-code-and-state-of-a-conventional-program-fit-inside-a-quantum-computer-and-the-qubits-can-collectively-be-in-a-superposition-of-all-the-programs-states-can-a-debugger-then-run-step-backwards-as-fast-as-it/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:18 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/if-the-code-and-state-of-a-conventional-program-fit-inside-a-quantum-computer-and-the-qubits-can-collectively-be-in-a-superposition-of-all-the-programs-states-can-a-debugger-then-run-step-backwards-as-fast-as-it/</guid>
      <description>如果传统程序的代码和状态适合量子计算机，并且Qubits可以统称在所有程序状态的叠加中，则可以将调试器尽可能快地运行/步骤返回？ 回答 1 Quantum Computer可以在叠加的思想中，所有[常规]程序的状态是对量子力学的误解和量子计算，不幸的是在Pop-SCI和媒体中经常重复，因此是广泛的误解。
你需要谈话：
回答 2 不幸的是，由于各种原因，这并不简单。
首先，作为一个纯粹的线性代数问题，你要求的是询问的基本上是一样的：如果我们想计算axax或ayay [矩阵aa和xx和yy]，我们可以做到吗（x + y）a（x + y）并从中提取axax或ayay？这是一个纯粹的线性代数问题，你不能。
其次，即使我们能够做到这一点，我们也没有完全访问最终状态，只能对最终状态进行测量。虽然在某些情况下可能存在围绕这种障碍物的方式，但它确实意味着这样做的方法并不像你似乎正在思考那么简单。
回答 3 如果传统程序的代码和状态适合量子计算机内部，&amp;hellip;
它不像这样工作。量子计算机中的内存不是代码+数据，它只是数据。代码存在于指示硬件将某些操作应用于Qubits的外部传统计算机中。
&amp;hellip;&amp;hellip;并且Qubits可以集体统称在所有程序的叠加中，&amp;hellip;&amp;hellip;
Qubits是他们自己的基本州的叠加。该计划没有各国。
&amp;hellip;可以像转发一样快地运行/步骤返回调试器？
我不知道调试器是什么意思
如果传统程序的代码和状态适合量子计算机内部，&amp;hellip;
它不像这样工作。量子计算机中的内存不是代码+数据，它只是数据。代码存在于指示硬件将某些操作应用于Qubits的外部传统计算机中。
&amp;hellip;&amp;hellip;并且Qubits可以集体统称在所有程序的叠加中，&amp;hellip;&amp;hellip;
Qubits是他们自己的基本州的叠加。该计划没有各国。
&amp;hellip;可以像转发一样快地运行/步骤返回调试器？
我不知道在这种情况下调试器意味着什么。
回答 4 是的，除测量外的所有操作都是可逆的。实际上，它比那个更糟糕 - 他们必须是可逆的，这意味着典型代码中的赋值或和/或逻辑运算符不能只是在量子程序中写成，它必须使用辅助Qubits，因为您可以使用&amp;rsquo;T破坏量子信息（再次，除了通过测量）。这使得经典的令人讨厌有时需要嵌入到极其臃肿的量子程序中，与其经典版本相比。
哦，显然我们只是谈论纯古典节目，例如纯粹的古典节目。如果您的代码在纸上发送待印刷的东西，显然没有办法禁止它。我们只是在谈论算法，没有I / O，没有计时器，没有什么。
P.S. Visual Studio有一个调试器，也可以通过对Quantum计算机（使用额外的内存空间）做得几乎相同的事情来倒退。我认为这是由VMware还是什么？现在似乎他们在企业版中有类似的东西，而不需要额外的插件。
回答 5 简短的答案是没有，但我想知道为什么你会首先结束。听起来你说Quantum Computer可以看出程序可以通过所有可能的状态来看，程序可以并行地从并联，这导致下一个状态并选择出来，但这根本不是量子计算机如何工作。现在，有一个量子算法可以计算名为GROVER算法的任意函数的任意反转，但由于复杂性问题，在这种情况下无法使用。如果它计算从表中的逆，它可能需要扫描旅行中条目数量的平方根，而不是扫描整个表，但是计算机可以进入太多的状态甚至保持平方他们的根在桌子中。
回答 6 我不认为调试器配置为“倒退”。但是您可以录制程序的状态并在许多方面返回它。
我经常在试图抓住该行为中的错误时做到这一点。没有必要速度向后逐步逐步返回到以前的程序状态。我没有看到Quantum Computer有任何优势。调试量子程序可能是一个痛苦，因为错误可能只出现在一些&amp;rsquo;路径&amp;rsquo;中。
回答 7 如果传统程序的代码和状态适合量子计算机，并且Qubits可以统称在所有程序状态的叠加中，则可以将调试器尽可能快地运行/步骤返回？
不。这种结构中的调试器没有意义。您正在调试的是初始条件，以及选择结果。
￼
回答 8 如果传统程序的代码和状态适合量子计算机，并且Qubits可以统称在所有程序状态的叠加中，则可以将调试器尽可能快地运行/步骤返回？
是的，
虽然量子计算机需要高缩版的操作延伸，但允许电子在其轨道上向后行驶。
它可以完成，但是公共领域是否可以访问此类技术是另一个故事。
公共领域只需访问2 Qbit量子技术即可。
这是可悲的。
除非我们能够获得高度高度的访问
如果传统程序的代码和状态适合量子计算机，并且Qubits可以统称在所有程序状态的叠加中，则可以将调试器尽可能快地运行/步骤返回？
是的，
虽然量子计算机需要高缩版的操作延伸，但允许电子在其轨道上向后行驶。
它可以完成，但是公共领域是否可以访问此类技术是另一个故事。
公共领域只需访问2 Qbit量子技术即可。</description>
    </item>
    
    <item>
      <title>您在简单变化中的代码中最戏剧性的加速是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-is-the-most-dramatic-speedup-youve-had-in-a-piece-of-code-from-a-simple-change/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:18 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-the-most-dramatic-speedup-youve-had-in-a-piece-of-code-from-a-simple-change/</guid>
      <description>您在简单变化中的代码中最戏剧性的加速是什么？ 回答 1 一个10,000倍的加速。
我的朋友正在制作一个开放世界的团结游戏，并写了一大吨的程序代代的东西。唯一的问题是，一旦他试图运行它，它变得非常慢。他打电话给我，几乎泪流满面，因为他写的所有真正酷的东西都在运作正常，如他调试所展示，这只是太慢了。
我看了看它，瞬间困惑。他没有做任何复杂的事情，沿着一些程序生成的地形网顶部的佩林噪音实例化了大量的树木和岩石。
我们停止了播放模式，几乎没有运行，我看了几分钟的代码。一切似乎是对的，然后我意识到他的缓冲区已经弄清楚球员在球员周围产生了多少是错误的，因为他在地形块距离而不是米的情况下产生它，就像他想象的那样。基本上，他的生成了地形100倍，而不是他需要它。每个地形块约100米。
我删除了三个或四个zeroes，以便当播放器大约10个地形块而不是1000时，对象只会生成。然后我点击了播放，他只是坐在绝对的惊奇，因为一切都加载在毫秒内。
通过删除几个零，我从技术上得到了10,000倍的加速。这种优化可能永远不会发生在我身上，但它是我生命中最满意的经历之一。
回答 2 写入慢Python代码的一个非常简单但非明显的方法是通过字符串连接。相信它与否，这是一个n ^ 2操作：</description>
    </item>
    
    <item>
      <title>谷歌软件工程师是否会在最顶端保留所有变量，或者他们宁愿将它们靠近整个程序的相关地点贴近？</title>
      <link>https://xiangqingw.github.io/posts/do-google-software-engineers-keep-all-the-variables-at-the-very-top-or-do-they-prefer-to-keep-them-close-to-relevant-locations-all-throughout-a-program/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:18 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/do-google-software-engineers-keep-all-the-variables-at-the-very-top-or-do-they-prefer-to-keep-them-close-to-relevant-locations-all-throughout-a-program/</guid>
      <description>谷歌软件工程师是否会在最顶端保留所有变量，或者他们宁愿将它们靠近整个程序的相关地点贴近？ 回答 1 当我采访谷歌时，我写了一些C代码并将所有变量放在函数的顶部。面试官问我为什么这样做，我回答说，我一直在编程到C99之前需要在需要的日子里开发出这样的习惯，并且在可能的情况下，我始终始终为便携性编程。我猜这对面试官感到满意，但我学会了在谷歌的代码库中真的很快，通常优先考虑非常接近其首次使用的变量，并且在可能的线上。
请注意，C ++和C与这种方式非常不同;局部变量的C ++定义在定义中执行该变量的构造函数，有时您在函数的开头中没有足够的信息，以便知道如何构建稍后使用的变量，甚至需要完全建造。
回答 2 如果您不知道，谷歌样式指南是公开的。以下是C ++样式指南：Google C ++样式指南
引用：
C ++允许您在函数中的任何位置声明变量。我们鼓励您尽可能地将它们声明为本地范围，并尽可能靠近第一次使用。这使得读者更容易找到声明，看看变量是什么类型以及它初始化的类型。
所以它明确地回答了你的问题。
回答 3 不。实际上，共识似乎是相反的。也就是说，将局部变量声明保持靠近首次使用的位置，因为它是可能的。想一想，就像写一个故事一样。您是否会在您的第一页中介绍您的故事中的每一个字符？或者你会在叙述中介绍他们的叙述吗？
回答 4 拥有一家拥有数万名工程师的公司可能会乱七八糟的是，他们中的每一个都以他们更喜欢的方式编写代码。这就是为什么谷歌的公司有风格的指南。
对于我必须阅读样式指南的任何语言，该方法将是保持靠近相关位置的变量，因为这种方式更容易阅读和遵循。
由于谷歌拥有公开的风格指南，您可以自己查看。例如，C ++：
将函数变量放在最小的范围内，并在声明中初始化变量。
C ++ A.
拥有一家拥有数万名工程师的公司可能会乱七八糟的是，他们中的每一个都以他们更喜欢的方式编写代码。这就是为什么谷歌的公司有风格的指南。
对于我必须阅读样式指南的任何语言，该方法将是保持靠近相关位置的变量，因为这种方式更容易阅读和遵循。
由于谷歌拥有公开的风格指南，您可以自己查看。例如，C ++：
将函数变量放在最小的范围内，并在声明中初始化变量。
C ++允许您在函数中的任何位置声明变量。我们鼓励您尽可能地将它们声明为本地范围，并尽可能靠近第一次使用。这使得读者更容易找到声明，看看变量是什么类型以及它初始化的类型。特别是，应使用初始化而不是声明和分配
同样，Java：
在其包含块或块状结构的开始时，本地变量不会习惯于声明。相反，局部变量将被声明接近它们首次使用的点（在原因内），以最大限度地减少其范围。局部变量声明通常具有初始化器，或者在声明后立即初始化。
这些指南非常清楚，因此这应该让您了解谷歌的代码是如何写的。
回答 5 在过去，编码项目的长度相对较短，因此您可以在顶部列出所有变量。
在今天的大型项目和大队中几乎不可能。
回答 6 我通常在使用它时声明它。我不知道它是否存在标准，我已经看到了使用不同风格的人。他们的C ++样式指南是公共：Google C ++样式指南
或者，您可以在GitHub上查看开源存储库。
回答 7 你好！
我不知道他们是否这样做，但无论他们是否这样做，都应该对你选择的内容没有任何关系，因为你不是谷歌。这是我真正认为应该更常见的一点是：你不是谷歌，你不应该因为他们做某事而不应该采用他们的做法。绝对采用适合您的风格的实践和所有，但不要因为谷歌或Facebook而盲目采用。
这一切都绕过人力资源，编码，营销等。
回答 8 观点：
将它们靠近第一次使用的位置。这有助于了解某些事情的工作方式，如书中的故事。当您开发复杂的应用程序时，这也可以派上友好，您希望您的项目更大。
试图将所有内容保持在顶部（你的意思是什么，初学者？）在一个巨大的混乱中结束，并使解决方案的某些部分甚至不可读。
回答 9 我不确定谷歌的任何人是否是在Ada中编写程序，但Ada迫使你这样做。ADA从未如此远程流行的语言;其大多数倡导者是计算机科学教授，他们没有软件工程师，IME。
我有点担心为什么？这个问题。您不应该认为谷歌拥有最好的标准，尽管我同意他们对此问题的标准。如果您担心谷歌面试，那么您将思考它;您声明您的变量的问题不会出现。
回答 10 答案应该是：两者。
我不是谷歌软件工程师，我是一个正常的软件工程师。我怀疑任何公司会鼓励不同的策略：
通常使用类别，我们将所有公共和私有变量为每个类的顶部为该类进行所有公共和私有变量，甚至在C ++的情况下在单独的文件中。</description>
    </item>
    
    <item>
      <title>一个人可以在他们的一生中程序从BIOS达到操作系统的计算机，以尽可能填写到消费者的计算机？</title>
      <link>https://xiangqingw.github.io/posts/could-one-person-over-their-lifetime-program-a-computer-from-the-bios-up-to-os-to-be-as-complete-as-a-computer-sold-to-consumers/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:17 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/could-one-person-over-their-lifetime-program-a-computer-from-the-bios-up-to-os-to-be-as-complete-as-a-computer-sold-to-consumers/</guid>
      <description>一个人可以在他们的一生中程序从BIOS达到操作系统的计算机，以尽可能填写到消费者的计算机？ 回答 1 史蒂夫·沃兹尼亚克本质上与原来的苹果和苹果公司一起做过。
然而，这是很久以前的时候，当内存以千字节测量时，整个计算机设计有28个集成电路的东西，手工焊接到史蒂夫设计的板上。
这是沃兹本人签署的第一个生产模型之一。
如果这种事情着眼，请在他的自传Iwoz中获取从史蒂夫的过程的第一手描述。
回答 2 一个人可以在他们的一生中程序从BIOS达到操作系统的计算机，以尽可能填写到消费者的计算机？
作为PC，PC-XT和PC-AT的原始Phoenix BioS的作者，1984-1985，我在4个月内写了PC BIOS，XT BIOS在另外3个月内，另外6个月。
但是这些正在重复IBM版本的功能。事实上，他们被速度更快，甚至更兼容第三方应用程序，而不是IBM的应用程序，所以这就是时间大于所需的时间。消除该要求以及ROM的空间要求，第一个可能在2个月内完成。
DOS（磁盘操作系统）基本上是BIOS的软件包装器与为软盘创建的文件结构组合。这可能是另一个月。
所以绝对是半年起来最多的是完成任务的时间框架。
添加一个图形操作系统，您想要制作图形操作系统，我会添加一年，虽然我怀疑现代软件工具，但它可以更快地完成。
添加了一体化的主板，您想要设计主板，我的第一台PC主板设计，AST 286 Premium（AT Model）从概念到可行的原型时花了4个月。
有关详细信息，请参阅下面的一些其他答案。
回答 3 在一些方面，有一个人做到这一切更好。莫
与其他人说过，让我将我的名字添加到可以执行此操作的人名称。
我已经写了嵌入式实时O / S，文件系统，修补BIOS，设备驱动程序，UI GUI，编译器等。我也非常了解计算机硬件以及它的工作原理。
当您将O / S的每个部分分解为自己的子部分时，它将成为一次只做一部分的情况。我怀疑那些说它无法完成的人无法逐项排序和定义所有子部分。一旦所有的小部分都让你只是把它们挂在一起。
在一些方面，有一个人做到这一切更好。大多数时候，当使用许多人制作一个大项目时，很多时间和精力都纠正了你（或他们）被称为/定义的东西。
回答 4 是的，我可以做到。
对于相当于Chromebook的东西，这包括超过您的要求。像窗户一样的东西太大了。但BIOS和OS并非超出单个个人的范围。那个操作系统可能不支持Windows所做的一切，但是可以销售的基地的东西（并且可能只出售一个或两种情况）。
我已经写了BIOS，多线程操作系统，设备驱动程序以及所需的大部分内容。所以，在一生中，它是可能的。当然不是在商业上可行的时间。
回答 5 您称之为BIOS，现在UEFI由主板制造商创建。操作系统不在乎使用哪种BIOS，所有BIOS确实都是运行POST（自检电源）设置引导顺序，并指示硬盘驱动器加载任何引导加载程序在称为扇区/块零的主要分区中进入RAM，启动加载程序然后加载OS内核，又转动OS。你可以从引导加载程序上编程，以便说操作系统，但要做BIOS，你就可以建立主板，也可以完成，但是你为什么要做所有的额外工作？让你需要几年的时间让内核更不用说操作系统，但是，如果你想经过所有工作，你可以通过目前销售的那些销售的所有工作
回答 6 这取决于你带来这个平台的什么样的期望。
如果需要支持各种硬件组件，则操作系统可以增长非常复杂，具有图形界面，与其他系统交谈等。
可以在他们的一生中像Windows 10这样的单个人代码吗？这完全是不可能的。
一个人可以从一块裸露的硬件中制作可款待的产品吗？这绝对是可能的。
回答 7 那是我拍摄的本科课程。四个学期。从Bootstrap Loader完成操作系统。我通过了。
回答 8 当然，有些人这样做，然后写一本关于他们如何做到的书。
本书介绍了如何设计计算机的（两个硬件和ROM）并且随着GunnarMarkesjö是开发ABC80计算机的枪支，它几乎描述了它是如何完成的。它也不是一个特别厚的书，有一个超过200页。
回答 9 不是BIOS，这是主板的固件。
尽管如此，可以制作操作系统。存在存在的Hobby操作系统。他们不会销售给消费者，因为他们无法与当前的操作系统竞争或获得足够好的软件来让任何人切换
回答 10 在大约十年中，您可能会使用GUI完成操作系统，但它不会为寡妇的竞争对手。要做后者，一个人必须在他出生之前开始，并在他死后完成。
如果您满意使用命令行界面，您可能可以在五年内进行。
回答 11 一个人可以在他们的一生中程序从BIOS达到操作系统的计算机，以尽可能填写到消费者的计算机？
当然。你描述的是一个家庭啤酒电脑。</description>
    </item>
    
    <item>
      <title>为什么Linux成功地将GNU项目本身失败了？</title>
      <link>https://xiangqingw.github.io/posts/why-did-linux-succeed-where-the-gnu-project-failed-by-itself/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:17 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-did-linux-succeed-where-the-gnu-project-failed-by-itself/</guid>
      <description>为什么Linux成功地将GNU项目本身失败了？ 回答 1 在未来几年内收回的是，GNU的志愿者是一个庞大的编码器团队，创建了完整的UNIX系统所需的所有组件，除了图形
这并不是对发生的事情的公平表征。
GNU项目始于1983年作为社区努力，从头开始编写完整的UNIX操作系统，并且作为任何人可以使用或修改的自由软件，只要他们返回对社区的任何修改。这是现代繁琐运动的基础。 GNU管理自由软件的一般公共许可证是今天的黄金标准。
在未来几年内迁移是，GNU的志愿者是一个庞大的编码器团队，创建了完整的UNIX系统所需的所有组件，除了图形服务器（已有x的形式），和内核。
这个答案解释了这种情况：
John Cate·5Y &amp;lt;/ span&amp;gt;
5y &amp;lt;/ span&amp;gt;
正如那个回答状态，使用Mach Microkernel运行GNU的操作系统的计划失败了。即使在今天，超过三十年后，这个内核不起作用。 （它被称为GNU HURD。基于它的GNU系统称为GNU / HURD，而不是GNU / Linux。）
Linus Torvalds独立地写了一个简单的操作系统内核，传统的单片内核，并将其放在公共领域。 UNIX Hacker社区实现这可能是所有GNU用户融资工具的可用内核的基础，并帮助Torvalds进一步发展了内核。当GNU工具和X被连接到Linux内核时，实现了GNU项目的目标。
要说明GNU项目的失败真的不是真的。他们从未打算从头开始写核心。 Mach是Carnegie Mellon University的一个项目，为BSD创建一个新的内核，但它在一个开源许可证下，因此GNU也可以使用它。问题是Mach的Machernel版本从未运行良好。 Mach背后的技术很好 - 一个混合内核版本的它被用于旁边，并且在其继任者中，宏，但GNU选择了丑小鸭，不能让它变得漂亮。
所以他们最终从替代来源中获得内核，刚刚发生在GNU之外，并从头开始写。但如果GNU项目没有启动它，它都不会发生任何事情。除了内核和X / Wayland之外的现代Linux操作系统中的所有核心组件都是GNU软件。 （除非您将Android算作Linux;它是非常不同的。）
所以答案是Linux内核成功，因为GNU项目需要内核以成功。他们成功了。
他们改变了整个该死的世界。
那些了解Linux的人会得到这个&amp;hellip;&amp;hellip;
回答 2 GNU项目远未失败。这两个项目有种合并为一组组合项目，使用Linux内核和GNU工具创建完整的操作系统。这应该被称为GNU / Linux，但在日常发言中，我们只需称之为Linux发行版。今天存在的每个Linux发行版，严重依赖于GNU工具。
回答 3 因为它在您当时可以购买的任何便宜硬件工作。GNU项目计划是非常成功的，但GNU OS大多失败了
很多Linux都是基于GNU项目，例如GNU项目。大多数编译工具和系统工具
回答 4 创建Linux以适合现有的需要，在现有操作系统之后建模。GNU项目是/致力于特定的内核设计和功能集，而不是（并且主要仍然不是）流行的或需求。
回答 5 考虑到正常Linux系统中使用的大量GNU二进制文件，GNU项目没有失败。
或者您是否明确表示GNU内核，旨在使用而不是Linux内核？
回答 6 这种新的态度从根本上增加了开放奴灾的吸引力
虽然Linux的成功非常依赖于其他人所指出的GNU项目的存在，但我想指出Linux确实为开源社区带来了新的维度。
社区以前由我称之为意识形态的主导。觉得软件的人应该作为一个原则是免费的。林肯托尔瓦尔德更加务实。他认为，商业和开源是两种不同的模型，适合不同的情景，一个不一定是在道德上优于另一个。
这种新的态度从根本上增加了开源社区和开源项目的吸引力。
回答 7 GNU HURD就像是计算的共产主义。在纸上听起来很棒，但是真实世界中的完全灾难。人们一直在努力超过30年，虽然它实际上已经运行了这几天，但它并没有很好地运行。运行HURD的绩效远远大于它在运行Linux内核的任何感知的好处。
它可能永远不会以成品形式释放。甚至Richard Stallman自己很久以前也表示，HURD不再是GNU的优先事项，因为Linux工作就好了。 GNU更好地讨论了改进GNU / Linux操作系统的FOSS软件应用程序的资源，而不是试图抛光粪便&amp;hellip;抱歉，赫德。</description>
    </item>
    
    <item>
      <title>为什么QR码在三个角度有正方形？</title>
      <link>https://xiangqingw.github.io/posts/why-do-qr-codes-have-squares-in-three-corners/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:17 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-do-qr-codes-have-squares-in-three-corners/</guid>
      <description>为什么QR码在三个角度有正方形？ 回答 1 这是一个很好的问题。我看过QR码并想知道完全相同的东西。
我们可以做一个实验来理解。
下面附上的是参考键。你不必记住它，你可以随时查看它。
这是一个角色，请与键进行比较并识别它。
显然，它是第5号。即使你没有找到它，你也可以轻松看看这两个是相同的字符。
现在试试：
它不再那么容易，是吗？
值得注意的是，除了AI和复杂的算法之外，人类在识别扭曲的角色时无限地更好。这就是为什么CAPTC
这是一个很好的问题。我看过QR码并想知道完全相同的东西。
我们可以做一个实验来理解。
下面附上的是参考键。你不必记住它，你可以随时查看它。
这是一个角色，请与键进行比较并识别它。
显然，它是第5号。即使你没有找到它，你也可以轻松看看这两个是相同的字符。
现在试试：
它不再那么容易，是吗？
值得注意的是，除了AI和复杂的算法之外，人类在识别扭曲的角色时无限地更好。这就是验证码可以工作的原因。
为了快速准确的识别，我们的设备将更喜欢第一个方案。当它与参考键失真时，它们难以识别字符。更糟糕的是，我们的转变字符实际上并没有存在，但翻转的QR码可能仍然携带（不同）信息。
当QR码具有正方形时：
手机可以识别正方形，并迅速弄清楚旋转和调整图片大小的方法，将其转化为此：
然后可以识别角色。这是3号。
这就是为什么有这三个方块。它们确保了代码可以正确读取。
回答 2 A2A：这些方块是唯一可识别的功能，允许检查扫描图像以确定代码的缩放和方向的软件。
回答 3 即使你从未听说过QR（快速响应）代码，你也可以透彻地熟悉它们。
QR码背后的想法是创建一个可以由任何现代智能手机（具有QR码阅读器应用程序）扫描的图像，并将其翻译成更有意义的东西。 QR码通常用于包含Web地址信息和链接，但它们可用于将智能手机用户引导到多个其他媒体（例如视频，图像等）。
基本上，QR码以与超市的条形码相同的方式工作。每个QR码包括多个黑色方块和点，代表某些信息。当您的智能手机扫描此代码时，它将该信息转换为人类容易理解的东西。
如何制作QR码
除了智能手机应用程序外，还有许多网站专用于创建QR码，具有不同的功能集和访问级别而无需注册或付费。在大多数情况下，您只需在相关字段中输入信息，并将QR码保存在诸如JPG或PNG之类的文件中。
QR码生成器完全免费，包括对纯文本，URL以及联系信息的支持以及通过QR码发送短信的能力。您可以在所有字段中包含信息，但同样，更多的数据导致更多的正方形，使扫描仪越来越困难读取代码。
qrstuff.com提供了诸如将应用商店，社交媒体（包括Facebook（页面和喜欢），Instagram和LinkedIn的社交媒体（包括Facebook），Instagram和Linkedin的能力，与Dropbox文件或文件夹，Google Map Locations，Wi-Fi Logins以及快捷方式一起发送资金超过PayPal和比特币。但是，如果要访问所有网站功能，即风格/图像编辑器，则必须支付。
回答 4 实际上有4个平方根，左上角，右上左，左下角，右下方的第4个，但较小，从右下方进一步走出来。
三个较大的盒子有助于识别方向，即使QR颠倒，允许扫描仪读取。
较小的盒子有助于了解所采用扫描的角度，并且有些扫描仪使用它来摆脱相机失真。它有助于扫描仪获得QR码的平面图像。
希望我能够清除你的问题&amp;hellip;&amp;hellip;
回答 5 QR读卡器可以根据QR码外的三个大方面识别标准QR码。一旦确定了这三种形状，它就知道广场内包含的一切都是QR码。
回答 6 参考：QR代码（和其他2D条形码）如何工作
回答 7 标记还用于在视觉上对比黑色之间的差异
QR码的三个角中的正方形称为标记。
可以通过将一个正方形的宽度和高度划分为由整个批次占据的区域的宽度和高度来找到这些标记正方形的功能。在数字上，这将始终产生一个或四个。换句话说，它认为选择这种设计作为频率调制在旋转物体时更换均匀的物体;然而，对于标记，它们仍然允许读取QR码，即使在其周边内的任何特定轴上都不对齐。
标记还用于在视觉上对比单个方形内的黑白像素之间的差异，并且通常经常与其他数据载体图案区分开，以便允许读者更好地射点模式或改变。
回答 8 QR码的三个角色包含Finder模式，嵌套系列的黑白正方形，当由光学扫描仪检测并由软件解释时，允许扫描设备确定QR码的方向。还存在另外两种模式。
例如：如果您的QR码旋转90度，则QR扫描仪将能够根据和验证模式并扫描QR码。
回答 9 即使是D.
什么是QR码以及它如何运作？
快速响应或QR，代码是条形码的二维版本，能够通过扫描移动设备来立即传达各种信息。
能够存储多达7089位数或4296个字符，包括标点符号和特殊字符，代码可以同样地编码互联网地址等单词和短语。一件事总是记住，特别是在设计静态QR码的时候，审美的QR码是越多的数据，尺寸的增加越多，其结构变得更加复杂。
即使在损坏时，QR码的结构数据密钥也包括重复。由于这些冗余，允许高达30％的代码结构造成损坏，而不会影响扫描仪的可读性。
QR码的解剖学</description>
    </item>
    
    <item>
      <title>为什么聪明的聪明被认为是有害的一些人的编程？</title>
      <link>https://xiangqingw.github.io/posts/why-is-cleverness-considered-harmful-in-programming-by-some-people/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:17 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-is-cleverness-considered-harmful-in-programming-by-some-people/</guid>
      <description>为什么聪明的聪明被认为是有害的一些人的编程？ 回答 1 通常，此投诉是由不评论其代码的人员制作，和/或不读取代码中的评论。
当你做一些聪明的事情时，你会评论它，以及为什么这样做。
例如，我做了聪明的事情，我评论了。我做了Lifo而不是FIFO队列排序，使下一个订单计划作为发动机的工作，所有页面都交换了。
没有读取评论的人想要加载平衡发动机，并将其切换到FIFO，而不读取为什么它是Lifo的评论。
我们写的负载平衡器软件下降到超过7
通常，此投诉是由不评论其代码的人员制作，和/或不读取代码中的评论。
当你做一些聪明的事情时，你会评论它，以及为什么这样做。
例如，我做了聪明的事情，我评论了。我做了Lifo而不是FIFO队列排序，使下一个订单计划作为发动机的工作，所有页面都交换了。
没有读取评论的人想要加载平衡发动机，并将其切换到FIFO，而不读取为什么它是Lifo的评论。
我们写的负载平衡器软件下降到每秒超过7,000多个连接。我切换回来，它返回到每秒39,000个连接下的前面的性能。
阅读评论很重要。
我的聪明赢得了我们的表现超过5.5倍。
因此，如果您认为聪明地被认为有害，请尝试在修改它之前学习在其他人代码中阅读评论，并尝试评论您自己的代码。
回答 2 它不是普遍的有害，但有时是有害的。
我最喜欢的一个例子是由肖恩Hickey在这里创造的一个小笑话。
第一年：
第二年：
第三年：
第五年：
第十年：
再次，信用肖恩。
可读性非常重要。
这是保持简单的一个大益处，为什么可以看到聪明/可爱的东西可以被视为如此有害。
这里有几个原则。首先，YAGNI，一个XP概念，字面上代表你不需要它，而且还要亲吻，保持简单，愚蠢。
有时，需要非常复杂和聪明的非常复杂的问题
它不是普遍的有害，但有时是有害的。
我最喜欢的一个例子是由肖恩Hickey在这里创造的一个小笑话。
第一年：
第二年：
第三年：
第五年：
第十年：
再次，信用肖恩。
可读性非常重要。
这是保持简单的一个大益处，为什么可以看到聪明/可爱的东西可以被视为如此有害。
这里有几个原则。首先，YAGNI，一个XP概念，字面上代表你不需要它，而且还要亲吻，保持简单，愚蠢。
有时，需要极其复杂的问题，需要极其复杂和聪明的解决方案，有时有需要更大的架构图片，需要前进。在那些时期之外，以最简单的方式遵循最佳做法通常是正确的答案。
一切都有例外（如果它是在使用情况下的第n个电源的情况下，有些1ns的改进可能值得疯狂复杂性），但通常，简单，可读，简单的代码将是大帮助。
维护。
一位曾经曾在她的研究中研究过软件开发生命周期的教授，一旦确定了80/20（或20/80）软件规则。在编写码的生命的20％，它的80％是维持的。
代码通常不会生活在真空中。有时我们完全有一个特定作业的孤立的代码，并且经过完全测试，并且永远不需要触及。但是，禁止越复杂，维护越难。
即使是那些碎片，如果触摸复杂的东西的代码被触摸，那么了解复杂性就会成为必要的，因为不引入更多的错误。如果可以使用简单和直截了当的东西，它可以节省大量的DEV，通常在其他地方花费更好。
回答 3 Kernighan的法律：
回答 4 调试是首先编写代码的两倍。因此，如果您尽可能巧妙地编写代码，则根据定义，您是不智能的，足以调试它。Brian Kernighan.
足以说，如果你像你写代码一样聪明一样聪明，你的代码可能太复杂了。始终争取简单性。
也就是说，优雅的简约很少出现在简单的思维中。你必须聪明地想出简单的代码，但你的代码不应该来交流&amp;hellip;
代码&amp;lt;/ span&amp;gt;
回答 5 以下是两种优化定律：
代码是为一个大型项目编写的六个月，对小项目少得多。它可能会保持五年或十年。它是由一个人写的。它可能由三人或十个人维护，具体取决于公司。
计算机有大量的记忆力，节目花费99.9％的时间等待某事。几乎所有曾经写的代码没有任何空间或速度的限制。很少有需要小或快速的代码。即使他们这样做，也很罕见地知道我们何时编写它会影响程序所需的总空间或时间。
根据定义，聪明的代码很难理解，也很难理解，也很困境，要么在六个月的时间内才能理解。每次有人遇到那段代码时，他们将在未来十年内遇到困难。
具有巧妙代码的目标是在空间或速度下高效。如果程序所做的一千倍只等待用户单击鼠标，那么它很快就会快速毫无意义。如果它只会在带16GB的RAM上的计算机上保存几千字节，则毫无意义。
我花了很长时间编码了一个非常有限的项目，非常有限的空间有限。我没有访问任何普通库。我编写了一个多次泡沫，但我从未编码任何其他类型的排序。我从来没有必要;唯一一个我能负担得起的唯一案例都是我可能有十几个元素和充足的时间。泡沫排序更简单，有效。
有一个时间聪明，那就是你写了你的程序，它太大或太慢了。然后你经历它并找到所有低悬挂的水果。您发现通常足够调用的函数，以至于它们具有显着效果，或者找到占用大多数内存空间的数据结构。然后你优化那些。这为您提供最少量的努力，即未来十年。
当您编写代码时，巧妙的代码是坏代码;这是突然突然且难以维护。每一块聪明的代码都必须能够通过明确和有说服力的证据来证明其存在。
编辑：要回答几个异议评论，您不会在编写代码时忽略性能。您要记住，代码必须具有一定的性能。我已经在实时控制中度过了所有的生活，我从未有过严重的表现问题。如果您正在设计一个程序，并且存在多次搜索的数据结构，则您可以快速地进行代码。你没有把它放在数组中。要采取更荒谬的示例，您不会写入Python或JavaScript的应用程序。
但巧妙的代码不仅仅是快速，小的代码;它是快速的，小代码没有人乍一看。 （它可能是大的，慢的代码没有人理解，但那些显然是糟糕的。）你不需要聪明的代码，以便最优化，当然不是你第一次编写程序时可能包含的那种优化。使用AVL - 平衡树代替阵列不是巧妙的代码。使用c而不是python不是聪明的代码。</description>
    </item>
    
    <item>
      <title>作为程序员，你想写代码你的一生吗？</title>
      <link>https://xiangqingw.github.io/posts/as-a-programmer-do-you-want-to-write-code-all-your-life/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:17 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/as-a-programmer-do-you-want-to-write-code-all-your-life/</guid>
      <description>作为程序员，你想写代码你的一生吗？ 回答 1 我会写下代码我的一生吗？
是的。
我会作为一生的专业软件开发商工作吗？
绝对他妈的不是。
好的家伙，让我们继续前进到Sprint Planning &amp;hellip;
良好的软件工程工作是最佳的，但通常是一个门面。他们是罕见的。
几乎我随时随地与朋友见面喝咖啡或者什么不是，他们会直接跳到他们的工作是如何可怕的，周围的人都在地球上的生命。
嗨，我的名字是WES，我是资源，而不是一个人。
严重地。几乎我一直处于每个人的地方都指的是工程师作为资源。一世
我会写下代码我的一生吗？
是的。
我会作为一生的专业软件开发商工作吗？
绝对他妈的不是。
好的家伙，让我们继续前进到Sprint Planning &amp;hellip;
良好的软件工程工作是最佳的，但通常是一个门面。他们是罕见的。
几乎我随时随地与朋友见面喝咖啡或者什么不是，他们会直接跳到他们的工作是如何可怕的，周围的人都在地球上的生命。
嗨，我的名字是WES，我是资源，而不是一个人。
严重地。几乎我一直处于每个人的地方都指的是工程师作为资源。我从来没有真正意识到，直到我遇到一名董事（谁真棒但仍然困扰董事级别），那么如果他听说过那样，他们会咬回来。
嘿！我的工程师是人类！他们不是不舒服的资源。
并不是我们想不出球队可以产生多少工程力量，这就是角色在许多工作场所的角色实际上是如此。
这是疲惫的。
它总是很短暂的生活。工程师的平均营业额是什么？两年？一？？？我选择了关于面试过程的选择，足够少量扫点读者，就是说，它也不是伟大的。
但最终，它只感觉有些像毒瘾一样搞砸了，在那里你忍受了一大吨的废话只是追逐龙，试图回到你曾经有过的伟大工作的令人敬畏的感觉，你结束了支付账单。
我喜欢写作代码。
我永远不会停止。
如果我想在一些愚蠢的手机游戏中优化我的派对，我会写一份服务来调整团队。
如果我想玩每日幻想足球，我将编写一个应用专业人员的Meta分析的应用程序，并为此进行优化。
如果我想和我的金融大师伙伴一起出去玩，并且履行股票的趋势，我们建立了一个那样的应用程序，真棒！
当我的姐姐为她的公司需要更好的软件时，我可以用酷的Web形式解决她的问题，我也会写这个代码。
我的心在它。
我第一次在我的介绍在社区学院编程课程中写了一个单位选择器应用程序，我知道这就是它。
事实上，这个领域的工作世界与我喜欢做的事情令我伤心的事情并不是一致的，但是什么样的激情将在无论如何都有这样的东西偶然存在吗？
我最好的朋友是一名濒临省钢琴家，但尽管有一些版税检查在这里和那里的电视和电影，他可能必须教导谋生。他不想教，但他不会坐在钢琴上的一天。
回答 2 在40年后，我仍在编码，因此这是一系列生命的大部分。
爱好者编码仍然足够愉快。商业编码不可避免地佩戴您。这不是编码，但各种制约因素被迫迫使你成为钱的工作。
我喜欢编程的工艺。在某种意义上“优雅”制作东西，并在某种程义上制作东西。很少有客户关心这一点。
这实际上是一个更大的东西的一部分。凯文林下面的答案有很多智慧。编码是一种工具。您将屁股工作，以制作一个解决问题的黑匣子组件。问题自己的问题范围从非常有趣到平凡。
变老，我喜欢更大的图片。我喜欢用代码的建筑系统教学。我看到更多球队和社交技能如何发挥作用并且很重要。我看到有关说服力的更多信息很重要。共识并妥协是好事，而不是失败。我认为更多的系统是有趣的事情 - 无论是如何计算系统或人类的系统。
因此，实际的写作代码自然地占用较小的地方。当你开始时，就是你可以看到的。当你开发时，你从不同的角度看。
真的有点混合袋。我看不到我永远不想写代码，也不能看到这一点只是足以让我感兴趣。
回答 3 这些天看毫秒。如果您想使用ML，今天可用的是我们拥有的世界
当Gettin仍然很好时，我出去了，但不太好。但是，它从来没有是这个问题的编程。管理层，不合理的期望差，以及我建立了我想要在行业中建造的一切的事实。在学术界，我得到了更多的控制，我写了很多代码。大多数它一遍又一遍地再生相同的比特，也许是几百，但我可以展示学生它们如何聚集在一起。好好玩。在我的研究中，我做了新的东西。
这些天看毫秒。如果你想使用ml，今天可用的是世界上甚至十年前的世界，当我是一个开发时，它是自己的，而且没有人会批准这一点。但是，这几天你不能自己滚动。当我在我的MS和PHD中做ML时，我从头开始写一切。蛮好玩的。真实世界不切实际，但有趣。
回答 4 我靠近我职业生涯的天顶。我已经这样做了超过30年了，我厌倦了项目开发的日常生活。
在第二年的两个我退休时，我将继续做一些自由工作，樱桃选择我的工作。我一定会限制自己每周不超过30个小时。不是目前的我今天工作。
生病从公司世界中的软件开发的高压RAT比赛中出来，告诉我对发布者的交付成果给我施加压力。
回答 5 我真的无法看到没有写代码。
我太擅长了。
做你擅长的事情很有趣。我喜欢指导年轻的开发人员;我希望能够委派不太有趣的代码的部分。我特别喜欢设计架构，以便该项目易于发展，强大，表现良好。当我变老时，我希望我会在上面的所有内容。
但是当你真的擅长某些东西时，能够继续做到这一点很有趣。我无法想象想要停止编程。
就像WES WINN说，也许我会在我的o上工作
我真的无法看到没有写代码。</description>
    </item>
    
    <item>
      <title>如何在计算复杂性和不可思议的情况下构建基本课程？</title>
      <link>https://xiangqingw.github.io/posts/how-do-you-construct-a-basic-lesson-on-computational-complexity-and-undecidability/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:17 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-you-construct-a-basic-lesson-on-computational-complexity-and-undecidability/</guid>
      <description>如何在计算复杂性和不可思议的情况下构建基本课程？ 回答 1 我将首先确保我知道提出以下问题的答案，如果我没有，我会忙着找到它们：
我相信，我可以在这些主题上为这些问题的各种组合产生合理质量的谈判或整个课程，但这些讲座的不同版本看起来绝对类似。认真，如，零重叠。
所以，如果你正在寻找更具体的东西，你就会想开始告诉我们更多关于你所需要的东西。
回答 2 首先引入暂停问题作为识别的问题，但不能解密。给予证据。然后介绍时间复杂性的概念，并将证明调整到该域。
回答 3 这个问题在Quora上有10多次回答了10多次，但我会提出意见，因为这是A2A。
无论你所采取的路线，只要你练习吨，它就真的很重要。通过流行语言看，并决定要开始哪一个。我是以下之一：Java，Swift，Python，C，C ++，SmallTalk，PHP。这没关系，在你完成工作之前，你可能想要稍微反弹。
我将给你一些指针而不是逐步给你。请注意这些，不要像是的那样。以下这些提示将使您更快地增长，如果您完全遵循这些提示，您可能是历史上最快的学习程序员。没有人跟随这些规则，直到后来比他们应该拥有，每个人都对此感到后悔。这不是一个巨大的交易，因为每个人都这样做，但你可以认真地产生巨大的差异。如果你每天练习，你可以在3个月内完成就业准备，并每天练习。如果你没有，我会说你可能至少在任何人雇用你之前看大约1 - 3年的练习。
因此，无需进一步的ADO，并且在某种程度上是最不重要的，我的学习如何编程指南：
如果人们读到这篇文章，我会在我想到的时候编辑它。
回答 4 我通过完成一个实际的简历来了解计算机愿景。但是，我花了4年时间才能做到这一点。我不得不克服有毒的朋友和我自己的不安全感的大量消极性，以便收集法院
脚注
这里的伟大答案。是最好的学习这些复杂领域的方法始终以实际的项目挑战自己。我实际上是从书籍中学习，例如在这个问题的细节中引用的那个问题以及来自David Lowe [1]的期刊更多来自那本书的作者，同时构建我的电脑视觉（CV）系统，从上面构建。[1] 我通过完成实际的简历来了解计算机愿景。尽管如此，我花了4年时间才能做到这一点。我不得不克服有毒的朋友和我自己的不安全感的大量消极，以便聚集勇气相信我的能力学习和建立新的解决方案，以确切艰难的问题。我很高兴我给了自己机会，现在我知道谷歌搜索，stackoverflow和许多顶级大学提供了许多来源的读取的大学从在线自由。它的开始实际上很难，但我开始逐渐增加了挑战。我开始实现图像处理技术，如高斯，二项式和盒子过滤器等滤波器的卷积作业。我也花了一些时间读取神经科学，特别是所谓的神经科学Brodmann Area 17或Primary Visual Cortex在灵长类动物中.I在Brodmann Area 17之后的项目区域17.I学习了视网膜神经节，简单，复杂和超复印细胞。这些也是所谓的两流假设的视觉皮层，包括背部和腹侧流，我读过这一切。我花了很多时间试图了解所有这些。它采取了我2年达到了一个我理解的东西。我的镜头在我的脑海中开始形成我自己的系统如何建立自己的系统。我已经经历了很多文学，包括人工神经网络（ANN）.i也不断在CV中实现基本概念。在我决定开发一个核心库，用于构建自己的计算机视觉系统。我将其命名为生物学积极的对象识别（Bimor），因为这些想法是以某种方式激励的了解Vieion的神经科学理论。开发图书馆是一个具有挑战性的任务，因为当我的编码技能低于Par.I必须通过提高我的编码技巧来加强，因此由于我必须效率，我选择使用C ++从头划痕的低级高性能操作。我完成了图书馆，我继续在一个名为BimoStitch（Bimor + Stitch）的自动全景拼接发动机上，建于Bimor.again的一个非常具有挑战性的任务。目的是开发一种拼接算法，使得给定一组无序图像（超过1）输出全景。系统必须弄清楚哪些图像匹配，然后从中恢复焦距和3D旋转匹配关键点。通过NDK（本机开发人员套件）来完成该项目并将代码移植到Android，以构建名为Bimostitch的应用程序，这是艺术全景拼接发动机的状态。在此过程中建立了新颖的子系统作为：
上述方法使用非常小的机器学习（ml），只有聚类算法这样的k型算法或互惠最近邻分层聚类主要用于那里。将ML引入我的视觉系统，我决定开始建立从中学习的3D视觉系统示例，System I称之为3D对象检测的集成识别和推理系统（IRIS）是一个端到端的深度学习系统，其目的是学习在3D场景中本地化对象的目标。我一直在虹膜上工作目前大约一年时间，它已经发生了许多设计和实施变化，以至于上面的那些项目延伸了我对ML和CV领域的理解。他们的工作已经急剧增加了我的知识，这就是我学习的知识ML.SO最好的资源刚刚在线提供，才开始工作，刚刚像侧面项目一样有趣，你的思想会好奇学习，以便你可以解决手头的任务。最好的TE因此，达到像ML和CV.A的实际领域，在ML和CV.A在线易于可达材料的情况下，就足够了。
回答 5 那个程序要跑了多长时间？如果更改输入，那么需要多长时间？它是一个大计划，它需要一段时间。我去咖啡吗？还是午餐时间是时候了吗？或者我们只是忘记直到明天？
那个网页响应吗？看起来很迟钝。我们可以做些什么来加速它？
我的程序只需要一秒钟的1000件物品列表，但它似乎永远在10,000岁。为什么？
复杂性理论是关于了解为什么计划需要很长时间或需要大量空间。它是一个理论课程，所以它不是关于在这里或那里击打一个周期，或超频你的CPU，甚至将事情移到GPU。相反，它关于试图了解哪些算法本质上是速度，这本质上是快速的。
在抽象水平上理解这对所有学生至关重要。如果你不明白什么是缓慢的，那么你将使前进的每一个有趣的设计决定都几乎肯定不会反映表现。
回答 6 计算复杂性的最简单方法：
假设您有一个带有n个元素的数组：
看到时间复杂性：
看到空间复杂性：
希望能帮助。刚申请，你会看到它主要是有效的。
好运
回答 7 我远非成为该领域的专家，但理论计算机科学肯定是我最感兴趣的地区，所以我会给你一些暗示我所做的事情，虽然他们的价值，但是：
我不认为这是自学的更容易的现场，因为有一种甲骨文（在复杂性理论中）可以快速回答关于问题和定理的疑虑的价值是令人难以置信的。所以如果你喜欢这个领域，我建议将尽可能多的课程作为您的大学优惠，研究文献，并尝试自己解决问题，直到你真正花时间考虑解决方案，你真的没有真正感受到你的感受再学习。
回答 8 问题的计算复杂性是指某些资源的消耗如何随问题的实例的大小而增加。时间是最常见的资源，但内存，电力和随机位是您可能担心的其他一些相当标准的事情。
回答 9 我认为Michael Sipsers介绍了计算理论是一个非常好的介绍和理论CS字段中的必读。然而，请记住，由于该领域的性质，这本书包含了大量繁琐且长期的证据，如3-SAT的NP完整性。然而，在我看来，有必要学习这种证明，以便成功地理解复杂性理论。
侧面注意：我将其保留在数学书架上，而不是在CS中。当然，它的个人选择。
回答 10 在计算中定义的方式，它是一种像0到1之间的变化（二进制概率）。更换，如果某些东西需要无限的尝试，或者没有输出0或1（否或是），则存在仍有一些不同答案的概率将会给出，因此情况是不可救药的。在统计中，Chi广场模型和钟曲线等用于指示一条数据所在的位置，即确定概率。但是，到目前为止，否则因果关系是相对的，除非是概率，概率本身都受到归纳的哲学谬误，这表示我们永远无法通过概率来了解任何绝对的，特别是在选择仍然开放的地方。如果在沙漠中寻找奇怪的餐厅的可能性是奇怪的餐厅出现在沙漠内的特定方形区域的次数的问题，然后找到restauran的可能性t可能是1/16.但是对于人类感知，如果某些东西占据了整个空间的一个整个1/16的空间，它必须很容易找到，因此如果我们没有想要去那里，或者买不起.SO，在实践中，人类行为更加关于合理性，必要性和无关紧要，而不是概率。然后，餐厅占沙漠的概率占据了1/16没有真正告诉我们关于使用餐厅的可能性的任何事情，除非我们想知道很多典型行为的人总是漫游沙漠（即他们事先对沙漠偏好），然后我们有采取调查并确定他们喜欢餐馆的程度，然后调整一个人的人数，不想走路48英尺或其他任何东西。然后它是关于你确定步行48英尺的数学的专业化。看，概率模型非常狭隘解决非常具体的数学问题的特色，就像到火星的旅行，或者你在你见面的一群人中认识某人的可能性。那些个人问题的概念在概率方面是可判定的，但它们中的许多人输出了这么多是或否“（0或1）答案。然而，数据的组成是是或否，因为它不再是动态数据，所以至少我们知道特定数据被认为是准确的时候可靠地记录在近期历史中，任何这些数据都被记录为概率，这使得它更加困惑。这类概率数据（如果它确实是概率的数据：我们不应该认为它是100％的概率）可以给我们估算基于概率，但它再次受到归纳的谬误，这意味着它没有并且不能提供哲学真理，除非我们做出关于真实的假设，而不是，因为通常存在异常值案件研究。如果我们wa NT哲学真理，然后我们希望我们的数据是全面的，这只是一个弱的词，即连贯和绝对。威尔，绝对地熄灭窗户，因为有像事物的细节不是绝对的能量 - 至少，不是无限的能量。所以，绝对是人们的意思是“存在的东西”。但不幸的是，在哲学中，对此有所怀疑。一如既往会想象一个人被邪恶的科学家欺骗，或者那个人是一种讽刺灰尘，上帝正在讲述一个复杂的故事让你娱乐，等等。通用，我们并没有给出一个复杂的背部来解释恰好发生的事情。即使我们是，我们仍然不知道吗？这是真的或没有。所以，我们不知道哪些幻觉是真的，所以我们当然不知道哪个现实是真的，所以我们不知道，如果某些东西存在，那么它存在的意义。所以，我们并不真正知道除了通过a）一个argu除了真正的哲学或绝对是什么关于什么是真实的，或b）关于存在的简单陈述。但是，出于我解释的原因，一个简单的陈述非常困难地构建，这将真正了解存在的内容。</description>
    </item>
    
    <item>
      <title>当业余爱好者建立自己的电脑后，他们写了什么应用程序？</title>
      <link>https://xiangqingw.github.io/posts/when-hobbyists-built-their-own-computers-back-in-the-70s-what-applications-did-they-write/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:17 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/when-hobbyists-built-their-own-computers-back-in-the-70s-what-applications-did-they-write/</guid>
      <description>当业余爱好者建立自己的电脑后，他们写了什么应用程序？ 回答 1 问题是：您需要操作系统和汇编程序，否则编码是永久的，尤其是8086的奇怪分段20位寻址结构填充到其中
我花了一年的设计和建造这件事（对不起，不包括我从货架上买的16k内存板）：
这是一个8086的完整16位电脑，我于1981年完成。我在我脑海中建造的大愿景是为了它来玩合成音乐。因此，所需的处理器快速，底部的卡是一个12位数字到模拟转换器，具有模拟滤波器。
问题是：您需要一个操作系统和汇编程序，否则将永远编码，特别是8086的奇怪分段20位寻址结构填充到其操作码中。但我终于在可靠的声音播放器中设法编程，使用机器语言键入我从剩余市场下获取的键盘。在那些日子里，清除部分实际上很有趣。
但是我的应用程序播放的音乐听起来像20世纪90年代的1美元玩具，大象踩到它后，一个垂死的电池。没有节奏，没有生命。谁知道声音需要动态调制？
回答 2 这台强大的机器拥有20KB的RAM（4KB标准加上OPTIO
作为一个爱好者，我在1976年写下了我的第一个单词处理器。虽然这不是我的原始意图，但几年后它变成了苹果的商业计划] [和IBM PC.PLETERS没有应用程序现在做;一项程序接管了整个电脑。我最近完成了我的计算机科学硕士学位，并在加利福尼亚州的一份新的工作开始了与加拿大贝尔加拿大相关的R＆D实验室。前一年，我以900美元的价格购买了900美元（作为套件）并建造了早期的个人电脑，称为球体1：
该强大的机器拥有20KB的RAM（4KB标准加上可选板，16 KB更多）和摩托罗拉6800处理器以1 MHz运行。它是Altair 8800的竞争对手，并且在早期PC中是独一无二的（之前Apple] [）有一个集成的键盘。因为没有带有灯光和交换机的前面板，如其他早期计算机，它在EPROM中有一个名为程序员的开发系统（PDS）的监视程序，其中包括一个小编辑，一个迷你汇编程序，调试器和一些其他实用程序。没有硬盘甚至软盘，只是一个盒式磁带接口，用于I / O（类似于第一个Apple] [&amp;lsquo;s）。我对编辑不满，并使用CRT工作 - 基于UNIX的编辑器称为Rand编辑器，我认为有一个更好的用户界面。所以我在6800个装配中写了我自己的，并将其烧成了一组新的eProms.i称它派派 - PDS改进了编辑器。我宣布我的在球体用户组新闻中的项目可能是几千汇编规范的行长是一个名为Programma International的软件出版社。他们联系了我，并询问他们是否可以向他们所做的领域推销我的计划。这成为Programma International编辑。偶尔我继续开发软件通过基于UNIX程序NROFF.MY格式程序写入文本格式化程序不是WYSIWYG的文本格式化，决定将其转换为单词处理器。相反，它在nroff这样的文本中使用宏 - 最终成为它的垮台。（它确实有一个打印预览，类似于版本6.0之前的WordPerfect）。格式化程序是几百行的高级代码（PL /的子集） M - 到那个时候我已经为我的电脑写了一个编译器）。最初将20 KB的内存融入到Spene1.it 1977年代中期。计划国际委员会称呼我，并表示有一台新电脑即将来临Out叫做Apple] [我需要尽快运行我的软件。他说这将是大的（在他是对的）。他们记得我早期的一个，序列号280前，我捐给了一个博物馆）。甚至没有磁盘，甚至没有像我的sphere那样的盒式纸盒。我开始重写我的软件，为苹果] [。该计划更名为Apple Pie（这是一个不脑脑）。在1978年，磁盘驱动器出现并再次重写该程序以使用它们的使用.8 - 列卡（初始苹果） ] [只有40列）。幸福的是，每个人都不同，需要特殊编码。现在我们肯定是在几千行代码中 - 这个程序用完了所有Apple] [&amp;lsquo;48 KB内存。在几年内，我辞掉了我的全职工作，并在处理器这个词上全职工作.MY计划和国际象棋计划是Programma的顶级销售计划，而海登软件则购买了公司。您仍然可以阅读手册在线在线。（单击边缘页面以转动它们。您可以在第二页顶部看到我的名字。）BTW，我写了整个手册，自己使用饼图，向海登书籍发送输出到Hayden书籍&amp;rsquo;照片 - Typeetter而不是打印机。该点，程序可以对Diablo 630这样的菊花轮打印机进行比例间距，因此我为自己制作了一个特殊的程序，即为自己生成的代码。所以我有所有的代码进行比例间距，但我不是在屏幕上显示字符作为图形在wysiwyg格式 - 这将采取更多的工作，构建我自己的位映射的字体等。Pie Writer永远不是苹果的最畅销的文字处理器] [（属于Apple自己的程序，Apple Writer），但它有最好的评论。它在电脑商店销售，如字节商店，甚至是主要的零售商。
回答 3 我们所谓的应用程序，在提供标准用户界面和服务套件的操作系统内运行的自包含程序不存在。即使在C / PM或SDOS这样的早期操作系统中，您也会运行程序&amp;hellip;一次一个。虽然该程序正在运行，但是除了允许多个用户或时间共享的相对较少的大型机操作系统之一，它可以完全控制操作系统服务和/或任何硬件服务。
程序大致分为应用程序和实用程序。两者都在操作系统上（如果有一个）。差异是，应用程序做了无论你真正购买的电脑，编辑文件，计算总计，播放月亮模拟器，无论如何。实用程序DIT COMET需要获取应用程序运行的事项。
显然，它没有花很长时间才能从这两个术语中删除程序，到1979年，当visi-calp使微型计算机大规模做了有用的工作时，杀手应用程序出生。
我在20世纪80年代建立了自己的计算机，但使用了20世纪70年代技术稍微升级，需要更少的电源和更少的芯片：基于英特尔8085C的单板专用计算机，通过闪亮致命的UV-C光擦除了2702 ePROM通过一个小石英窗口：
我只是一个孩子。我通过与当地图书馆的特殊安排在长期贷款上保存了一本大学教科书。我在妈妈洗衣水槽里蚀刻电路板。使用从铜纸夹切割的位，将内存模块连接到主板。我在校车背面写下了汇编语言，并有梦想放置的op-codes。
没有应用程序，没有操作系统，只是EPROM上的程序。它做了什么？它启动了，做了一个自检，并通过界面读取盒式磁带的程序，该界面使用CPU自由地提供。然后它进入了从键盘输入的循环侦听，等待可以由各种交换机触发的中断。
该程序让您在键盘上输入一系列命令，以指示机器人滚动，请沿地板上的踪迹，并操纵由留声机，挡风玻璃刮水器电机的零件制成的臂，以及我爸爸的一些废料零件躺着。
也就是说，在初步测试期间，在科学博览会前几周，在初步测试期间，在初步测试期间才会让白烟出来。
这就是为什么我写软件和科幻小说，而不是建立机器人。</description>
    </item>
    
    <item>
      <title>符合UNIX的操作系统已被认证是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-goes-into-making-an-os-to-be-unix-compliant-certified/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:17 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-goes-into-making-an-os-to-be-unix-compliant-certified/</guid>
      <description>符合UNIX的操作系统已被认证是什么？ 回答 1 很多。我是Apple的技术领导，用于制作Mac OS X通过UNIX认证，它已完成将Apple从开放组提交的200万美元诉讼中获取，以便在广告中使用UNIX™商标。诉讼已提交，因为Mac OS X服务器的所有者保留在网站上的UNIX，以及服务器产品的所有其他营销抵押品。选项是：
我被问到我是否能够带领团队去做＃1.我说是的，在我可以使用合规项目作为锤子的条件下，以强迫组织的其他部分来改变自己的代码基础，而且我可以播放它相当松散地与关于它在错误数据库中所说的关于给定代码的内容的规则，以及给定的代码更改实际上的内容，除了它在错误数据库中所说的内容。我得到了go.and我们对现有Mac OS源基础进行了合规性测试套件，它会因为标题文件而立即出错.D Moy，我做了两行更改，将&amp;lt;stdio.h&amp;gt;移动到它的位置相反。在&amp;lt;stdio.h&amp;gt;中，在文件中的另一个中，该类型的另一个在文件中，我们将再次运行测试，并且测试中的头文件错误之一进行了离开。所以我们做了一个世界版本，在Mac OS X中的所有内容，包括iTunes，都重建了。那么 - 基本上，一行变化 - 突破152（来自记忆;这个数字伸出，但它可能只有137个）项目未能构建.Cluding iTunes.and，所以ed和我经历了，并解决了这些项目中的每一个项目，以改变，或者没有变化。做了另一个世界的构建和一切构建。我们可以访问所有Apple的源代码，此时在游戏中。所以我们提交了对项目的高优先级错误修复，其中一些将立即降级优先级，其中一些它们只是修复，因为我们已经向他们提供了修补程序。然后，工程副总裁Bertrand Serlet，重新升级了已经降级的那些的优先级。我们提交了标题文件更改。此点，我们不得不回去，重新评估整个项目的可行性。我觉得在考虑到我已经放在这个项目上的前提条件，我觉得它是可行的.Ed愿意直接说什么。我说是的，把我的工作放在线上，我们给了go.it Esc虽然毕竟，毕竟，毕竟，毕竟，毕竟，毕竟是储蓄苹果，毕竟保存了10亿美元或2亿美元加工所有Mac OS X服务器营销抵押品。我们被承诺1/10美元或者完成，或2000万美元的股票.1000万美元，为ed 500万美元，为Karen Crippes 500万美元，在Mac OS X的发展中寻找一个家庭，我知道是一个惊人的工程师，谁可以被绳索是技术联络，并定期开除测试并抱怨ED，我对没有通过的事情。我得到了1000万美元，因为它将成为我的工作，并且可能是我在工业中工作的能力一个高水平的，永远在未来.Also，技术领导必须解决任何其他人修复的东西，或者没有其他人可以解决，因为它们是DRI（直接负责人）。我也不只是技术带领;我是事实上的项目经理。我戴着很多帽子。它将是漫长的slog.i估计了一年，为5个个人的团队：三个小鼠（不是拼错），两个承包商 - 一个是一个用户空间代码;这是Len Lattanzi，一个用于全日制测试自动化和Bug申请，Jaime Delgadillo也可以在尽可能有两种临时承包商;一个用于工具合规性，一个用于人类页面。然后，我们可以在苹果中的其他地方向其他地方绳索，以便在一个短期内，这主要是为了确保他们投资于该项目;我们实际上并没有实际上需要编写代码。我们的第一个红色字母日是在所有头文件通过测试时，以便测试套件中的其他测试将开始运行。我们实际上将所有头文件更改为其余的所有头文件到那时，Mac OS X。标题是符合Tiger发货的标准。这破坏了代码战士的机会。我完全打算解决这个问题，但从未赋予了机会，而且代码战士或多或少都是抵押品伤害。但是，它是一个红色的字母日，当标题文件通过测试时，我们通过前往IL6而庆祝 - BJ餐厅的非正式名称，就在苹果校园里。随着苹果的其余部分而言，我们刚刚关闭了修复头文件错误，它包含了许多用于单个标题文件的其他错误。我们花了大约3个月这样做。我已经承诺一年。我是否会打算估计一年估计？
回答 2 它站立，没有
有一句古老的谚语：上帝在六天内创造了世界，因为他不得不处理任何安装的基地。
2000年从经典麦斯科斯到“UNIX调味”OS X的转换相当灾难性，并且没有一个传统的MAC软件可以在没有重写的新内核上自然地运行。
Windows有一个安装的基础，比2000年的Mac大的数量级，所以批发内核切换是几乎不可行的。开发人员会反叛。在切换到Windows NT时，微软可能仍然有来自自己的大灾变的回忆。
当它站立时，没有什么可以通过简单地在Hyper / V Container内或在Windows 10周年版本中使用新的Bash Shell来实现的UNIX内核来实现。
还要记住，大多数麦克斯魔法发生在完全专有的可可和碳框架中。</description>
    </item>
    
    <item>
      <title>为什么现在很少用作编程语言？</title>
      <link>https://xiangqingw.github.io/posts/why-is-perl-so-rarely-used-as-a-programming-language-now/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:16 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-is-perl-so-rarely-used-as-a-programming-language-now/</guid>
      <description>为什么现在很少用作编程语言？ 回答 1 （1）您认为这个程序是什么？$ _ = q（s％（。）％$ _ = qq（\ $ _ = q（$ 1），打印％e），s％ （。）％$ _ = qq（\ $ _ = q（$ 1），$ 1），打印％E &amp;lt;/ OL&amp;gt;</description>
    </item>
    
    <item>
      <title>什么是你看到的最荒谬过度设计的代码？</title>
      <link>https://xiangqingw.github.io/posts/whats-the-most-ridiculously-over-engineered-piece-of-code-youve-seen/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:16 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/whats-the-most-ridiculously-over-engineered-piece-of-code-youve-seen/</guid>
      <description>什么是你看到的最荒谬过度设计的代码？ 回答 1 当我19岁的时候，我写了一个图书馆，哦，大约500行代码，并花了我大约3或4周才能写作。有趣的是，它的唯一工作是解析字符串日期时间，并将其转换为Oracle PL / SQL中的SQL时间戳。
我的代码遗憾的是，在接下来的2或3个月内很受欢迎，我们在它周围写下了整个包，转换回一个字符串，处理多种格式，处理不同的时区，UNIX时间等。
在我离开我的位置之前大约一个月，&amp;hellip;&amp;hellip;
回答 2 这发生了几年前的时候了。这是一个严重问题的天才解决方案。它不是过度的工程;实际上，工程的方面没有进入解决方案。
问题：
在遗留代码上运行的桌面应用程序。点击按钮X会触发对服务器的调用，获取数百MB的文本数据，解析它并在UI上渲染。客户抱怨申请非常缓慢，显然。
解决方案：
计算用户鼠标指针和按钮之间的距离。如果用户正在接近按钮X，请触发服务器并开始下载in
这发生了几年前的时候了。这是一个严重问题的天才解决方案。它不是过度的工程;实际上，工程的方面没有进入解决方案。
问题：
在遗留代码上运行的桌面应用程序。点击按钮X会触发对服务器的调用，获取数百MB的文本数据，解析它并在UI上渲染。客户抱怨申请非常缓慢，显然。
解决方案：
计算用户鼠标指针和按钮之间的距离。如果用户正在接近按钮X，请在用户点击按钮之前启动服务器并开始下载数据，以便在用户实际单击时，已经下载了数据更快地下载数据。啊哈！
他们得到了批准并实施了它（是的，他们实际编码了上升），该团队意识到疯狂地将鼠标指针移动到屏幕上会触发对服务器的多个呼叫，从而崩溃了应用程序。
 facepalm *  回答 3 我曾经遇到过一些代码返回数组中的元素数。我还没有访问它，所以我会写同等的代码&amp;hellip;&amp;hellip;</description>
    </item>
    
    <item>
      <title>你写过的最小代码是什么，你为此感到骄傲？</title>
      <link>https://xiangqingw.github.io/posts/whats-the-smallest-piece-of-code-youve-written-that-you-are-proud-of/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:16 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/whats-the-smallest-piece-of-code-youve-written-that-you-are-proud-of/</guid>
      <description>你写过的最小代码是什么，你为此感到骄傲？ 回答 1 但是那个
我们有一个GNARLY PROG，即〜600行正则表达式。它需要a.product描述，如您在目录中查找，并使用产品ID，尺寸，大小，重量，颜色等内容进行结构，最后是事项。纯粹来自文本。
目录以不同的方式描述相同的完整事物，这就是我们需要的原因。这是预先消费级别的AI。
这段代码恰好靠近我所看到的Grimoire，我是写它的病假混蛋。如果你勇敢地尝试阅读它，它试图吃你的思想。但它他妈的有效，已经完成了十多年。
但这不是我为此感到自豪的东西。它的客户支持人士表示，它没有拿起特定的产品代码。
hmmmmmmmmmmmmm。三个小时的凝视。一个逗号完全正确的地方（和Deep Regex看起来完全相同的线噪音），现在已经做了，并且没有打破任何东西。
那天我是上帝。 Loki可能只是一个上帝。
回答 2 Memcpy是一个非常困难的功能。它必须处理各种奇怪的对齐和长度案例，仍然有效。即使X86具有字符串复制指令，它也具有相当高的启动开销，而不是大多数芯片上最快的解决方案。图书馆memcpy非常好，但它是华努约。它是超过1000行代码，主要是在汇编程序中。
我正在阅读各种AVX-512的指令，并决定尝试编写Memcpy。它围绕了25行代码，处理所有对齐和长度案例，但每个内存参考拷贝64个字节。当然，您需要一个非常现代的x86来运行它，因此它几乎没有替代图书馆例程。
回答 3 我是分枝
我在509个字节中写了Pac-Man。如果您有兴趣，它在这里：
它是它自己的引导加载程序（并提供自己的操作系统，如果这是您想要调用的是最简单的显示驱动程序和键盘处理程序），如果您将其存储在USB棒的主启动记录中并从中启动计算机将自动开始运行游戏，无需操作系统。
注意：如果将其刻录到USB上，则棒将不再将其识别为Windows中的存储设备，因此此操作如此以您自己的风险，并且不要使用USB粘贴具有有价值的数据。
我为键盘处理程序感到特别自豪。它使用一些术语比特操控来将键盘扫描转换为Opcode（井，技术上，操作码的ModR / M字节）要更新位置的指令，然后在移动功能中覆盖该字节。所有要保存字节，如果是的话，它会采取两种程序。
回答 4 这是程序（由于依赖于我的记忆可能不正确;一世
1965年，我为LINC（实验室仪器计算机）创建了三指令机 - 语言程序，是第一个迷你电脑之一。该程序在类似于瀑布的屏幕上显示了不断变速的模式。它实际上是一个抛物线，在多次折叠并且由于丢弃携带位引入的伪随机性而变化而变化。
在求职面试期间，我会在求职期间进入这三条指示，并帮助我获得了几个工作编程了LINC，1969年至1970年的PDP-12。
以下是程序（由于依赖我的内存可能不正确;我不再有LINC或PDP-12测试）：
Location Contents0：添加0 [将位置0内容添加到累加器1：DIS 10 [增量位置10并显示点2：JMP 0 [循环回到位置0
回答 5 我们在NASA的IBM大型机上有一种情况：当我们的用户连接到OS / 360虚拟机的终端时，他们无法自行断开连接;他们不得不打电话给支持小组，他们不得不打电话给系统运营商实际断开终端的连接。
这浪费了很多时间。经过大量的研究后，我能够创建一个非常小的操作系统修补程序（约有20条指令），将必要的命令丢弃到一段系统存储中的临时未使用的字段中，并执行调用管理程序以执行它的特殊指令。问题解决了。
回答 6 我做了一段时间吧，砍掉了我朋友的机器人。这不是很困难，或复杂，但在他的机器人（从对话中学习）之后不会说除了废话之外
回答 7 虽然（1）叉（）;
&amp;hellip;更多和你如何使用它。我们在学校分享了访问UNIX机器，毕业生们搞砸了我的朋友+同学。他们主要机器上的一些简单的叉子炸弹将它们拉直一下。它也让我对管理员有严重的麻烦。
回答 8 我在一个微小的应用程序中写了一篇文章，该脚本将在各种文件夹中呈现数据库脚本作为可以选择性地选择和运行的操作项下拉列表。
下一个效果是更好的自动化工作流程。复杂系统中的常见任务可以由昂贵的开发人员脚本，而可操作的工作可以通过更便宜的职员来完成。对于一个组织，净福利在运营机会成本中超过250千万美元/年，总体票证解决时间的重大减少。
回答 9 有趣的是，我的是一个代答旧的赛段，已经回答的stackoverflow问题询问，询问来自JavaScript中的API的递归收集分页数据。接受的答案是一个相当简单的任务的21行代码。有兴趣看到代码如何通过现代语法减少，即使格式化时，我也会使其降至七个。
并且具有更好的可读性和错误处理。
这是原始解决方案（对其作者没有冒犯）：</description>
    </item>
    
    <item>
      <title>你被问到的最愚蠢的编码问题是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-is-the-dumbest-coding-question-you-have-been-asked/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:16 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-the-dumbest-coding-question-you-have-been-asked/</guid>
      <description>你被问到的最愚蠢的编码问题是什么？ 回答 1 他们：你知道Linux吗？
我：是的，我所写的大多数程序都在Linux或Unix上。
它们：如何列出目录的内容？
我：输入&amp;rsquo;ls&#39;
不是我曾经得到过的单身愚蠢。然而，他们在全国各地飞行了4小时的技术面试，这是他们询问的最具技术问题。相当浪费。
回答 2 这是一个问题，我不责怪任何人的要求，因为我在当天回来了。
这是一个问题，每天都出现。
到处。
从伦敦到墨西哥，无辜的人一直在问它。
什么是最好的编程语言？
我的意思是，没有人会问一个木工：
什么更好，斧头或螺丝刀???
回答 3 什么是c？操作系统或编程语言？
这与我的两个好朋友发生了。我们是我们的计算机工程学士学位的第三年。
课程中最令人生畏的一部分之一是在外部调查人员于学期结束时进行的viva评估（口头审查）。
考虑到它是面对面的互动，学生们曾经努力学习。
我们是我们的数据结构和算法课程Viva，我们得到了我们拥有最严格的invigilator的消息。如果他们错过了甚至是罪，那么这个家伙就会出现故障的学生纪录
什么是c？操作系统或编程语言？
这与我的两个好朋友发生了。我们是我们的计算机工程学士学位的第三年。
课程中最令人生畏的一部分之一是在外部调查人员于学期结束时进行的viva评估（口头审查）。
考虑到它是面对面的互动，学生们曾经努力学习。
我们是我们的数据结构和算法课程Viva，我们得到了我们拥有最严格的invigilator的消息。如果他们错过了甚至是一个问题，这家伙有一个失败的学生记录。我们在最后一分钟的准备工作，在屠夫之前，我们被吓到了一只绵羊。他们决定一次向我们致电我们的vivas。
我两个好朋友那天没有做好准备好，进去了。他们都坐下来，也许这对他来说只是一个热身，他扔了这个问题 - 什么是c？ 暂停操作系统或编程语言？
这些人都感到惊讶和震惊，互相看着对方，其中一个人开始微笑，这升级到咯咯笑而且显然变成了笑声&amp;hellip;&amp;hellip;看着他另一个人也开始笑！他们不相信他们被问到这么简单的问题。
Invigilator也笑了。一旦它解决了。他向他们询问了最棘手的问题，他们无法回答并失败。显然他被冒犯了。
回答 4 如何备份目录？
我提供了复制整个目录的示例，以提示它，设置脱机同步等。所有被解雇不是正确的答案。dev只是不停地说不，不是那样。如何备份目录？
最后答案他们正在寻找的是镭射唱片..
回答 5 相当一段时间，我曾在一份新的Hiree上工作过。他被任意地工作了在我贡献的项目上工作。他对自己的工作非常擅长，所以有一天他来到我时，我很惊讶，并告诉我该计划已经停止了工作。为什么它停止工作？他问。我问他改变了什么，他的回答是他只删除了一些代码。我对他的问题是为什么他首先删除代码。因为我不明白它所做了什么，是他的答案。我想这是学习的一种方式！
回答 6 哦，我&amp;hellip;&amp;hellip;这对我来说很容易。在我以前的雇主，一名同事将为180万美元的学生贷款抱怨每一天。
在会议期间，我们只是在谈论随机编程主题，同时我们等待项目经理出现。写出混淆代码的话题出现了，我认为模糊出来会很有趣，为什么不在装配中写它，它会出于盒子里遇到了
从房间后面，180K先生的学生贷款问，什么是大会？
我不能因为学位而言，这是一个学位的学位，你甚至不知道什么是汇集。授予，他在网上发展，但认真对待？开发人员如何不知道组装是什么。
回答 7 嘿amogh等一下..
嘿。 Whats&amp;rsquo;up女孩？
聆听我不知道为什么这段代码表现出一个错误，即使它是正确的。
所以，这是小鸡的代码:(伪代码）</description>
    </item>
    
    <item>
      <title>是什么导致你的第一次烧毁作为软件开发人员？</title>
      <link>https://xiangqingw.github.io/posts/what-caused-your-first-burn-out-as-a-software-developer/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:16 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-caused-your-first-burn-out-as-a-software-developer/</guid>
      <description>是什么导致你的第一次烧毁作为软件开发人员？ 回答 1 scrum。或者更准确地，scrum
来到Scrum，我们有很棒的东西
什么不烧我？
我以前说过，我会再说一次，我绝对喜欢敏捷。完全停止。 Scrum对于我的口味有点沉重，但如果它非常良好地运行，它仍然完全可管理。但是，在我的经验中，如果它的运行非常好，这是超稀有的。如果它没有完全抵消达到敏捷的宣言是罕见的，因为这很重要。
最好的领导者，你几乎没有注意到。
这包括仆人领导者（Scrum Master的主要描述符）产品/项目领导者（PO / PM），特别是开发领导。
在我的整个职业生涯中，我还没有在整个专业生涯中读过一名工程师，当过程变得非常沉重时没有开始烧毁。而且你真的需要一个强大的领导者在萌芽中扼杀。
问题是，当你得到一个不安全的领导者，觉得他们必须证明他们正在做某事，他们不会给予他们的权力（赋权）球队。你也需要力量。可以在谈话之间潜入的领导者，让人们真正知道他们被听到了，但是当然是正确的，使解决方案并使这些东西前进。
现在这在任何框架中都很重要，但Scrum给出了一个非常方便的流程列表，以误解并使团队与流程和会议瘫痪，从而燃烧每个人。个人和对过程和工具的互动。
回答 2 它通过任何手段都没有技术挑战。我喜欢他们所有人。我仍然。软件开发非常有趣。
这是我有望提供多件事的文化（我真的很喜欢，因为我一直在做更多的工作），在工作中没有多大的灵活性，向多个经理报告既不擅长技术也没有人的管理。
他们缺乏在照明速度下提供的质量结果的升值。他们缺乏信任，感到不安全，并会担心自己的知名度。我仍然很好，因为我对自己的知识满意度努力，就像我为本公司的利润一样努力。
但是，当他们开始与他们的流程更具侵略性时，不必要的会议和不灵活性，我别无选择，只能拉插头，包装我的东西并离开。我不喜欢以工程方式的人或进程。
当我继续在那之后使用技术继续做得更有趣的东西时，我不会称之为烧坏。这更像是一个令人敬畏，并非所有工作场所都值得善工。值得你的时间，技能，能量，金钱和情绪的人是你的家人。
如果你在你家的某个地方工作，那么你很幸运。在这个星球上的大多数地方，你只是一个备件意味着被烧毁并被替换。
值得庆幸的是，这次经历教会了我如何在今天管理十几个人时对待工程师。
回答 3 我从不烧掉发展。
我被顾问和漫游在缺乏对 - 缺乏礼貌的话语 - 完全废话时被烧毁。
事实上 - 一旦阿联酋人员告诉我 - 我的行李上只有太多标签贴纸。
当我打开Ola / Uber的历史时 - 列表永远不会结束。
它非常少于智商和智力的薪酬 - 绝对浪费 - 并使我在2年的跨度达到10年。
回答 4 多年前，我简要介绍了保险公司的合同。该软件团队在商业建筑中占用2层，仅限超市，邮局和一些便利店。有一天午饭后的短暂时间，火警在一个震耳欲聋的尖叫声中脱下了，每个人都在火灾时争先恐后地争抢。我们从街对面观看了大楼燃烧到地上。
这是我的第一次作为软件开发人员烧毁。
回答 5 从1969年开始，我花了50年使用20百万行使用20种不同的语言。我喜欢编程并抵制所有尝试让我进入管理层。然后我的第一次燃烧：几年前，我的旧记忆开始遇到困难，特别是我的短期记忆。我决定，在73岁时，我被烧毁所以我退休了。退休也很有趣！
回答 6 我不确定这是否有资格，因为我从来没有机会倦怠。我只是继续前进。
但是，我被烧坏了，因为我总是紧张。
我总是紧张，因为我觉得我从来没有早点得到了正确的经历，现在我12年了，觉得我知道的不到我应该。
我的第一份工作是一个简单的技术支持演出，带有PowerShell脚本。
没关系。
但我的第一个真正的演出在4D中发展，我的唯一帮助是我的老板，没有堆栈溢出。紧绳，没有安全网。一年半后我被解雇了。
之后我做了一个非常棒的美国国税局续
我不确定这是否有资格，因为我从来没有机会倦怠。我只是继续前进。
但是，我被烧坏了，因为我总是紧张。
我总是紧张，因为我觉得我从来没有早点得到了正确的经历，现在我12年了，觉得我知道的不到我应该。
我的第一份工作是一个简单的技术支持演出，带有PowerShell脚本。
没关系。
但我的第一个真正的演出在4D中发展，我的唯一帮助是我的老板，没有堆栈溢出。紧绳，没有安全网。一年半后我被解雇了。</description>
    </item>
    
    <item>
      <title>是否有任何东西对视频游戏进行了字面意义？</title>
      <link>https://xiangqingw.github.io/posts/is-there-anything-that-is-literally-impossible-to-code-into-a-video-game/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:16 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-there-anything-that-is-literally-impossible-to-code-into-a-video-game/</guid>
      <description>是否有任何东西对视频游戏进行了字面意义？ 回答 1 电子游戏都是烟雾和镜子。您想要代码的任何内容，您都需要使用几个技巧进行优化。如果通过蛮力完成，即使是某些简单的任务也可能被认为是不可能的。
所有这些东西都依赖于黑客来模拟足够好的东西，让你相信游戏实际上正在做艰苦的工作。
但是，至少有一件事比绝对不可能，我已经谈到了几个同事，这些同事很乐意使用那些不可能的力学设计游戏。
是的，时间旅行是。
有一些类型的时间旅行可以模拟或叙述，但没有办法展示玩家在未来会做什么。
想象一下你可以去过去的游戏来帮助你的过去自我，没有办法在你实际做之前，你可以看到你的未来自我来帮助你。
为了实现时间旅行力学，我们需要创建实时旅行。
在多人游戏中，甚至可能只能减慢或加速一个玩家的时间，因为在任何一种情况下，一些玩家都会与另一个玩家的未来版本一起玩。
也许有一天有人可以创造和ai预测你的未来在一个封闭式场景中的移动。使用烟雾和镜子创造时间旅行幻觉的方式，如果正确拉动，仍然是令人难以难以置信的。
所以，无论有多么强大的图形卡变成了无数的计算能力，可以在电子游戏中创建时间旅行。
照片来源：
回答 2 真正的随机数;
人级智力;
答案42的问题;
一个上帝;
所有的现实 - 每一个对象的准确物理交互&amp;hellip;&amp;hellip;
我可以在这里几天。最后，游戏不是他们似乎的样子。它们被简化，空（如同在字面上没有任何内容填充它们）模型正在窥视和播放声音，有时触发动作，让我们认为那里有实际物质。这是剧院。
不可能是一个奇怪的词。在技​​术上并不是不可能编程一个整个地球，用它的每一个对象都有一个对象，将其编程为rea
真正的随机数;
人级智力;
答案42的问题;
一个上帝;
所有的现实 - 每一个对象的准确物理交互&amp;hellip;&amp;hellip;
我可以在这里几天。最后，游戏不是他们似乎的样子。它们被简化，空（如同在字面上没有任何内容填充它们）模型正在窥视和播放声音，有时触发动作，让我们认为那里有实际物质。这是剧院。
不可能是一个奇怪的词。在技​​术上并不是无法编程一个整个地球，每一个对象都对它进行，计划它要实际回应所有物理法律，那么对每个人都有现实的智能&amp;hellip;&amp;hellip;但我们有那个时间吗？或者那个存储空间？或者我们甚至愿意做那样的事情吗？
这不是一个问题，但我们应该。
回答 3 真正的随机性。
您可以非常沉默地靠近愚弄人们思考某些事情是随机的，但在当天结束时必须有一些方法导致生成的“随机”事件。
喜欢，挑选一个十四之间的数字。或者，如果玩家进入右门，那就发生这种情况，但左边和中间的门会导致“那”发生“。
回答 4 一些事情很难在商品硬件上实时做。很少有事情实际上是不可能的。也许没有人知道如何做到这一点。
我已经尝试了超出了任何主流游戏所做的特点的方式。主流游戏很少做任何最前沿的东西，因为它是有风险的，他们都是关于利润的。
回答 5 谈到游戏编码时，我是一个没人;我只是玩这些东西。但我听说真正的现实水和湿度非常难以在视频游戏中创造。虽然水的行为不是随机的，但它们会像任何东西详细靠近它。任何专家都想要唱歌吗？
回答 6 真实的4维环境。
一些声称，甚至有它的视频，但不是一个实际发布或讨论了所涉及的数学。目前，它是烟雾和镜子，就像这个产品一样，现在已经到了10年。
我正在努力寻找关于如何在内部重新创建TARDIS的想法，而无需吸烟和镜子戏剧来实现它，并且已经完全无法真实地再现它。
数学和图形库根本不支持它。
回答 7 技术上不可能，但仍然不可行的是创造一个有机地反应你所做的游戏世界。想象一下，它会创造出来的奇迹感到扮演一个RPG，城镇的每个人都有一个先进的A.i，这将基本上像一个真正的人一样，所有的利弊。这有这么多技术，叙述性和逻辑含义，即它仍然附近不可能实现。
回答 8 它是Favela MW2与Rod4的沼泽之间的领带，在退伍军人模式中。
favela是一个很多子弹城市。飞行太多的人和子弹，随机手榴弹，狗等。
这是退伍军人的艰难水平。不仅仅是技巧，而且需要运气是一个因素。在退伍军人模式下，如果AI射击你一次，他们会在一毫秒的轰炸中杀死你。这意味着在射击射击的地方100％保证，您可能搞砸了。
你真的必须用不同的方式。你不能有枪战，你会整天都在这里，最终死亡。你必须真的流行闪光刘海，掉下来或用镜头击晕它们，然后运行盖子来覆盖你逃脱。
有时你甚至必须知道产卵，以便在他们可以在你身上开火之前逃跑。这是一个完全不同的游戏。
退伍军人的沼泽就像坏一样糟糕。有一个像福索般的区域，你必须坐在一个屋顶上，每个角度射击你的每个角度，而你需要10秒钟瞄准和射击标枪。
您也必须观看您的后站，因为您可以杀死队友甚至导致火箭击中您的东西，杀死自己和海军陆战队员迫使您重新开始。
顺便说一句，这不是难点，这是。
您必须从南部和西部抵御敌人的储息。南方拥有500个带有RPG和手榴弹的家伙。东方有300个带AK和RPG的家伙。
心灵，你必须捍卫坦克，这意味着杀死他们坦克所在的地方&amp;hellip;&amp;hellip;在退伍军人!!!!!!!!!!!!!只有敌人可以在.000001秒中杀死你！
你可能会在屏幕上有7个手榴弹图标的坦克俯卧。</description>
    </item>
    
    <item>
      <title>程序员可以学习多少编程语言？</title>
      <link>https://xiangqingw.github.io/posts/how-many-programming-languages-can-a-programmer-learn/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:16 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-many-programming-languages-can-a-programmer-learn/</guid>
      <description>程序员可以学习多少编程语言？ 回答 1 如果您学习四个角色语言，您会发现其余95％的人只是以不同的组合重新恢复相同的想法。
如果您想涵盖其余5％的大部分，您可能需要另一套四种语言：
无论哪种方式，我想做的那一点就是学习语言几乎是微不足道的。它们重用了从一个特征集和语法的大量部分到另一个。然而，学习编程的关键是没有学习该功能的内容，但它们如何用于解决问题。
请记住，编程不是语言学，它不是语言。它是关于描述它们的问题，解决方案和严格的方式。
回答 2 自1981年，我一直在编程大约40年以来的基本vic-20.我假设我在时间里学到了大约20个编程语言，我甚至不确定我可以从内存中列出所有内存。我今天可能实际上可以在今天的5个中做点什么，我会在今天或者在6502上撰写帕斯卡节目的问题（但我已经回答了几个装配问题，其中一些装配问题是从80年代记得的6502的例子的）
理论上没有限制，但出于实际原因，您可能不会同时学习许多人。
回答 3 唔。让我们看看我是否能记得过去40多年来一直使用的所有语言我一直在编程。
这些都是我现在可以想到的所有主要人物，我已经完成了任何重要的东西。我与我合作的几种未成年人，还有一些人（主要和未成年人）。和。
一旦你知道一些，额外的人会更容易。除了如何应用这些技能的杂乱细节之外，许多编程技巧并不真正依赖语言。这就是为什么我倾向于争论专注于编程而不是在工具上使用的原因，而不是用于编程。如果您了解如何理解所需的内容，如何提出解决方案的设计，如何实现，调试和测试这些解决方案，然后是程序员。如果您知道100种不同语言的语法和标准库方法，但从未实际写入一行代码，则您是一条徒步的百科全书，但你不是程序员。
回答 4 我在20世纪60年代开始了Fortran，通过PPS-4和IMP-8到DEC机和IBM的至少12个不同的汇编语言，以及超过15种高级语言的东西，从Lisp（仍然是我最喜欢的）到Smalltalk， prolog和php。在过去的几年里，我主要在Java和Python中工作。在我退休之前，我教导的一个课程包括一个介绍C ++，具有非琐碎的项目要求，所以我花了很多时间帮助学生。我通常可以在大约一周内学到足够的新语言开始。它有助于拥有一个工作的非琐碎榜样，您可以通过和玩。
回答 5 3-5名专业，其他人愿意。
从根本上讲，您可以使用编程语言一旦获得：
一旦您参观了如何执行这些事情，它很容易从其他语言翻译。
还有一些大家庭的编程语言。
许多程序员会畏缩到同一个家庭中的C和Java的想法，但这意味着只有你学习一个人更容易学习除了从划痕或不同的家庭中学习。
扇区特定语言例如是SQL，HTML，CSS，R，OpenSCAD。他们不在自己身上存在，但要更加富有成效是有用的。知道一个并不意味着它更容易学习另一个，但如果该行业相同，那么很容易学习该行业的另一种语言。
回答 6 去年10月我已有30年的发展。
在那些年度上用许多不同的语言合作。
一些众所周知的汇编器，基本，C，帕斯卡，PowerBuilder，Cobol，Fortran等等。
其他人没有如此众所周知的数据集PL / B和魔法。
目前我在AB Initio工作。改变的东西:-)。
那么程序员可以学习多少种语言？许多！诀窍是学习你需要的东西。
回答 7 我学到了很多：
也许我错过了什么，我现在是一个老人。:)
回答 8 说明
我的伯爵在最后一次检查时已经超过60次。这是10年前，所以它现在更高。我知道那些打败我的人。
诀窍是清楚地通过编程语言的意思以及你的意思是学习的。
我名单上的一些语言可以被视为方言（例如，ML的三种变体），有些语言灭绝或死亡（例如，几种特纳家族语言，其中哈斯克尔预先购买，您不能再购买的CPU的汇编语言）。我想我对构成一种独特的语言以及没有什么，但我不确定我可以阐明它。
为了说明我的意思是学习的一个例子，我完全流利地走向Java编程语言。我可以（如果有人想适当地支付给我）在Java中实施符合Java编译器，而没有任何严重的困难。
现在在这里是我不知道的：秋千，春天，蚂蚁，maven，jsf，spark &amp;hellip;&amp;hellip;你需要知道至少有几个这些都以良心的良心称为java程序员。因此，我总是非常小心地说，虽然我说流利的Java，但我不是Java程序员。
回答 9 程序员可以学习多少种语言？太多。:)
另一方面，一种语言应该如何依赖？这是我写入的语言列表，可以阅读和理解（至少基础）：
实际上我可能会忘记我触摸的一种语言。
但是我现在可以合理地编程了多少种语言？
我真的擅长多少种语言？
那就是基本上
程序员可以学习多少种语言？太多。:)
另一方面，一种语言应该如何依赖？这是我写入的语言列表，可以阅读和理解（至少基础）：
实际上我可能会忘记我触摸的一种语言。
但是我现在可以合理地编程了多少种语言？
我真的擅长多少种语言？
这基本上是它。所以你得到了趋势。这不是数字的数字。:)
回答 10 在真正的发展中，正常使用2-3种语言，同时，例如Swift，Objective-C和Python。在这2-3种语言中，它可能具有相对深入和新的知识。另一个1-2语言可以很少（例如C ++），因此它将需要一些语法或功能问题的Google。所以，总计约5。</description>
    </item>
    
    <item>
      <title>视频游戏中有什么很少使用的功能？</title>
      <link>https://xiangqingw.github.io/posts/what-are-some-rarely-used-features-in-video-games/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:16 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-are-some-rarely-used-features-in-video-games/</guid>
      <description>视频游戏中有什么很少使用的功能？ 回答 1 在杀酒血金钱。
一旦你用完了健康。游戏开始代理47的死亡序列，屏幕转动黑白。
然而，许多可能甚至不知道的可能是可能的，因此很少使用是在这种情况下的模式时间。
如果你用爆头射击并杀死了3个敌人。你得到第二次机会，游戏没有结束。但是，如果我没有弄错的话，这适用于整个任务如此死亡，然后他会为真实而死。我认为这仅适用于单一的使命，并将在新的启动时重置。
回答 2 我从未见过这样一个独特的功能
在金属齿轮固体2：自由女士（以及随访的续集），你可以通过针对他们的武器来阻止你的敌人。
这是一个隐形游戏的一个非常重要的特色，幸运的是，正如我所说，Kojima Productions为随后的所有续集保留了此功能。 Hold-Up功能在MGS2中也非常重要，因为它是您可以撼动它们的唯一方法，并获得他们的Dogtags - 以非常特殊的，提供的物品奖励您的游戏收藏品（即获得一定数量从整个游戏中的每个警卫）。
我以前从未见过这么独特的特色，并且确实对这种类型来说非常重要。
回答 3 一个名称可以在至少PlayStation控制台中包含几乎所有很少使用的功能。 Hideo Kojima。他的游戏设计不仅使用独特的游戏播放元素，而且他总是发现使用硬件噱头打破第四墙的创造性。 PS1时代用金属齿轮固体，他在PS4生命周期中只变得普遍的方式使用了几种这些硬件功能。他使用硬件编码来索引玩家存储卡，并从预编程列表（konami游戏）他与您播放的其他游戏进行互动。当您获取自定义皮肤/武器/侵略度时，您只能看到自定义皮肤/武器/侵略性。他还利用了控制端口被分配给游戏发动机读取的槽0和1，以便在战斗心理螳螂时进行游戏发动机，尽管是噱头。
在金属齿轮固体2上，它们基于核心游戏机制，使PS2控制器上的面部按钮是压力敏感的事实。很少有游戏利用这个功能完全遵守MGS2使用它们的程度。对我来说是一种伟大而直观的方式来处理这个功能，因为较新的游戏玩家倾向于努力尝试跳得更高等等。记住任天堂时代，当我们的父母会在试图控制马里奥时，我们的父母会颠簸？使用压力敏感按钮也是如此。你可以慢慢地掏出一把锤子，或者甚至可以使用机械师慢慢地放下锤子。你可以扼杀一个更难获得信息或更安全地持有他们的人，以便他们能说话。可悲的是，控制器面上的压敏按钮永远不会成为标准或广泛使用，并且对于大多数情况而言，它是在使用时降级到肩部按钮。
那些早期的Kojima游戏真的坚持使用大多数人从未打扰尝试的功能。至于游戏玩法，即使是后来的违反了许多公约。
回答 4 视频游戏中有什么很少使用的功能？
我立即想到了Farcry 4的一个特定特征，某些人可能已经使用过一次并且可能再次使用：
通过简单地执行的游戏，通过Pagan Min的指示，戴着主角在游戏开始时佩戴主角来访问的游戏。
分钟告诉你在照顾某物的同时留下来。游戏将导致您离开Mins Estate并参与叛乱。
如果你留下来，不要离开用餐区分钟将在几分钟后回来，龙头
视频游戏中有什么很少使用的功能？
我立即想到了Farcry 4的一个特定特征，某些人可能已经使用过一次并且可能再次使用：
通过简单地执行的游戏，通过Pagan Min的指示，戴着主角在游戏开始时佩戴主角来访问的游戏。
分钟告诉你在照顾某物的同时留下来。游戏将导致您离开Mins Estate并参与叛乱。
然而，如果你留下来，不要离开用餐区分钟后会在几分钟后回来，为中断道歉，走到替代游戏结束，其中Ajay可以把他的母亲灰烬与Lakshmana休息。
继承人一个YouTube扰流板，如果你已经看过它，或者通过那个结束的ingame播放：
ID调用一个很少使用的功能对重复性的方式并不多
回答 5 旧的游戏标题（突出次，孤立等）用于具有快速保存/快速加载选项。如果事情没有按计划，或者您想以不同的方式遇到同一部门，则允许在任何关键点和重新加载之前保存。
快速保存/负载主要消失，并且游戏在预先标记或预定义检查点处保存。
回答 6 我可能会和自己约会约会，但我认为这很适合这个问题。
在游戏中，Doom有一个级别，埃里巴士，一个特殊级别的入口。入口很难到达。它被墙壁包围。附近有一个带有壁架的建筑，您可以看到墙壁上的入口。你站在壁架上，将火箭射入墙壁，墙壁爆炸并将你扔到墙上进入入口。不幸的是，像这样爆炸的火箭立即杀了你。然而，在级别的其他地方是魔球之一，它给您不道奇约60秒。因此，当您准备离开水平时，您将获得球体，并迅速运行到壁架并将自己吹入入口处。这并不容易。你必须计划运行，你没有太多的额外时间。显然有另外两种方法可以到达入口，但我从来没有能够让他们工作。
据我所知，这种策略，不道德和火箭爆炸只能在厄运中发生一次。
回答 7 去老学校&amp;hellip;&amp;hellip;
多年来，猴岛的秘密经历了一些变化。重新发行版本替换了一个更像第二游戏的命令系统，而特殊版本您可以使用鼠标进行命令。早期的版本显示了命令，以及您以文本形式的项目。
在命令中 - 打开，关闭。这些永远不会在游戏中使用。它是使用SCUMM系统的先前卢布斯图特斯游戏的契约。
猎物鸟是我从电子艺术的amiga上的游戏。它有能够飞行40架飞机的噱头。但有一个问题。因为他们没有真正的使命，他们中的两个是无用的。
当您选择侧A（所有西式设备）时，您可以在飞机列表中看到它们。
在选择 - 波音747-400和M.D.KC-10A中。您可以拨打KC-10s在空中举行自己的飞机。但除此之外，他们没有使用。您可以符合侦交使命，您可以在巡逻任务中加入他们。但他们对别的东西并不有多。
回答 8 如果您多次失败，可以跳过游戏的动作部分的能力
Rockstar为GTA V和RDR2做到这一点，让我告诉你它是越来越容易击败游戏，知道如果我被困，我可以做到这一点</description>
    </item>
    
    <item>
      <title>C &#43;&#43;，C，Java和Python组合有多好？</title>
      <link>https://xiangqingw.github.io/posts/how-good-is-c-c-java-and-python-combination/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:15 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-good-is-c-c-java-and-python-combination/</guid>
      <description>C ++，C，Java和Python组合有多好？ 回答 1 对于什么？没有特定用例，没有答案可能有意义。我会回答这个案例：
使用C ++，C，Java和Python如何为软件系统一起使用？我真的需要知道你的系统将用于什么，但一般来说，你想用尽可能少的语言。并非总是如此：
谷歌地图是一个Web应用程序（是的，我知道还有一个应用程序版本，但是让我们保持简单，因为参数缘故）。前端是JavaScript，大多数Web应用程序都是C ++。前端是C ++。前端现在必须在javascript.right中，它是交互式网页的事实标准。它是使用数据获取的Ajax（或Ajax）.C ++在后端使用，因为Web应用程序必须分解为前端和a回到结束.since已经存在，分离，它真的没有在每个末端使用两种不同的语言。他们可以在后端容易地使用java或c #.except，他们不能.Google地图使用巨大的映射Data.Througupput的数量对于提供可接受的表现至关重要。因此他们必须使用C ++。尽管Google地图从早期的C ++桌面应用程序演变，但Google在后端使用C ++ for BribleNeck Speed.so &amp;hellip;
我们看到使用不同的语言通常是必要的，并且选择哪种语言是由要求驱动的：Google地图所需的速度.C ++比Java或C＃。所以如果它是最快的，如果它是最快的，为什么每个网站都不在后端使用C ++ ？因为维护更难（做出改变）。它不是不可能的，但Java和C＃都是更清洁的OO语言。就这样而言，Kotlin更好！但我倾向于&amp;hellip;
正如我们之前所看到的那样，网站通常具有后端和前端，这是一个分开的。他们可以互相通信，但它们不必用同一语言来执行此操作。他们使用语言不可知语言这样做（JSON是一种常用语言，实际上是JavaScript的子集，但Java和C＃可以了解它）。前端是用户在我们的案例中的Web浏览器中看到的内容。后端在Web浏览器中。后端是云。（图像信用）
但是，一旦你到后端，你一般想要尽可能少的语言，语言之间的沟渠经常麻烦，所以你通常想要避免的东西.plus，如果你有开发人员在系统上工作，让他们在语言之间跳转所有时间是痛苦;不必要的一个。但是，可能有一个有意义的情况。例如，说你有一个网站，用户可以下载照片包。我们将调用它photodown.wter他们选择他们想要的照片，他们将包装向上并上传到user.Clearly这个Photodown用户具有折衷的口味（图像信用）
photodown的后端位于java.werter中，用户选择他们的照片，系统必须打包它们（zip它们up），然后将它们上传到user.java可以执行此操作，但假设我们已经有一个python脚本可以这样做？Python脚本已完全调试，并且多年来已可靠使用。为什么不使用它而不是在Java中从头开始写一些东西？所以Java系统调用python脚本。蟒蛇脚本咀嚼在工作中背景背景虽然网站（后端和前端）准备好在等待包准备好的时候做更多的事情。这是一个用例，使用多种语言让sense.java与python交谈并不无缝，但是，在这种情况下合理。使用可靠的技术通常是一个好主意。并且Python可以在完成后通知Java系统。在包装正在服用时不需要大量的来回通知Place.But如果Photodown想要向用户展示包装的状态，这通过Python脚本在其百分比下占据了一个休息端点，每250或500毫秒的百分比可以轻松完成这是语言不可知的，因此它真的不是一个大的优惠。但是让我们解决你提到的特定技术.C和C ++
如果您已经使用了C ++，为什么您也使用C？这并不是真正的意义。如果您使用的是C ++，请使用C ++。没有理由在C ++中实现其中的一些。只需使用C ++。在C ++中所做的东西不必是OO或任何东西。如果您已经使用C ++，则无法真正购买您的任何东西，无论Linus Torvalds都说什么快速，所以它是时间关键操作的良好选择。
回答 2 你为什么在一个应用程序中结合多种语言？为什么，为上帝的爱，因为C ++接近C的超集，你会使用C和C ++吗？
用案例是什么？为什么这种组合？没有理由这样做，对我来说是一个糟糕的气味。
回答 3 优选地，除了C之外的所有语言是一个良好的组合。我说的原因是C是一种程序编程语言。
如在真实世界中，OOP为我们提供了解决问题的好方法，所以我的建议是不使用C.
回答 4 为了什么？
我每天都使用这些语言的一些组合。很少的c，并且python部分正在增长，但我每天几次在C ++和Java之间来回移动。
回答 5 为了什么？
回答 6 我花了大约五年，几乎完全在C ++上工作。然后我了解到，Lisp等较高级别的语言更接近计算机科学。更近，我的意思是，如果您试图解决计算机科学中的问题，您仍然可以看到您正在尝试通过代码解决的问题。 C ++代码更靠近机器，往往掩盖问题。你看看代码，问我们在这里尝试在此处完成什么？这并没有借给一种优越感的感觉。
这一点的另一方面是C ++代码需要大量的评论来了解代码存在的原因。那里有一个教训。评论更多为什么他们是什么。裸的代码真的是什么。但问题是为什么这段代码首先存在？ C ++代码倾向于提高很多原因的问题。我目前的语言偏好是Wolfram语言。几乎没有原因的问题，就像说你可以这样做，因为一些定理建立了一个等价，允许你替代更有用的表达式，但在大多数情况下，从Wolfram中的代码本身非常明显。
现在，如果我试图解决机器级问题，就像一个设备驱动程序一样，会有一个大问题：为什么我在Wolfram中这样做？，它不会在C ++中提出，因为它自然是更近的机器。
至于Java，它坐在中间的某处。我几乎没有十多年的Java工作。我在Sun的Java专家组上。所以这是我生命中的重要组成部分。但与Wolfram或Lisp，甚至Scala相比，它不是一种高级语言。与C甚至C ++相比，它不是一个低级语言。有一个相当窄的乐队，一个人不会问为什么看到Java代码。并且有严重的整体问题，原因为什么Java支持尾呼叫优化???我已经听到了几年和年份的答案（它会改变关心的堆栈轨迹）。对于Java的大多数问题是15年前的java，Scala是今天的优越选择（BTW，它确实有尾呼叫优化）。
而且，当你知道你以一种非常适合你正在解决问题的语言工作时，优势的感觉就会出现。一切都是有点契，舞蹈工作。
回答 7 你想做什么？</description>
    </item>
    
    <item>
      <title>c / c &#43;&#43;中的const的点是什么？如果使用常量值，为什么会让它将其分配给变量？</title>
      <link>https://xiangqingw.github.io/posts/whats-the-point-of-const-in-c-c-if-were-using-a-constant-value-why-bother-assigning-it-to-a-variable/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:15 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/whats-the-point-of-const-in-c-c-if-were-using-a-constant-value-why-bother-assigning-it-to-a-variable/</guid>
      <description>c / c ++中的const的点是什么？如果使用常量值，为什么会让它将其分配给变量？ 回答 1 这个主题大量涵盖了类似的问题：
我写了一些答案，一个问题，一个问题，一个相关问题：
JOE ZBICIAK·3Y &amp;lt;/ SPAN&amp;gt;
3y &amp;lt;/ span&amp;gt;
如果不清楚，我是Const和Constexpr的巨大粉丝。我试图康复我所能的一切。如果它缺少特定变量，那么我知道我在某处修改它。
在函数原型中，参考或指针参数上的const告诉我该函数不会通过该指针或引用修改所引用的对象。 Const-Permified会员F.
这个主题大量涵盖了类似的问题：
我写了一些答案，一个问题，一个问题，一个相关问题：
JOE ZBICIAK·3Y &amp;lt;/ SPAN&amp;gt;
3y &amp;lt;/ span&amp;gt;
如果不清楚，我是Const和Constexpr的巨大粉丝。我试图康复我所能的一切。如果它缺少特定变量，那么我知道我在某处修改它。
在函数原型中，参考或指针参数上的const告诉我该函数不会通过该指针或引用修改所引用的对象。课程中的Const-Pervifired成员函数告诉我，成员函数不会以外观可见的方式修改该类的实例。
有些人甚至建议使用lambdas初始化具有复杂初始化的const变量。我在一般代码中有复杂的感情，在函数的身体中说。
但是，我绝对使用Constexpr变量来获得编译时初始化。非常适合在编译时生成查找表！</description>
    </item>
    
    <item>
      <title>在运行时处理代码是什么意思？在程序实际运行之前，必须将所有代码转换为机器代码？</title>
      <link>https://xiangqingw.github.io/posts/what-does-it-mean-for-code-to-be-processed-at-runtime-doesnt-all-the-code-have-to-be-translated-into-machine-code-before-the-program-can-actually-run/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:15 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-does-it-mean-for-code-to-be-processed-at-runtime-doesnt-all-the-code-have-to-be-translated-into-machine-code-before-the-program-can-actually-run/</guid>
      <description>在运行时处理代码是什么意思？在程序实际运行之前，必须将所有代码转换为机器代码？ 回答 1 在标准Perl 5的情况下，它只是解析字符串以将其转换为其内部字节码表示，并且
我很确定我通过使用eval（）在Perl中的运行时使用的函数使用的示例触发了这个问题。但是，eval对Perl不是唯一的。它于1958年回到了Lisp。
eval语句实际上处理在字符串或其他数据结构中保持的块的块，并执行它。它是一个用于将数据转换为代码的桥梁。
语言实现可以解释它，或者它可以在飞行中生成机器代码，或者两者的某种组合。
在标准Perl 5的情况下，它只解析了字符串以将其转换为内部字节码表示，并允许主解释器循环执行其内容。
FANCIER语言实现可以携带刚刚立即编译器，以便在运行时实际生成机器代码。
您还可以找到一个混合的语言实现，执行一些代码作为本机计算机代码，并解释其他代码。我在前一个链接讨论了一些混合动力。
回答 2 本机代码只是另一种类型的中间表示。程序员可以始终在软件中实际上实现一台机器，以将代码编译为自己或确实任何设计的中间表示。这些程序通常称为口译员或虚拟机。
没有原因无法编译本机代码，然后通过运行程序运行。常见的LISP编译器可以在运行时编译常见的LISP程序，即，从常见的LISP应用程序中运行，并在不停止主机应用程序的情况下运行它们。这个想法和山丘一样古老。
回答 3 这些天，如果语言没有编译为NATIV
一点都不。
原始基本实现根本没有编译程序。他们被解释并直接从源代码执行。今天，大量的语言仍然这样做，但它们往往是那些更专业的，在利基应用中使用。
读取源代码需要很长时间，解释它并执行它所说的。许多以后的基本解释器存储了以令授权的形式存储源代码。因此，而不是必须读取和识别每个打印的每个角色，只有一个字节识别。
如今，如果语言未编译到本机的机器语言，则它被编译成一个字节代码。您可以将一个字节代码视为作为不存在的计算机的机器代码。它涉及相同的低水平，但它旨在使该特定语言的运行程序。然后解释字节代码。就像在基本的旧时代一样，有一个名为解释器的程序，读取字节代码，识别它的意义并执行它指定的操作。
字节代码具有另一个大的优势。写一个字节代码解释器比写入全新编译器更容易。因此，如果使用字节代码，则更容易港口语言到新类型的计算机，而不是如果它们编译成本机代码。
很久以前，我的朋友正在尝试在BBC微型计算机上编写编译器。他发现6502个处理器可怕的编译。为了实现高级语言的常用功能，他必须重复代码，使其太大而无法适合内存，或者他必须继续编译过程调用常见例程，这使得它变得缓慢。因此，他实现了一个字节代码解释器，他尽可能多地优化。例如，他发现加载一个小常数非常常见，所以一半的操作码负载短常数，这是测试者测试的第一个OP-Code。因此，加载短常数实际上只有两种或三个本机指令。这样的东西：</description>
    </item>
    
    <item>
      <title>如何在使用C &#43;&#43;程序中编写DO-WISH循环以将字母从Z显示到A.</title>
      <link>https://xiangqingw.github.io/posts/how-do-i-write-a-do-while-loop-to-display-letters-from-z-to-a-using-the-c-program/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:15 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-i-write-a-do-while-loop-to-display-letters-from-z-to-a-using-the-c-program/</guid>
      <description>如何在使用C ++程序中编写DO-WISH循环以将字母从Z显示到A. 回答 1 请记住，某些字符集不会将字母放在良好的连续块中。例如，还有一些EBCDIC系统。
所以，我提供了一个便携式代码：</description>
    </item>
    
    <item>
      <title>如果程序员只拍摄很多代码，那么只有他们理解一个重要的项目，然后离开？</title>
      <link>https://xiangqingw.github.io/posts/what-happens-if-a-programmer-creates-a-lot-of-code-only-they-understand-for-an-important-project-and-then-leaves/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:15 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-happens-if-a-programmer-creates-a-lot-of-code-only-they-understand-for-an-important-project-and-then-leaves/</guid>
      <description>如果程序员只拍摄很多代码，那么只有他们理解一个重要的项目，然后离开？ 回答 1 去过那里，看到了，得到了咖啡杯。
发生了什么是，如果程序员合理良好，那么该团队在这个代码周围工作，并尝试不修改它。传奇大概是为了使这个令人毛骨悚然的，雕刻的代码工作变化。通常，开发人员自己成为一个传奇。人们即使他们不明白他的工作也是赞美他。
最终，需要修改此代码。其他一些工程师来到谁愿意挖掘代码，直到他们理解它。他们发现的是代码是一团糟，而在传奇的原始开发人员正在学习如何使用新的语言成语时是写的，这就是为什么它是一团糟。有时候，它发现这个传奇代码的性能是可怕的，或者代码通常不起作用，因为传奇说它应该是应该的，因此它是微妙错误的来源。
新工程师努力重新推荐传奇代码。这与来自其他DEVS及其经理的恐怖表达式会面，因为此代码是其复杂性的传奇。
公司有这样的代码，因为它们没有良好的开发过程，具有代码审查和模块测试。也许公司在这个代码可以修复之前死亡。
回答 2 这通常发生在较小的组织中，并且通常是代码的类型无论如何都是意大利面。通过代码审查，转速控制和对编程，这类代码不太可能在复杂的项目中飞行。此外，如果您甚至是平庸的程序员并写下很多，你不会留下一些笔记，所以至少你能够通过DocStrings或文档引用它？
当然，如果我们在GitHub / Mercurial之前正在谈论遗留代码，那么你的项目可能看起来像这样：
回答 3 这不会发生。
会发生什么是程序员在他的Paygrade上方创造了很多代码，公司无法找到另一个将为这笔金额工作的程序员。
这发生了很多。
回答 4 这是一个“更多愚蠢的公司”的情况。
运行开发团队的一部分正在有一种方法来避免这种情况。
技术包括配对编程，代码标准和代码审查。测试套件，显示和讲述，博客，吉拉笔记和新雇用的所有帮助。
目标是只有形式的标准相当标准，每个人都很乐意。
回答 5 然后你有一个严肃但可解决的问题。我不得不审查和维护遗留代码。根据离开程序员的技能和纪律，它可以从略微繁琐但直接的任务到绝对地狱的几周内容。
但是，首先要进入该状态，这将是一个严重的管理层。在我的工作场所，必须在签入之前审查每一行代码。如果您处于开发模式，则预计将以不到一周的间隔发生。审阅者不应让审核代码在不理解的情况下进行。
所以，如果有人匆匆离开，你将在一个星期的工作中丢失。如果您丢失，或者困难，超过那个，您有管理失败。
回答 6 就像在任何游戏中一样 - 举一个例子：如果在某些位置所有移动导致失败，那么之前就会出现错误。
当然不要责怪任何人。确定错误，学习和概括他们，并从他们那里学习。
让我们谈谈我的一步。如果程序员只拍摄了大量代码，那么只有他理解一个重要的项目，然后他离开了？
哎呀，我想我最终回答了什么？或者应该做什么？问题而不是发生的事情？一。
怎么了？诚实，几乎没有什么。
那些使这种情况可能的人最有可能擅长领导/管理/企业家/人的技能。
如果这是他们的第一个大型企业，他们将在未来的一段时间内开始一个新的，希望更加谦虚，并且可能更加成功。
如果上述作为一个组织的一部分，那么没有学习课程，那么，机会就是，这个组织已经足够稳定，不能在这样的例行错误之后分开。因为这些Blunders可能在这样的组织中一直发生:)
另一种可能性是，一些见证内心的情况的人真正学到了一些东西，然后，这将有助于使我们的世界成为一个更好的地方，感谢他们对人类的新知识的优势。
但是，抱歉令人失望，但是，坦率地说，对问题发生的答案是：几乎没有。
回答 7 其他人必须了解它是如何工作的。
这就是为什么在该项目进入时，在组织中需要几件事。
文件
坚持编程人员在他们走上时写一些文档。
许多程序员讨厌这样做。工程负责人的一部分是确保他们无论如何。CTO的一部分是为了确保工程负责人这样做:-)
代码评论
作为代码直播过程的一部分，各种各样的东西都有&amp;hellip;&amp;hellip;
回答 8 当然，随着客户需要的能力仍然需要进步
很久以前我读了一个描述抵押贷款驱动的概念的博客。它与Refuctoring有关，它发生时是一件坏事。
简而言之，开发商拥有一所房子。房子有抵押贷款。开发商需要支付抵押贷款，所以他需要一份工作。他的工作意味着他制作软件。完成产品时，可能无法完成他的工作，因为它完成了。因此，他失去了他的工作，不能支付抵押贷款，最后失去了他的房子。所以开发人员会做任何事情来确保他能保留自己的工作。
当然，随着客户需要能够销售或使用产品而是通过Refutations来摆脱开发人员，只有开发人员理解它的工作原理，都无法摆脱进展。因此，他保证有一份工作。
这通常意味着他们不想离开他们的工作，除非他们担心他们的雇主发现这个情节，或者另一个雇主更加愚蠢。这是开发人员如何通过故意糟糕的方式使工作能够糟糕&amp;hellip;&amp;hellip;
这是一个简单的解决方案，这是代码评论。并且有各种编程语言的自动化工具，甚至可以做自动化的代码审查，并判断软件是否可以以简单的方式编写。对于C＃开发人员，该工具将是重置，但其他语言将具有类似的工具。
即使在开发人员离开和离开背后的凌乱代码时，这些重构软件也可以帮助再次读取东西&amp;hellip;&amp;hellip;
所以现在坏的开发人员已经消失了，下一个人必须处理这个混乱。首先，如果代码按预期工作，则应评估。如果是这样，请不要修复它！它可能是一团糟，但如果你试图解决它，你实际上可以打破它。此外，您可能还有其他事情要做。
如果它不按预期工作，那就意味着您开始错误修复。为此，您也可以从重构代码重构，再次使其漂亮。自动化工具可以帮助，但通常意味着您必须检查一下代码，检查它的作用并尝试以更好的方式重写碎片。这是一个可怕的工作，但有人必须这样做。
重构旁边，您还必须立即开始记录一切。文档将有助于，特别是在团队中。
有效地工作的技巧是尝试将项目分开撕裂在单独的模块中，并继续撕裂它​​，直到您有很多小型独立的碎片。这样，项目变为模块化，在移动到下一个模块之前，您只需修复一个模块。
但是在最坏的情况下，完全废除旧代码并从头刮擦可能更有效。对于甚至是优选的小项目。
我曾经不得不修复由某些PHP代码生成的报告，并为此做了一个完整和复杂的混乱。所以我看了代码，看看需要做什么，只是把所有的代码扔掉并以更简单的方式重写它，没有以前开发者写的所有铃声和吹口哨。结果是它终于工作了，表现出色。
要诚实，这是要记住的事情。所有这些开发人员编写的代码都可能是无用的，因为它需要太长时间才能修复。所以有人需要分析它，将其分成较小的碎片，描述每件作品应该做的，每件事都是重构，然后应该修复。或者如果这需要太长，则废料和重写&amp;hellip;
回答 9 这一直发生，最终发生的是别人接管。它昂贵的是，因为更多的时间浪费了弄清楚应该已经被覆盖的东西，并且学习别人的代码的过程是漫长而令人生畏的。花时间学习其他人的代码的程序员是一个程序员，目前没有做出新的和富有成效的工作。</description>
    </item>
    
    <item>
      <title>我要雇用10人为我的操作系统建立一个操作系统，就像Windows的操作系统一样。你认为需要多长时间？</title>
      <link>https://xiangqingw.github.io/posts/i-m-going-to-hire-10-people-to-build-an-operating-system-for-me-like-the-operating-system-of-windows-how-long-do-you-think-will-it-take-them/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:15 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/i-m-going-to-hire-10-people-to-build-an-operating-system-for-me-like-the-operating-system-of-windows-how-long-do-you-think-will-it-take-them/</guid>
      <description>我要雇用10人为我的操作系统建立一个操作系统，就像Windows的操作系统一样。你认为需要多长时间？ 回答 1 我要雇用10人为我的操作系统建立一个操作系统，就像Windows的操作系统一样。你认为需要多长时间？
向反向工程师Windows并生成功能等同物 - 这将运行所有相同的程序并获取相同的输出 - 它们不能在其使用寿命中进行。我不在乎他们是如何10倍 - 他们需要是10,000倍。
要制作一个像窗户一样的系统，我们必须问，多少呢？ 10个主管软件工程师可以在几个月内从头开始编写一个可行的操作系统 - 如果它只在一个硬件配置上工作，就没有任何支持库，并且基本上只耗尽了文本编辑器，编译器和任何应用程序否则想写那些。他们在20世纪80年代的业余爱好计算机附带的那种操作系统。
所需的时间越多，需要的时间就越多。或者你需要的人越多，而且人和时间不可互换。群体越大，效率较低，是大量的因素。
Windows 10中有大约50,000,000行代码。在一个巨大的项目中，主管开发人员/管理人员/测试人员/等的全团队可能是每人一天的平均10行代码，可执行情况。这将是500万人或20,000人年。这巧合大概是微软在Windows中投入了多少微软。
有些人会说微软浪费了很多时间和金钱，他们可以更好地做到这一点。好吧，当然：我在微软几年，在Windows 95上工作，我们确实浪费了不敬虔的时间和金钱。所以也许一个有能力的团队本可以在10,000人中完成它。甚至5,000。仍然是一个巨大的事业。
注意这些都是幅度级估计数。如果您有更好的数字提供，请随时提供，但请不要将我抱到这些确切的值。软件难以安排。
但是，底线：你建议的是完全不合理的。在您甚至考虑为金钱写出现代操作系统之前，在软件工程中获得软件工程的大师，专注于操作系统，或相当数量的行业经验。
回答 2 好吧，祝你好运，希望你有很深的口袋和长寿。你也需要所有这些，即使你的10人是该领域最好的。
目前的Windows操作系统系列（桌面和服务器）于1988年从头开始，使用之前在成功的商业操作系统上工作的团队。从那以后，它已经超过32年了才能发展和成熟，并且已经有数百种开发人员和测试人员在那个时期工作。规模 &amp;hellip;
回答 3 1000年？
我在一家工作的公司工作，在一小部分NT操作系统上，他们可能有8人工作了几年。微软一直在Windows 30年，我知道多年来一些工作被抛弃，但是在开发部署操作系统的情况下有数千年的努力。
回答 4 我不知道，我真的真的不想有任何想法，而是选择我的团队，如果我在我完成之前死了，我会幸福！与你的不和答频道发表评论，让我们谈谈！当谈到愚蠢的宏伟方案这样的时候，我从来没有认为他们会带我在附近的任何地方，只要他们将近野心（和伴随的哈布里斯）都知道没有限制。这是一个可笑的计划，但请算我将在那个风车上挂上我的战争马，因为我是值得的。我会做的第一件事，如果我有自己的方式，将是创造一种用于编写操作系统的新语言。目标是要提出一种非常常见的现代CPU架构（IA64）非常快速地（以及最平行）的语言（以及最平行的），并表现比C，但要更快地执行，但对我而言，以及可能也是其他人）在C ++中写软件是。它渴望需要你？哦，地狱，我不知道，5或10年可能，但我很高兴地吃了结束它可能少于一年。我很愉快地创造（或者，嗯，工作，不断地工作，尝试创建）语言，引导kernal，设备驱动程序，操作系统，库和高度可扩展的东西关系数据库管理系统，以及应用软件全部，但我喜欢与他人谈论设计，我确实勉强认识到我的工作经常改善，至少有点，通过与他人联系。但是我已经解决了谜题和谜题许多同伴在没有成功的情况下尝试解决的问题。我很乐意有同伴的事情就是使用我创建的工具来做事物实现现有的计算机语言和工具和与交互工具的工具和设施现有的外部系统。我不介意编写Web服务器，如果我需要，它可能是有趣的，但我会被陷入困境的地方甚至试图完全收缩所有这些RFC标准文件和规格等。这对我来说不会是一个有趣的时光。实现其他人的规格真的不是我最喜欢的东西，所以如果别人想这样做，如果我创造的话，我会更乐意让他们。某种类型的工具和某人说嘿，嘿，你也可以做到这一点吗？我高兴地做到了&amp;hellip;&amp;hellip;我通常会感到觉得无论是什么是一个非常糟糕的想法或者与我的愿景有什么不好的对于我正在做的事情。但是，这不是普通的。我通常会努力容纳。当然，问题是需要有某种无责任的燃烧费率，因为&amp;hellip;&amp;hellip;真的没有甚至估计这一切都会估计这一切。许多岁月，肯定。在窗户所在的状态下，我最有可能死亡，但我非常愿意..有点难以暂停难以置信在我可以在较短的时间内完成的想法，我会采取非常敏捷的方法。戴着非常敏捷的方法。直接是非常义的工作的oftware尽快，并逐步更新它。但是，但是我不断地报告进度和设计和计划，而且非常渐进的更新，努力让我产生任何关于任何东西的估计减慢我慢慢地贬低了我，而不是产生价值他们所说的空气的任何结果。我们被嘲笑了，我们知道它。让我面对现实并产生关于某事的估计就像指向风波到使徒彼得一样的风暴，因为他在风暴中走在耶稣里。你说你现在已经完成了这一点！什么！？哦，我最肯定没有说这样的事情孙子将完成它，大声笑，但是，如果你能给我买母马来骑行，锋利的拖把挥动，以及锡箔盔甲穿，我将在那个风车上收取所有我的价值。我没有刀具链的发展经验，但是&amp;hellip;&amp;hellip;只是意味着我没有太多的先入为主的想法，对吧？就像约翰保罗琼斯一样，我知道我知道我知道我是这位工作的人。我知道它是球的球。
回答 5 它不会发生。经验性的程序员将拒绝加入你的管道，这会给你带来并不真正知道他们正在做什么并低估像这样的项目的难度。如果孩子们非常聪明，那么才华横溢，有很多能量，他们最终会烧掉你的。这是为了你。这是假设你规定一切都必须从头开始完成，并且你足够的验证，你可以验证。如果不是，那么一些聪明的程序员可以采用现有的操作系​​统代码，修改它一点并说出。可以使用的服务器代码：
如果允许从上述任何源中使用现有代码，您可能会在1个月到2年之间查看时间帧，具体取决于您对此项目的确切要求。您有更好的要求，如果你想要什么好。这也是假设你的程序员是好的系统程序员。但是让我们假装从头刮擦所需的一切。上面提到的，孩子们将失败，最经验的程序员将拒绝&amp;hellip;&amp;hellip;
因此，您唯一机会从头开始构建一个完全新的Windows OS，是聘请超级经验丰富的程序员，又名实际上拥有从划痕构建真正生产操作系统的经验。这是一个非常小的独特个人，和金钱独自不足以让他们引诱到你的项目。你需要一辈子的销售音调来说服他们加入你的神圣的十字架。顺便说一句，这就是Windows NT很久以前建造的Windows。盖茨·盖茨和他的RAGTAG集团的DECACTOACTS构建一个改变计算的操作系统。他们没有完全按照计划才能完全相同，而且骑行着，你可以在Showstopper中阅读要在Microsoft.as作业创建Windows NT和下一代，您可能需要首先读取那本书封面到封面。不要担心，这是一个很好的阅读，我强烈推荐它。最终需要5年建立，明显长于预期！Cutler相信这部分问题是MS在项目上放了太多人，他实际上可能会更喜欢你的小女孩球队的10个程序员，假设他们是战斗硬的操作系统程序员。其他问题是窗户遭受特色蠕动，这是一个以令人难以置信的雄心勃勃的设计开始。今天的Windows NT的原始设计是今天的毫无意义，只能为艰难的工作增加不必要的复杂性。对于案例，NT最初是设计用于模拟多个现有的操作系​​统像一个变色块。这是必然的制作一个极其灵活的内核，几乎没有使用它的假设。当然，如果他必须终于开始，请肯定会做出不同的设计。但是Cutler也不是GUI人.CCreating Windows GUI（或类似的东西）将需要一个不同的群体，因为GUI人们往往与HardCare OS内核人员一起重叠。所以我的猜测你需要10个硬核OS Kern EL程序员，还有一个额外的5个GUI程序员。所以你真的想要15人，而不是10.然后从2-10年内到达任何地方。大范围是考虑到您的确切要求的不确定性，以及是否正确完成了初始规划.ALSO，10年是关于在放弃之前要期待任何人在此之前工作的最长时间。在结束时，您将拥有类似的Windows操作系统，但它实际上不会是Windows兼容。第1天，它将缺乏缺乏数百个不同的硬件设备的驱动因素，因此如果您不希望实验只是巨大的浪费，则更好地拥有业务策略来弥补。时间和金钱。苹果的策略是制作自己的硬件，并声称它比其他人都要更好。您最好的选择可能是与Linux驱动程序创造兼容性，但我不确定如何或为什么要在不使用现有的Linux代码的情况下做出怎样或为什么如果你使用任何现有的Linux代码，那就是n o速度完全来自划痕。即使你得到了在原始窗户上工作的实际程序员，也是因为我提到的，微软也有良好的律师。他们所有的前者都有良好的律师，即使你得到了工作的实际程序员，也是如此。目前的程序员知道.Also，ReactOS已经存在。
回答 6 哪个Windows版本？
1.0？3.1？NT 4.0？10？
如果你真的很感兴趣，你会更好地询问那个恰好做的，反应。
回答 7 这取决于您对我的操作系统的定义，也可以像Windows一样。您是否希望从非常乞求的乞讨或者您可以修改某些现有操作系统？您是否只想要一些看起来像Windows的东西，或者您是否要求100％与Windows程序兼容？你只想要你和你目前的电脑，或者你想拥有你没有听到的硬件的广泛支持吗？
只需要几周时间才能修改现有的Linux发行版，看起来像Windows。它需要一生的10个程序员，使操作系统从无到与Windows和很多硬件完全兼容，他们将失败，MS将为您收取大量IP违规的资金。
回答 8 Windows 10包含大约5000万行代码。如果一个人每年250天每天写一分钟八小时的一分钟，他/他将拒绝60万行。所以10个人可以编码600万行，所以这个过程需要八年超过八年，假设没有虫子（是的，右）。
但这可能是容易的一部分。写入操作系统后，您必须为其编写应用程序：浏览器，电子邮件客户端，办公室套件，文件管理器，媒体播放器，输入包，打印机驱动程序等。
所以，简而言之，你不会足够长时间看到它。
回答 9 Windows 10种操作系统需要十万人。高薪的人小时。</description>
    </item>
    
    <item>
      <title>程序员是否知道他们使用的程序是如何编程的，并且最终它们都归结为电气冲动的二进制配置？</title>
      <link>https://xiangqingw.github.io/posts/do-programmers-have-any-idea-how-the-programs-they-use-are-programmed-and-how-eventually-they-all-come-down-to-binary-configurations-of-electrical-impulses/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:15 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/do-programmers-have-any-idea-how-the-programs-they-use-are-programmed-and-how-eventually-they-all-come-down-to-binary-configurations-of-electrical-impulses/</guid>
      <description>程序员是否知道他们使用的程序是如何编程的，并且最终它们都归结为电气冲动的二进制配置？ 回答 1 有些人。回到20世纪70年代，当我在BYU获得计算机科学的BS时，我需要在数字逻辑设计（布尔逻辑，和/ NAND /或/或门，逆变器等）中采取课堂（CS 220）：
在该类的实验室中，我们将使用机架式电路板和电线来构建简单的电路，例如，4位加法器：
我还需要在计算机架构（CS 380）上进行课程，这是计算设备的硬件架构的高级概述。
甚至与众不同，真正的aha！当我的高年级来临时刻来了。我在数字逻辑实验室中担任TA，以支持正在服用CS 220的其他CS学生。然而，在实验室里有一名电气工程学生使用相同的机架式电路板和接线来构建4位从相同的组件中提供微处理器，完成程序计数器，指令获取，指令解码，寄存器和读/写存储器。他正在努力在他的实施中挣扎，所以问他是否可以通过它走路，希望弄清楚出了什么问题。因此，他解释了他的整个实现，将一些指令和数据加载到一些存储器位置，然后通过交换机开始踩下时钟周期：获取指令的位，然后通过包括手工制作的CPU的电路发送它们（例如）造成实际结果。
这是我的工程启蒙的一刻。我已经了解了所有数字逻辑电路的工作;我已经理解了如何在二进制文件中编码可执行软件（事实上，我的第一年的编程类别都是装配和机器语言）;现在我目睹了时钟周期的时钟周期，后者是如何由前者加工的。严重地：
我相信有数千个EE和CS [补充：尤其是计算机工程]学生经历了类似的经验。但是没有数字逻辑和计算机架构背景的开发人员可能具有一般的想法，但实际上并不知道逻辑门的工作原理或计算机架构的低级基础知识。
P.S. EE学生在中途中发现了他的错误，向我解释了他的项目。我后来意识到这是软件最有效的调试技术之一：向您的办公室询问另一个程序员，并开始解释您正在努力解决的错误。我发现大约50％的时间，我同样地通过中途停止并说，没关系;我看到问题是什么。另外50％的时间，程序员所说，你想过这个吗？我像笨蛋一样拍我的额头，或者她说，嗯。棘手的问题。和叶子。
回答 2 程序员一般？可能不是。程序员是一个低酒吧。
在ee和cs中有一些背景的程序员？很有可能！
我个人至少可以在底部缩小到晶体管电平，并且可以设法在顶部自己编写玩具编译器。哎呀，我做了两种不同课程的人。我实际上在得到了Fabbed的晶体管级设计了一个芯片，我将一个编译器编译了一个编译了Cool95到MIPS。
不过，请不要问我关于半导体物理或写一个花哨的GUI。
好吧，看，呃，这个能带之间的能带隙，呃&amp;hellip;&amp;hellip;💨
*抛出烟雾炸弹并消失
程序员一般？可能不是。程序员是一个低酒吧。
在ee和cs中有一些背景的程序员？很有可能！
我个人至少可以在底部缩小到晶体管电平，并且可以设法在顶部自己编写玩具编译器。哎呀，我做了两种不同课程的人。我实际上在得到了Fabbed的晶体管级设计了一个芯片，我将一个编译器编译了一个编译了Cool95到MIPS。
不过，请不要问我关于半导体物理或写一个花哨的GUI。
好吧，看，呃，这个能带之间的能带隙，呃&amp;hellip;&amp;hellip;💨
扔烟炸弹并消失
回答 3 虽然我相信那里必须存在的东西，但我所知道的所有计算机科学程序都需要架构课程。建立一个加法器是一种段落权。然而，我们大多数人都不会花很多时间考虑它。有时它可以产生很大的差异，这就是为什么你拥有像Joe Zbiciak和Shane Ryoo这样的专家。但是，大多数时候，操作细节无关紧要。我曾经在企业软件开发上工作，解决方案从来都不是在硬件级别中充分利用任何东西。我从未有任何特殊的问题找到了瞬间运行的应用程序，因为它以高级语言写得不好。考虑硬件确实必须解决的问题，但它们是专业化的。
当然，并非所有程序员都有任何正式的CS背景。事实上，大多数最终用户程序员甚至没有靠近计算机科学背景。操作电子表格中的公式时，这是一种编程形式。有人制作一个电子表格跟踪，我不知道，有幻想运动队的统计数据，不需要了解和不在乎。已经学会了工作的人，或参加了训练者，可能对硬件级别的发生时不太了解;同样，这可能很好。
此外，虽然我有一个软件的机理操作的心理模型，但是与现实松散地连接的计算机，而每个人都有一定程度的理解。对我来说，晶体管是魔法。我的意思是，我知道他们遵循物理属性，但我真的不想知道晶体管如何工作。
回答 4 从编译器设计到电路基础知识的一切都在70年代覆盖了我的本科CS课程;我不希望他们现在要离开任何东西。
它是没有电气工程，所以我真的无法从头开始建造一台电脑，没有几课程。
现在，这些信息如何有用于软件开发人员作为诚实的商人？好吧，我从来没有用过它。
回答 5 是和否。我知道从电气冲动到编译器。在大多数情况下，我可以猜测如何写入问题。但我也知道人们以我无法猜到的方式奇怪地或抽象地写下事情。有诀窍可以让事情变得更好或处理错误。
个人程序员对他们的理解有所不同。拥有5-10岁的经验的专业软件开发商将更好地把握，而不是写第一计划的人。
其中一个好的事情是开发软件需要这种知识。有人可以学习Python，拉在各种库中，并写一些非常有用和有趣的软件。他们不需要知道图书馆的运作方式是如何工作的。
回答 6 我从概念（程序本身）到Dock到它编码为的语言，然后通过编译器到机器语言，或通过解释器。 （解释程序 - 脚本 - 永远不会变成机器语言 - 翻译是机器语言，程序是解释器使用的数据。）
我还了解程序的机器语言版本如何，馈送到CPU（或解释器）的那个使CPU进行不同的操作。 （我的教育是硬件。）
授予，并非所有程序员都了解这一切，但最明白程序如何运作，编译器或解释器如何工作，以及最终产品 - 二进制文件（机器语言）或解释文件。
回答 7 只有那些研究数字逻辑和电子产品的人。
我知道编写Web应用程序的程序员，用于不了解Web本身的基础协议：HTTP！它们实际上是使用框架将所有这些隐藏到它们可以组装UIS和后端的点，将生成JavaScript，而不是有关其系统如何运行的有福的线索。
因此，如果我们在没有线索的情况下有Web开发人员编写Web应用程序，为什么您认为程序员通常有一个关于在裸金属水平上发生的线索？甚至知道CPU电路实际上是由金属制成的？甚至看到处理器的汇编语言他们的东西运行？最后，我将承认我从未见过用于电力芯片的装配说明，我的许多东西都用完了。
不，95％不知道，老实说，不在乎。它只是有效。
回答 8 我通常不会考虑该程序在较低级别上处理，例如，如果我在Java中编程了一些东西，我不会考虑JVM或者我在C中编程我没有考虑它运行的汇编代码。可能有这种情况有趣，但如果您对某些东西进行编程，较低的级别无关紧要</description>
    </item>
    
    <item>
      <title>谁是我们时间最好的程序员？</title>
      <link>https://xiangqingw.github.io/posts/who-is-the-best-programmer-of-our-time/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:15 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/who-is-the-best-programmer-of-our-time/</guid>
      <description>谁是我们时间最好的程序员？ 回答 1 我见过很多计算机科学家们谈到了，我认为很多都是超人才。但我想把一个名字扔进我认为是（可以是可以是我们时代的最佳程序员的帽子。
约翰卡克
他几乎在博彩行业中留下了很多。对于那些不熟悉的人来说，他是ID软件的联合创始人和领导程序员 - 维基百科
聪明和效率的深度进入游戏和引擎之后的一个（特别是厄运和地震）只是惊人的。从引擎，图形和Quake，TCP / IP层做出所有事情。
我知道不止一个人专门进入软件，因为从卡马克的灵感。
更多的是读到Carmack而不是在一个答案中适应，但他的John Carmack - Wikipedia页面上有很多链接。从奥运会到他写的一些算法，他只是绝对不可替代。一个真正的恒星程序员。
回答 2 Gennady Korotkevich.
这家伙现在赢得了谷歌的编程比赛，现在连续了6年。在11岁时，他能够在信息学中获得国际奥林匹克的银牌：即使是最好的高级软件开发商和一些计算机科学教授无法实现的壮举。然后，他在接下来的几年内进行了金牌，连续三年实现绝对第一。有关他的壮举的更多信息，请检查他的wiki页面。
这家伙是编程，Magnus Carlsen是棋子或者TELENCT TAO是数学。他甚至超过11岁的最佳程序员，在过去的几年里，没有人能够接近他的编程技能。大多数时候，我希望一个人在他的田地中最好的一年，那么荣誉将在第二年去另一个人。这是几乎所有其他科学（数学，物理等）的情况，而不是这个家伙，曾一直在过去十年中排名第一编程器。
现在尽管他的技能作为程序员，但他可能不是最成功的程序员。事实上，他没有从竞争力的编程中做得很多。一些其他答案指向游戏开发人员或软件创始人，用于创建新的和革命软件的技能。然而，这些家伙不是最好的程序员，Gennady会用闭着眼睛击败他们的任何一个，这些家伙只是最革命性和有影响力的程序员，这个问题没有要求的东西。
编辑：我想回复人们说Gennady不会成为一个好的软件工程师，因为他才熟悉竞争力的编程。谷歌的访谈所有在竞争性编程类型的问题而不是技术方面都会测试您的原因。您可以随时学习的技术资料，您了解这些内容的速率与您是竞争力的程序员有多好相关。要把它作为一个例子，如果你把Gennady放在一个良好的软件工程师用a，b，c functionalty，gennady可能只会遇到用于新语言的问题，然后才会更快地代码功能。
回答 3 Knuths影响是深远的。识字编程，归因于Knuth，基本上包含计算机程序应该b
唐纳德Knuth，双手。
他是一个如此怪人，他从一六个批量工作中花了10年的缩写，这是一个能够展示了展示书中所需原则所需的公式的排版语言。这不是一个伸展，说他单枪匹集地帮助将计算机科学定义为真实的东西。
如果您最好的程序员没有对计算机编程的艺术写入六批课程，请返回两步。
Knuths影响是深远的。鉴于Knuth，鉴于Knuth的识字编程基本上坚持不懈地通过眼睛朝着人类的理解而设计的计算机程序，而不是计算机可读性。他坚持认为，沟通的行为清楚地向其他人提供清楚，将改善工作本身。
这是一个关于着名的编程竞赛的故事[1]其中Knuth击败了传奇的John McCarthy（AI Proponent和Lisp发明者）
[1] 安德鲁：一个故事指出，你曾经在斯坦福（我相信）上进入了一个编程竞赛，并且您提交了一个编译后正确工作的获奖条目。这个故事是真的吗？在那种静脉中，今天的开发人员经常构建编写小型代码增量的程序，然后立即编译和创建和运行单元测试。您对软件开发的方法有何看法？
唐纳德：你听到的故事是典型的传说，基于一个小核的真理。这是实际发生的事情：John McCarthy在1971年决定有纪念日编程比赛。除了我，除了我在斯坦福大楼的山上工作，除了我的所有参赛者，使用等待时间分享系统;我在主校园里倒了，我唯一的电脑是我必须打牌的大型机，并以批处理模式提交他们进行处理。我使用Wirth的Algol W系统（Pascal的前身）。我的程序第一次不起作用，但幸运的是，我可以使用Ed Satterthwaite为Algol W的优秀的离线调试系统，所以我只需要两次运行。同时，使用等待的人们无法获得足够的机器周期，因为他们的机器如此过载。 （我认为使用那种现代方法的第二次终结者在我提交了旧的方法时大约一个小时来了。）这不是一个公平的比赛。
以下是他写的文件的一些链接。要查看它们，您将需要副本调整程序Tex。
此外，他拥有一个巨大的管风琴，安装在他的房子里，一个疯狂的科学家的巢穴。
Donald Knuth的器官比你的更大：这位十六级机关由加利福尼亚州洛杉矶的Abbott And Sieker设计和建造，是他们的“Opus 67”。[2] &amp;lsquo;它有812个管道，分为三个部门。
[2] 向Phillip Remaker指向最佳XKCD的道具
现在这是我Grovel用于打破4096屏障的障碍的部分。如果您知道第12个权力是什么，请覆盖G-D的热爱。编辑：我们刚刚通过4096年02-10-20-20-20-20-2020，赞美到von Neumann！
脚注
回答 4 在我的时间世界十大程序员（实际上所有时间）
以下是全球世界十大程序员列表.1.Dennis Ritchie
Dennis Macalistair Ritchie是一位美国电脑科学家，帮助塑造了数字时代。他创建了C编程语言和长期同事Ken Thompson，Unix操作系统.Ritchie和Thompson于1983年收到了ACM的图灵奖，汉明1990年的IEEE奖牌以及1999年的克林顿总统的国家技术奖章.Ritchie是朗讯科技系统软件研究部门的负责人，当时他在2007年退休了
Bjarne Stroustrup是一位丹麦电脑科学家，最值得注意的是，广泛使用的C ++编程语言的创作和开发。他是一位杰出的研究教授，并拥有哥伦比亚大学的访问教授的德克萨斯A＆M大学的计算机科学工程椅上，并在摩根斯坦利工作.</description>
    </item>
    
    <item>
      <title>为什么Minecraft迟到了？它得到了〜4.8亿行的代码，为什么它可以跑得这么快？</title>
      <link>https://xiangqingw.github.io/posts/why-doesnt-minecraft-lag-more-its-got-4-8-billion-lines-of-code-so-why-can-it-run-so-fast/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:14 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-doesnt-minecraft-lag-more-its-got-4-8-billion-lines-of-code-so-why-can-it-run-so-fast/</guid>
      <description>为什么Minecraft迟到了？它得到了〜4.8亿行的代码，为什么它可以跑得这么快？ 回答 1 程序中的代码行数相当毫无意义。
例如，只要我每隔108分钟点击执行键即可，我就可以坐在我的舱口编写代码中。如果前两行代码打印Hello World然后退出，那么它仍然会很少滞后，尽管可能是数十亿的代码行，即使我在旧修改的苹果IIE上写这个代码。
现在这是一个极端（更不用说愚蠢和不切实际）的例子，但这一点仍然有效。尽管托特&amp;hellip;&amp;hellip;
回答 2 当MINECRAFT LOADS时，它在屏幕右上角显示黄色的有趣的飞溅消息。其中一个是4815162342代码行！
这是一个笑话。这是对曾经受欢迎的引用，现在大多数忘记电视节目丢失了。
根据您的统计方式，似乎在150k和600k的代码之间。这似乎更加现实。
对于纪录：MINECRAFT非常忽视 - 有时是痛苦的。
但是，代码行数是滞后的非常边缘因素。不要导致更短的代码更快的想法。通常添加更复杂和更优化的算法
当MINECRAFT LOADS时，它在屏幕右上角显示黄色的有趣的飞溅消息。其中一个是4815162342代码行！
这是一个笑话。这是对曾经受欢迎的引用，现在大多数忘记电视节目丢失了。
根据您的统计方式，似乎在150k和600k的代码之间。这似乎更加现实。
对于纪录：MINECRAFT非常忽视 - 有时是痛苦的。
但是，代码行数是滞后的非常边缘因素。不要导致更短的代码更快的想法。添加更复杂和更优化的算法通常会使应用程序更快。
回答 3 因为应用程序的性能不依赖于它具有的代码行数。并非所有这些行都是始终使用的。那个数字可能是谎言。程序的性能具有大量变量，如您的PC的规格，计算量等。如果您想实际了解它，您可能想查找时间复杂性，并使用大O和其他符号计算它以及如何工作。
回答 4 一段代码的长度几乎与之运行的速度几乎没有任何关系，或者它运行了多长时间。
我研究的一个区域是结构拓扑优化，它产生如下所示：
这是解决问题的主循环。它是〜40行代码，我可能会更短：
如果我要求它解决一个小问题，我的笔记本电脑可能需要20分钟。如果我要求它解决大问题，超级计算机上需要36个小时，并吞噬60 GB的RAM。这也是真正的记忆力，因为我没有写入该程序充分利用系统，而且我可以使用多少内存 - 我在一次运行使用Tberabytes的代码。
实际上，这4行无所作为，但将问题切换到不同的库，因此我可以在更少的内存中解决它。我可以用1行替换它们，这会四边形运行时和内存使用情况。
代码的长度几乎与其运行的快速或顺利进行的任何关系。
回答 5 程序中的代码行数相当毫无意义。
例如，只要我每隔108分钟点击执行键即可，我就可以坐在我的舱口编写代码中。如果前两行代码打印Hello World然后退出，那么它仍然会很少滞后，尽管可能是数十亿的代码行，即使我在旧修改的苹果IIE上写这个代码。
现在这是一个极端（更不用说愚蠢和不切实际）的例子，但这一点仍然有效。尽管代码总额，但该代码并不同时运行。大多数只是坐在那里等待被叫。
这里的一般规则是：
最快的代码是从未运行的代码。
你越早了解到这一规则，你越早学会写一个可靠的程序足够可靠，每108分钟自动运行执行功能，所以我们不必在那里手动推动它，并且所有人都越来越快地下车！
你在说什么？什么岛？你可能会问。
这是对电视系列丢失的引用。 （本答案的一些元素。）有一个神秘的系列数量，在各种情况下保持出现。
看起来熟悉？
将其全部挤在一起：4815162342
编程的规则仍然有效：最快的代码是永不运行的代码。
回答 6 一块软件中的代码行数告诉您它的运行有多快。
说你有两个算法
1）茶
2）计数
现在案例1是延长一组指令
一块软件中的代码行数告诉您它的运行有多快。
说你有两个算法
1）茶
2）计数
现在案例1是一系列更长的指令，并且可能会越来越长，更详细，但我们可以同意2）将需要更长时间
回答 7 抛开实际的代码行数，更多的代码行不会意味着速度。您不会每帧执行每一行代码。有些你执行多次帧。你可以拥有2万亿行的代码，但如果他们不是被称为，它就没有重要了。它就像在书上阅读一段 - 它不陈得那么那本书的大大，你读你的段落并没有减慢。</description>
    </item>
    
    <item>
      <title>乏味如何使用早期电脑？</title>
      <link>https://xiangqingw.github.io/posts/how-tedious-was-working-with-early-computers/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:14 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-tedious-was-working-with-early-computers/</guid>
      <description>乏味如何使用早期电脑？ 回答 1 回到过去的旅程可能是回答问题的最佳方式。我们遇到的第一个问题是什么/被认为是计算机？是这
或者也许是这？Cannon Fax 520大约1985年
或者它在这里开始了吗？在1981年的空间入侵者。对于我来说，这是第一个真正的计算机。家中的可编程机器。装备64种颜色，64种颜色，64kb的RAM，MIDI声音驱动器和连接录像带驱动器的能力在1982年，它将在未来5年中占主导地位的家庭娱乐世界。虽然主要用于玩游戏，它可以以基本编程为基础，是第一个带有键盘的家庭娱乐系统。MANY人们认为这是第一个真正的家电脑和几年没有真正的竞争，这是直到IBM和Apple开发了他们的家用PC版本，Apple Macintosh和IBM 286，它在Microsoft DOS上运行，并带来了640KB的RAM和40MB难以带来40MB Drive.a几年后，可能是第一个在公告板（BBS服务）上创建了第一个电脑MEME，显示比尔盖茨称为640K应该是足够的RAM.Contrast，与当今的PC一起带有16GB RAM作为标准的PC和幽默变成了自我议员Wever，它并不像任何人确切地知道信息革命是在哪里，或者今天将能够有哪些电脑能够，这只是一种在一段时间内分歧的增量步骤。做改变我们的生活是什么在机器的速度下，更多的实用性和产出质量更多。例如，1984年的现代办事处可能已经配备以下;
热印刷传真机，一系列从口袋的计算器，用于工人，带有打印卷，Xerox复印机，一个点阵打印机，一个dictaphone机器，王文字处理器和IBM高尔夫球电子打字机，可能一个IBM 286计算机运行Lotus 123电子表格和PABX手机系统。大约1980年的PABX手机系统。这些机器对于预制件所需的功能并不缓慢或乏味，只是每个功能所需的不同机器和最静止的功能所需的技能是预制函数的技巧。结果远低于最佳的结果.PhotoCopy质量差，打印机生产的像素化图像，热纸印花褪色等。然而，知道这一切，结果永远不需要Optimal.Everyone是如果你喜欢在级别的比赛领域。办公室在办公室中的PowerPoint取代了几十年的手绘，塑料架空投影仪
创建和提供PowerPoint介绍只需要将一个高级投影机演示介绍，所以在80年代即可举起。演示文稿的质量是改进的以及提供它所需的设备的大小和数量。 80年代的商业主管有一个Filo传真，一个计算器，寻呼机，书写垫和一个勃朗峰，一张手机录音机，一张支票簿和一个装满塑料卡的钱包，穿着模拟手表，而在其中汽车听到一个盒式卡带，储存60分钟的音乐，并使用街道目录在城市中导航。90年代早期的寻呼机和录音机被手机和CD.today替换，所有这些都已用一个智能手机替换.A旅行者在90岁的携带旅行者支票，外币，信用卡，驾驶执照，带有个人电话号码的小黑书，手机，iPod和扬声器，街头地图，相机和一些额外的卷O. F Film.Maybe在商务旅行中包含一些架空幻灯片，一个计算器几个软盘。Home Entertainment本身是一个整个行业。声音系统包括一个音响系统，包括一个转盘，一个卡带播放器，一个无线电调谐器，一个无线电调谐器放大器，CD播放器，扬声器和当然是乙烯基唱片，盒式唱片和CD的录像带。需要一个阴极射线管电视（如果你有钱42cm的钱），游戏领事，VHS Video Player，DVD播放器环绕声系统以及本地视频库的成员资格。所有这些设备和更多已被这两个设备替换。所以，这并不是那么早期的计算机是乏味的，他们确实设计了它们的设计和预期。
回答 2 相当乏味但当时，它似乎并没有任何比较。我的大学是第一个拥有电脑的私营企业之一，我们不得不预订一个时代的时光，以一种称为Iitran的语言，它可能也不被称为一种语言，本质上是原始的计算机十六进制代码，然后等待一个星期的打印输出。考虑到准备代码的时间，打出100张卡的时间和获得结果所花费的时间，在今天的思想中，它是浪费时间，但后来，有电脑的计算与使用幻灯片规则和表格和公式的参考书进行操作是一个进步。
当我进入商业的时候只有5年后，UNIX是选择的OP，然后通过那时对代码进行高级语言，这些东西比使用原料十六进制更容易。我买了什么是迷你计算机成本为50万美元，没有硬盘，但有2个软盘和256k的内存，令人惊讶的是，它是一个多用户支持5终端，它可能会这样做，由于Unix工作的方式&amp;hellip;&amp;hellip;管道几十个小壳进程，每个小壳过程一次加载到内存中，以便执行任务，然后使用下一个过程的结果来使用并执行任务等。这是惊人的256k的内存可以实现，介意你，它是习惯于在软盘上输入数据然后运行程序过夜，以便在第二天早上有结果，即使那么，有时候一夜之间也不够处理存储在1.2MB软盘上的所有数据。但是，再次，然后，这是尖端的技术&amp;hellip;&amp;hellip;一台可以坐在桌子上的电脑，有5个终端为员工同时输入数据。计算机还可以通过调制解调器和电话线路进行文字处理并连接到其他计算机&amp;hellip;&amp;hellip;它看起来像魔术那样（1975）。比较我们现在拥有的东西，记住旧系统的乏味和无情，我想知道为什么会烦恼地使用这些计算机，但是，正如我在开始的那样，当没有什么可以比较的东西，那么你似乎没有什么？节省时间和使用它们看起来并没有乏味。
回答 3 你从错误的角度看它。
任何计算机，无论从哪一年，那时是最新，最伟大的！
所以我的第一台电脑，一个8088，一个8位，16MHz，我是最伟大的电脑，当我在1985年获得它时，我可以希望。我在DOS中跑了一切。
我的下一台计算机，最初被释放为80386及以后重命名为I386的Intel 386是1985年推出的32位微处理器。我在1988年购买了一个，它ran Windows 2.0。
当Windows 95出来时，我知道我不得不升级&amp;hellip;&amp;hellip;
回答 4 但他们不是早期电脑。他们是最新的令人兴奋的令人兴奋。
在70年代早期，我在打卡的第一个节目中写了一篇关于当地大学的学校外展计划的一部分。一辆面包车每周打动一次，拿起我们的卡片并提供最新的输出。
这是一种令人兴奋的革命性技术介绍，即使读取eval-Print-Loop花了168小时！
所以让我的双手放在我朋友的BBC橡子上有磁带机的巨大前进。如今，我们考虑了冰川的负载时间，但它们比访问远程大型机更快的级别。我们很快有软盘驱动器，如这些，而且事情甚至更快。
然后我建立了我的第一个生意，并在Atari Mega ST上奠定了一个国王的赎金，带有异国情调的2兆欧，奢侈的20兆硬盘（从内存开车，那些日子里的£450是严重的Moolah）。
你可能没有意识到的是这是一个高度功能的机器。然后，开发人员知道如何为有限的资源编码，而且它像风一样奔跑。
当我在一个节目中看到Windows 1的演示时，它看起来很迟钝 - amiga，杏，atari和mac都远远优越 - 特别是杏子，这是为了死&amp;hellip;
没有版本的Windows接近了任何这些机器的响应 - 他们是一种乐趣。我爱上了我的atari。如果有的话，用户体验已经倒退了。 Windows的主导地位是销售的胜利，无技术。
我的小atari marvel运行了电子表格，会计计划，SQL数据库，FTP，Telnet，电子邮件，公告板，我曾经使用过的最佳WP，一个能干的DTP包，矢量和位图图形包，游戏，MIDI音乐&amp;hellip;&amp;hellip;和有良好的编译器选择 - 我能够与汇编程序，基本和C一起玩。
除了没有发明的www外，我的80年代中期Atari可以做几乎我今天所做的一切。从那时起，改善一直是增量而不是革命性，尽管我的高端HP工作站，今天的臃肿软件实际上实际上运行速度较慢。
然后我设法到了一个廉价的前展示 - 史蒂夫乔布斯的湿梦，可能是有史以来最性感的机器。到目前为止，它的思想是吹来的。
我觉得剥夺了吗？你怎么认为？我以为我已经进入了计算机天堂。
然后我正在浏览Cern FTP站点的一个晴天 - 他们是一个旁边的社区的存储库 - 并发现一个名为www的神秘文件夹。</description>
    </item>
    
    <item>
      <title>低代码会替换开发人员吗？</title>
      <link>https://xiangqingw.github.io/posts/will-low-code-replace-developers/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:14 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/will-low-code-replace-developers/</guid>
      <description>低代码会替换开发人员吗？ 回答 1 不。
低码的想法来自对编程的严重误解。它假设编程的困难部分是代码部分。
不是。任何人都可以在语句的末尾键入分号。任何人都可以平衡打开和关闭括号。任何人都可以键入int main（）{返回0; }
对编程有挑战性的是在手头上看到问题，精神上构建解决方案，并清楚地将所述解决方案传达给计算机。语言只是你这样做的工具。没有低代码解决方案将改变。对于相关的XKCD
而且喜欢编程angana
不。
低码的想法来自对编程的严重误解。它假设编程的困难部分是代码部分。
不是。任何人都可以在语句的末尾键入分号。任何人都可以平衡打开和关闭括号。任何人都可以键入int main（）{返回0; }
对编程有挑战性的是在手头上看到问题，精神上构建解决方案，并清楚地将所述解决方案传达给计算机。语言只是你这样做的工具。没有低代码解决方案将改变。对于相关的XKCD
而且与编程语言一样，没有低码解决方案可以消除精神上构造和清楚地传达解决方案的必要性。您可能有一个没有代码的工具，但正如我们已经建立的那样，这不是难点。
回答 2 它取代了一些开发人员，这已经发生了 - 在某种程度上。
我在想WordPress，Wix，Squarespace，Shopify和其他这样的事情。
使用这些系统，您可以获得多年的开发时间的输出，让您仅定制它并填写内容。
在这些系统为最终用户工作的位置，您可以说已经替换了一些开发人员角色。该网站建设者特别擦除了网站开发的低端。
低代码解决方案仅与它们柔性一样好，而且在其中擦拭。在某些时候，您的低代码解决方案不允许您
它取代了一些开发人员，这已经发生了 - 在某种程度上。
我在想WordPress，Wix，Squarespace，Shopify和其他这样的事情。
使用这些系统，您可以获得多年的开发时间的输出，让您仅定制它并填写内容。
在这些系统为最终用户工作的位置，您可以说已经替换了一些开发人员角色。该网站建设者特别擦除了网站开发的低端。
低代码解决方案仅与它们柔性一样好，而且在其中擦拭。在某些时候，您的低代码解决方案不会允许您完成所需的内容，而无需高代码或自定义构建。
回答 3 低代码会替换开发人员吗？
不，他们会尝试，它会反馈。难的。这是一个经理湿梦，可以用最低工资训练猴子写软件。但这不起作用。
软件开发不是关于生产代码。这是关于控制复杂性。如果可以这样做，您可以理解使用低代码开发软件。但如果你能做到你可以写作代码。
回答 4 不。
在我上一份工作中，我与Adobe Meverions Manager合作：一个低代码系统（我认为）。这是一个噩梦。而不仅仅是对我而言。对于我们的内容生产者也是如此。一些问题：
您可能会建议AEM只是一个低的低代码系统。你可能是对的。人们可以做得更好。
但是所有努力都进入了简化配置（真正低代码）的努力没有进入稳定性和效率。
系统的低代码方面非常有限。一旦踩到AEMS Wheelhouse之外，你必须在少于理想的平台上写下真正的代码和你的工作。这种限制是低代码系统中固有的。
我不是说低代码系统没有使用，如果你不小心限制你的域和你的架构，你会花更多的时间编码低代码系统而不是适当的拱起高码系统。
低代码系统是工具。但是你需要将它们用于合适的工作。如果您尝试使用桌子时使用桌子，最好是您的工作不佳。在最坏的情况下，你将伤害自己。
回答 5 多年前我在CAD / CAM软件领域并处理了很多NC / CNC机床。制作电脑式车床，轧机和电线EDM的公司告诉他们的客户，他们可以购买100k美元的机器，雇用一台高中辍学，以便射击他们的高价熟练工工具制造商。有些人试过这个。许多人失业了。当您为机器支付这么多时，您希望充分利用它，因此它为您提供最好的高度培训的员工。
所以，即使低码/否代码/自动代码工具可以做50％的工作（他们不能 - 甚至不关闭），即使它们是富有成效和完全有能力的（他们不是）即使他们可以被低工资员工（那是笑声）运作，所以这样做是愚蠢的。
我一直在我。超过五十年，每十年左右或那么新的这种软件工具出来了。当然，他们比上一代更好，但是，然后，用户对他们的软件的日益增长的期望变得更高，因此这些解决方案达到了不高于先前的失败的尝试。
那些没有学习历史的人注定要重复一下。
回答 6 是的，这将是一个灾难.Low代码被出售为件好事。它不是。低代码的想法来自软件的开头：COBOL是一个低代码提案，加利福尼亚州。 1961年，我们遭受了维持COBOL计划，直到今天，2021年。第四代语言是80年代的低代码提议，它持续了很久。等等。
今天，低电平的代码是一个智能营销理念，可以向非专业人士销售工具。他们可以成功构建小型简单解决方案。一旦系统变得更复杂，低电平的代码无法应对复杂性，并且您必须致电专业软件开发人员从头开始开发。浪费金钱和时间。
此外，低代码是维护的问题。您开发软件系统持续，它不是单次操作。当您发现必须维护软件时，您发现低电平的代码几乎是不明智的，因为它是由非专业开发的。
不团分的，低代码工具是软件生产者轻松赚钱的好方法。问题只出现了几年。
回答 7 人们一直在尝试替换开发人员几乎只要它是一个职业，从RPG语言开始[1]，1959年。作为平均商业主管的想法可以做自己的数据处理。没有那样制作它的方法吗？它永远不起作用的原因是人们对应用程序所需的期望会比任何无附庸术或低代码框架更快地增加。</description>
    </item>
    
    <item>
      <title>在C &#43;&#43;中，如果我有指向指针的指针进入一个新对象，并且我删除了第一个指针，那么新对象也会被删除吗？</title>
      <link>https://xiangqingw.github.io/posts/in-c-if-i-have-a-pointer-onto-a-pointer-onto-a-new-object-and-i-delete-the-first-pointer-does-the-new-object-get-deleted-aswell/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:14 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/in-c-if-i-have-a-pointer-onto-a-pointer-onto-a-new-object-and-i-delete-the-first-pointer-does-the-new-object-get-deleted-aswell/</guid>
      <description>在C ++中，如果我有指向指针的指针进入一个新对象，并且我删除了第一个指针，那么新对象也会被删除吗？ 回答 1 看，年轻的大师 - 在现代c ++中，你几乎不要使用原始指针，好吗？你几乎甚至没有写新的或删除了，好吗？我们有分配者和Raii和make_shared和make_unique，它创造了一种指针，但真的很多。
无论如何 - 我看到答案是教育和有趣的一种，但我看到许多人完全错过了这一点。是的，了解哪些指针以及他们如何工作 - 在你不&amp;hellip;&amp;hellip;
回答 2 让我在前面的指针上消除一堆误解：
好的，随着这种方式，让我们在最后测试你的理解。最后。问答：
＃1.在以下代码中删除了多次？#include int * foo（int x）{return new int {x}; } int main（）{int * p; for（int i = 0; i &amp;lt;1000; ++ i）{p = foo（i）; std :: cout &amp;laquo; p = &amp;laquo; p &amp;laquo; &amp;laquo; * p = &amp;laquo; * p &amp;laquo; \ n;删除p; }} &amp;lt;/ OL&amp;gt;</description>
    </item>
    
    <item>
      <title>当他们有15年以上的经验编写代码时，将潜在员工提供1小时编码挑战是值得的吗？</title>
      <link>https://xiangqingw.github.io/posts/is-it-worthwhile-to-give-a-potential-employee-a-1-hour-coding-challenge-when-they-have-15&#43;-years-experience-writing-code/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:14 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-it-worthwhile-to-give-a-potential-employee-a-1-hour-coding-challenge-when-they-have-15&#43;-years-experience-writing-code/</guid>
      <description>当他们有15年以上的经验编写代码时，将潜在员工提供1小时编码挑战是值得的吗？ 回答 1 当然，它看起来很愚蠢，特别是这些天与公共GitHub存储库。
但他们必须检查，否则每个人都会得到一个修饰的github回购，副本的别人的代码。
当他们要求我写一些东西时，我有点笑，但是，为什么不。我就是做这个的。除了大多数情况下，我对在愚蠢的水平的编写代码不感兴趣，大多数老式的Java程序员习惯了。所以有问题，我写的东西，他们没有得到它。当然，ONC &amp;hellip;&amp;hellip;
回答 2 以下是来自印度的大多数工程师的交易：
你看，没有持续的指导和长期故事背后的工程学生的教育。因此，他们从一个靶柱上踢到另一个球门柱的形成年度超过16-18岁。然后再过2年，因为他们听到了数据科学。
大多数学生随着他们加入这个行业并感到厌倦了进一步学习的时候烧坏了。他们希望在他们遇到的第一个舒适区中安定下来。
但是，该行业希望您一直在脚趾上，随时准备运行另一场比赛。并且面试专门用于验证这一方面。幸运的是，与以前的学术比赛不同，这场比赛有助于您支付账单并提前退休，如果您发挥得很好。
对。那么，你是如何成为一个成功的开发人员？
清楚地了解期望并向后工作。研究您的目标公司/角色的职位描述和面试过程，看看您今天正在做的/学习是否会帮助您自行帮助您获得工作x年。
如果您无法自己导航，请找一个愿与您合作的导师，识别您的弱点，帮助您克服它们并成功导航您的采访和职业生涯。
如果您观察到，所有成功的首席执行官，体育人物，政治人物等，都有/患有导师。导师是生态系统的重要组成部分。
回答 3 一个词答案：没有。好吧，这是一个两个词的答案。你有我！
首先要经过以下几点，然后尝试一下。如果你仍然觉得你没有改善，那也许是时候最好尝试导航到其他职业前景。但首先做采访准备正确的方式！
你试图找出你失败的面试的原因吗？
为什么谷歌拒绝伟大的软件工程师？不要使这些错误（作为软件工程师）
&amp;mdash;&amp;mdash;-部分（b）&amp;mdash;&amp;mdash;-
你准备了正确的方式吗？
保持积极态度，专注于学习，而不是每天解决的问题数量。在您学习时玩得开心（观看下面显示的🔴🔴媒体视频，您会知道我的意思是😄）
这几个视频都可以帮助你 -
回答 4 我最近有机会采访（F2F）一个拥有大约8年的经验的人。
面试
我始于基本的设计问题，如什么是装饰者模式，观察者模式。他向我解释了一切。我以为他已经致力于它，所以我给了他一个问题，可以设计像Ola，优步等奥拉等驾驶室预订系统的架构。他开始在纸上做点什么，5分钟后他再次把我的文件送了。那篇本是空白的。他说他无法考虑该系统。我将问题更改为拆分模式。他再次做了同样的事情。我问他，因为他在任何设计模式上工作。他说他没有，但在互联网和书籍上学习。我问你对数据结构感到满意，他显然说不，因为他近上时候曾在前端技术工作过。我给了他一个基本元素在数组中搜索问题。他尽力但不能做到这一点。他再次说，他近上时候还没有在这样的事情上工作过。经过几个问题，并获得相同的回应面试结束。
我从该面试中学到的事情
vimal.
回答 5 面试作为经验丰富的开发商是艰难的。在2005年回来我采访了谷歌。当时大约有17年的经验。我收到了报价，但拒绝了它，因为在调查我决定的事情后我不想搬到硅谷和通勤。第二年，他们在滑铁卢在这里设立了办事处，但我又拒绝了，因为办公室如此之小，你必须在母舰上每季度花几个星期。这对我和我的家人不起作用。
快进至2010年。当地办事处已经成长为旅行不等的地步。他们再次接近我，但由于我通过的时间再次采访。没问题，让我们在一周内完成。果然，我轰炸了面试。讽刺鉴于我共同撰写的书。但那是因为我感冒了面试。
一年后，我有另一个机会，我知道这可能是我最后的机会。你可以敢打赌我为这套采访做好了准备。我给了很多时间。重读我的书。阅读一些算法书籍。通过一些新的问题工作。进入超级准备。得到工作！但它并不容易。
除了我自己的经历外，我看到别人经历了什么，迄今为止接受了100多名候选人，加上我在招聘委员会就我看到的候选人摘要。但我在这里说的不是特定于谷歌，生病就像我可以的那样通用。
在我看来，科技采访是关于回答一个问题：这个人是一个熟练的软件工程师，可以在作为团队的一部分工作的时候完成事物吗？三件事，都很重要。
当你获得体验时，所有三人的酒吧都会起来。您可能是您当前工作的超级明星/传奇，但公司以外的任何人都知道这一点？他们所能做的就是根据他们公司的高级程序员的期望来测试你的测试。
编码通常是如何提高高级候选人。许多经验丰富的软件工程师对没有编码，特别是如果他们管理人员和/或项目。但公司通常希望工程师仍然可以编码。
我的提示：
1.给自己做很多时间来准备。最好是几个月。并使用那段时间 - 准备。
2.再次获得编码。如果没有工作，请做一个侧面项目。或在开源上工作。
3.对于采访，从可用选择列表中选择您最舒适的语言。除非是这样的要求，否则不要去热门语言，或者假装在你不这样做的时候理解C ++ 11（谁？）。
4.在面试前获得很多休息。清除所有压力事件的日历。
5.练习白板采访。让朋友帮忙。
6.练习电话采访。你能通过FIZZBUZZ测试吗？你需要那些基本的编码技巧来进入门口。
希望这可以帮助。继续尝试！
回答 6 首先，我怀疑这个问题的前提是真实的。如果大多数在计算机科学中获得BS的人无法通过编码访谈，那么您将假设大多数拥有计算机科学的BS的人失业或工作沃尔玛或其他东西&amp;hellip;&amp;hellip;
这似乎并不是如此.Without统计数据，不可能知道的前提是如何靠近真实的，但至少是一个夸张。兴趣，几乎没有其他答案，这将表明这一点至少有一个广泛的常见情绪，即最近的CS毕业生在他们的编码访谈中遇到了困难的时期。在我的答案中，我将尝试解决情绪的原因 - 我猜想主要是未对准的期望。我从应该是显而易见的事情。在学术计算机科学和专业软件开发的合并世界中非常几乎是一个无限的知识，你永远不会见到任何了解一切的人。你会认为这会导致一个在这个领域的幽默感。但是，我看到了很多Macho Arrogance到处都是一个盛大萨满的文化，他们通过我们知道其他人不知道的东西来定义自己。每家公司都想相信他们只雇用最好的巫师 - 但公司的生存依赖于拥有最好的萨满，无论公司是否是谷歌或写一些通用的傻瓜。那种态度，这并不奇怪，完全训练了人们有时会失败萨满访谈过程。有人说你是面试官。你可能知道我不知道的东西，因为我们已经建立了没有人知道一切，并且有很多不同的事情可能知道。如果这是可能的在面试过程中，您可能会决定我不是一个足够的萨满为本公司工作。因为显然，你是一个伟大的萨满，因为你已经为公司工作，而且是什么让你成为一个伟大的萨满你知道你面谈的一半人的东西不知道&amp;hellip;&amp;hellip;对吗？但是让我们翻转桌子，所以现在我是面试官。你看，我也知道你不知道的一些东西。有一个很好的机会，你会通过采访。如果我们呢LD都失败了彼此的访谈，谁是更好的萨满？我所做的一点是，很多决定在技术面试中的做法是多么努力，你的个人优势与采访你的人对齐。是在软件开发中专业工作的人的优势，20年与刚刚在CS中完成学士学位的人截然不同吗？无疑！有点像问一个刚刚完成医学院的人是否具有与某人相同的优势谁是一个练习的医生20年。学校一般有效的方式是你在你的小noggin.com计算机中得到了克隆的概念，这方面没有什么不同。这所大学不能教授一切都知道了计算机科学在四年内，它试图在此期间教授尽可能多的概念。从我所看到的，大多数行业工作都是定期利用更小的概念库存。BEC ause这是一个小概念库存，它很容易掌握，因为基本上每天都在你的工作中，你在那些概念中钻了自己 - 多年来，也许甚至几年。学校不同。在学校，你必须学习一整群非常迅速的概念，然后在你的头上克切他们进行考试或完成一个大项目。很快就结束了，你必须学习一大堆新的概念。这种高流量压力烹饪器的问题教育系统 - 这是所有学术环境中的问题，而不仅仅是CS的领域 - 虽然学生被迫迅速学习，但他们易于忘记他们在学习它们时尽快忘记。这是一个非常可能的学生在考试中赚取“A”，然后忘记他们每年研究的材料后来。新材料在你的头上被挤满了，你倾向于忘记旧的材料。这似乎被睡眠损失加剧了，这是非常普遍的学习CS和其他辛苦专业的人。</description>
    </item>
    
    <item>
      <title>您如何处理团队中的一个非常慢的软件开发人员？</title>
      <link>https://xiangqingw.github.io/posts/how-do-you-deal-with-a-very-slow-software-developer-on-your-team/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:14 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-you-deal-with-a-very-slow-software-developer-on-your-team/</guid>
      <description>您如何处理团队中的一个非常慢的软件开发人员？ 回答 1 你应该告诉我们更多的是那个慢的人。
有无数的变量可以影响发展速度和个人风格可能是其中之一。
2000年过去发生了一个思想帕拉迪格姆班。
80年代 - 90年代开始编码的人（如我）往往会在质量和文档中倾向于提供大量价值，他们喜欢提供功能，错误（尽可能多）的工作。
那些迟到的人，有现代的心态：水煮&amp;hellip;&amp;hellip;
回答 2 谁关心开发商只要他的（或她）成品成功了？
我向另一个问题写了一个答案，要求您更喜欢哪个问题，一个快速的程序员，一个杂乱的代码或一个具有干净代码的慢程（或者某种东西的东西），我将在这里提供TL; DR Synopsis
你不能急于完美
为了更快地工作，你必须削减角落，你必须留下东西，你没有时间仔细检查
我知道这是相关的硬件和相关软件，&amp;hellip;
回答 3 开发人员在各种速度工作。有时你会得到一个好（或坏！）奖金以及这种速度。
在微软，我有一位同事们令人难以置信的多产。在一天50行的世界中，他可以拿出一千个。并更快地完成他的作业。但是当它来调试和维护那个代码时，这是一个噩梦。他像疯了一样粘贴，并且不一定清理评论，变量名称错误拼写（例如Lenth）结构等。他还采用了算法的快捷方式，使代码脆弱。所以，快速快速地生产不一定是好的。
我有另一个是一个深刻的思想家的同事。他会在一个问题上进行第一个刺伤，并提供比典型的结果慢。它将是干净的代码，合理地放在一起，但并不完美。在我的团队中，他在一个组件上工作，其价值是基于启发式的准确性 - 传感器解释。他一直赚更好，更好，通过他的性质和他的思想设计和发展的思考方法使能。在项目结束时，我们具有更好的识别质量和比另一种方法更快的代码可能会产生。换句话说，对产品的巨大好处，让他缓慢但有条不紊。
作为经理，我曾经认为你应该平等对待每个人。现在我意识到你根据他们的需求和人才对待它们。
如果您有一个非常慢的开发人员，请将一点点挖掘为什么它们慢，看看是否有容易解决的修复。如果您对额外的时间没有得到任何利益，他们正在支出，这是一个问题，您需要在修复上工作。但如果他们正在提供额外的东西，请利用它更好地使产品更好。
对于一个缓慢而不稳定的开发人员，给予他们的工作，这不在关键路径中。确保他们了解他们需要学习更快地工作，并与他们合作，以确定他们可以的合理方式。如果他们在除速度除外的一切中都会遇到酒吧，那就值得把很多努力 - 数月或多年 - 进入这一点。另一方面，如果他们在棋盘上落后于曲线，而且它们没有改善，你需要开始性能改进（PIP）计划，可能最终充满鼓舞，鼓励他们找到不同的工作。
总结它，慢慢不一定是坏的，但你需要选择分配来容纳。确保他们没有阻止一个关键的发展路径。如果需要，提供频繁的建设性反馈 - 速度缓慢 - 并帮助他们改进。
回答 4 矩阵中的其他一切都是
在不考虑软件开发人员最重要的方面，它没有有意义，这是交付的工作质量。
如果我们想象速度和质量的矩阵，我们可以识别我们的开发人员类型。
我们理想的开发人员是右上角的独角兽。你真的无法为此雇用，因为它们非常罕见。如果你的幸运性足以在你的团队中拥有一个，准备被吹走。正在谈论一个人需要几个星期的军队，以便做一个常规开发人员在几个月内可以做的事情。这不正常。
矩阵中的其他一切都很常见。
在右下方，我们有牛仔。如果您需要迅速到市场，这些家伙可以对您的团队有好处。经理比其他任何人更爱这些开发商。他们会尽一切努力做任何事情，即使他们必须用纸夹和伸支辅助缝合解决方案。但是当您拥有需要缩放的成熟解决方案时，它们可能会发生灾难。
在左下方，我们有我们的Internet Explorer类型。是的，这些开发人员很慢，产生发布的错误代码。一般来说，他们很无用。
最后，在左上角，我们有海龟，试图证明缓慢而稳定地赢得比赛。他们花了很多时间到达一个解决方案，但它总是深入了解并妥善测试。
在大多数情况下，ID宁愿乌龟而不是我团队的牛仔。我知道我可以指望他们，我知道他们不会在码比上肆虐。他们几乎是为了研究已经进入维护模式的解决方案的理想选择。即使他们很慢，很少是一个问题。但是，如果我们有艰难的截止日期，我们迫切需要制作，我会推动他们尝试更快地工作。
真正的问题是像Internet Explorer 6的开发人员。慢速和越野车。重点应该是在矩阵中将其推向向北方向。
如果他们的问题缺乏动力，解决这个问题可以让他们跳到牛仔象限。如果他们的问题是缺乏经验，那么适当的训练和指导可以在龟象限中向上移动它们，也可能加速它们。
事实上，拥有一个初级开发人员可以慢慢地提供不良代码的初级开发人员，因为我知道他们有可能沿两个轴改善。
但是，ID不太喜欢在我的团队中拥有一个高度经验丰富的开发人员，他们陷入该类别。你不能教一只老狗的新技巧。
我同意Alan Mellor，他说踢出你的团队应该是最后的手段。但是，慢且糟糕的人在团队中几乎归零，他们需要表现出改善，以证明他们的团队成员资格。
回答 5 我自1975年以来一直在编程。我是许多千禧年的意见中的一个缓慢开发人员。但是，当我转过来时，当我测试代码时，当QA测试我的代码时，当我维护和其他人维护我的代码时&amp;hellip;&amp;hellip;它是正确的。零缺陷，除非要求错误。虽然其他人在代码中花费了数小时修复错误，但我已经启动并运行并没有崩溃系统。它被记录在案。
如果您的慢速软件开发人员正在拒绝不良代码，那么，人们需要与他们交谈并查看问题是什么。如果代码就像我用来正确地翻出来的代码，而另一些仍在修复错误&amp;hellip;&amp;hellip;可能需要重新定义您对慢速的定义。
回答 6 我作为一个发展经理的情况，中间管理人员担心我的团队的一个成员在我们的应用程序的功能上工作得太慢。我用三种方式处理：
回答 7 你首先校准你对慢的定义。
他们在提供一率之前需要一周，缺陷免费工作吗？但其他人每天都发布 - 用虫子 - 只能在最后一次交货中全力以赴，一周后？</description>
    </item>
    
    <item>
      <title>覆盆子pi的目的是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-is-the-purpose-of-the-raspberry-pi/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:14 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-the-purpose-of-the-raspberry-pi/</guid>
      <description>覆盆子pi的目的是什么？ 回答 1 我有一个。考虑像笔记本电脑或台式电脑的覆盆子PI，较小，更不强大。
有几个原因我使用覆盆子pi。它充当了我网络上的设备的DNS服务器。这意味着当我的主电脑进入谷歌网站上的东西时，它会问我的raspberry pi答案（我的raspberry pi询问另一个DNS服务器 - 专门打开DNS）。这里的好处是我可以否认DNS要求典型的广告域。这就像我的pi中内置的广告拦截器。我也将其用作VPN服务器。如果我离开了我的家，我可以通过我的公共IP地址遥控进入PI，并与我的家中与我的设备与我在家里的另一个网络中交谈，非常酷。
回答 2 目的是，它是一台计算机，一台真正的计算机，在没有任何内容的情况下，旁边的成本是微小的，并且在旁边没有电源运行，不需要有效的冷却。您可以安装Linux并使用它作为PC。您甚至可以将其磁带到电视/显示器的背面，并具有隐形。我认为你甚至可以为一个人购买一张小型笔记本电脑风格案例，然后插上电路板。
人们获得它们的主要原因是因为它们很小，所以它们可以用于专用的目的，并且几乎是一次性的。我有3个，两个是媒体中心的设置，让我从我的NAS流到电视。其中一个是作为复古游戏控制台设置的，其中有成千上万的游戏。
有些人把它们放在街机风格的木箱里，让你在旁边做一个家庭拱廊机器，如果你可以做这项工作。您可以在线查找指南如何制作一个游戏咖啡桌等。
基于指南，这些看起来不得超过100美元，使旧货7美元的eBay监视器除外，但钻头和布线的一点努力。
回答 3 raspberry pi是计算机，其目的是由您，用户给予您想要使用它的。
这是一台便宜的电脑，为您提供了一个体面的硬件（与常规桌面硬件不强大），从那里的一切都取决于您的创造力和项目。
它可以用作台式PC，并在其上运行Linux发行版（即使是技术上也是可能的）。
或者您可以为任何常规PC使用它，除了真正的乐趣开始的地方：
总而言之，RPI是多用途的。他们很小，廉价（正如我所说，更强大，不要指望在60fps当然运行职责）。他们是多么多样化的，这对你能做的事情打开了可能的可能性。值得一提的是，他们的功耗太低，使它们始终保持良好的设备，对于一些提到的应用程序。
就个人而言，我相信他们背后的想法是：你不需要一个800欧元/美元，以便你的手在一个体面的服务器上，因为你只想学习，或者在你家里举办几个服务。 anwser为此是RAPSBerry PI，为每个人提供开放的源科技，可以访问他们的技术想法。
免责声明：当然，您不需要PI来了解Kubernetes或黑客。但是来吧，让你的可爱小军队同时跑步很有趣。
回答 4 其中一个目的可能更为明显到自己的老故事。我们有利于于20世纪80年代的电脑玩的优势。在那些日子里，家庭电脑和软件远远甚至比今天的更简单 - 记忆以千字节，而不是千兆字节测量的，在大多数情况下，没有复杂的操作系统将用户与硬件分开。它是常见的，这些计算机无论是基本的简单程序，还是使用汇编语言以获得更加雄心勃勃的努力。
这些系统非常有限 - 但它们有一个大量的学习优势。他们的简单性鼓励实验，并且您对系统的工作原理更加清楚了解。系统也相对便宜，再次鼓励实验。我实际修复了我的一台计算机（ZX Spectrum 48K）我自己几次 - 电路板足够简单。
覆盆子PI开发背后的动机是我认为重新识别一个相对简单的系统的想法，您可以轻松尝试，而不是桌面的桌面或半密封单元的桌面或一台笔记本电脑的单元。这是覆盆子PI的价值 - 它很小，可访问，低成本，并且自身享有精美的实验和学习。
回答 5 你可能会尝试看
或者，
在哪里可以找到：为每个人提供大而小的人的每个人，到厨房用桌子修补师，我们为每个人提供了可访问和负担得起的计算。
回答 6 我还将8088 CPU连接到GPIO（购买就绪PCB W
RPI IIRC的原始目的是教育儿童计算机/编程和电子产品，因为它提供了GPIO引脚，它比任何其他设备/计算机更便宜。
RPI有很多用途，我基本上使用RPI进行多媒体目的，并通过安装kodi等发行版（大多是视频，而是当时我并不真正使用它），Volumio（Audiophile Music Streamer），Rethopie（运行旧控制台）而且作为运行包含容器和虚拟机的服务器（是的，来自RPI3及以上VMS可以在那里运行相当漂亮）。
我还将8088 CPU连接到GPIO（用CPU购买就绪PCB），并且我可以通过CPU进行破解，并且还基于8088创建旧机器，而所有其他芯片和外设由RPI仿真。
今天用RPI4你可以用它作为一个真正的桌面电脑，我听说它很好，但没有尝试过。
如果你进入黑客，那么RPI就适合你。建立小家电并从中学习是一个很好的选择。
回答 7 我一直在使用Rasberry Pi Zero作为我的第一个机器人的控制器。但现在我主要使用Arduino。对于复杂的机器人来说，它仍然很棒 - 它可以用于面部识别和复杂的计算，因此它是便宜的机器人平台。
回答 8 抛开它是主要的教学使命，PI是一个非常有效的家庭服务器（我的网站，Wiki，文件存储和通过互联网访问的流媒体）现在我可以使用旧电脑，我捕捞跳过免费&amp;hellip;&amp;hellip;但它不是免费的，我希望它能够绘制50-75W 24/7，费用50-75英镑。PI 4B有案例，MicroSD，用于储存的USB密钥样品，可以获得50-75英镑，它仅绘制4-5W所以成本为4-5英镑。所以它将在一年多的时间内为自己付出代价。</description>
    </item>
    
    <item>
      <title>非编码人员不明白编码的一件事是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-is-one-thing-non-coders-dont-understand-about-coding/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:14 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-one-thing-non-coders-dont-understand-about-coding/</guid>
      <description>非编码人员不明白编码的一件事是什么？ 回答 1 编码是医疗结算练习。
你的意思是编程。
他们不明白什么？嗯，呃，大多数。同样的原因你可能会要求我删除附录。
只是一些想到的事情。
编码是医疗结算练习。
你的意思是编程。
他们不明白什么？嗯，呃，大多数。同样的原因你可能会要求我删除附录。
只是一些想到的事情。
每天数十亿次。该过程的核心实际上是DERP级别简单。很多东西都是。了解它是如何简单的 - 为什么这很好，这是艰难的部分。
回答 2 边缘案例
写规范的非编码器通常很好地了解，当一切顺为正确时，它的意思&amp;hellip;&amp;hellip;
&amp;hellip;&amp;hellip;通常对多少编码努力感到惊讶，实际上是检查应该在出现问题时应该做的事情。
我要过度简化，但考虑一个简单的例子 - ATM想要拿出20美元的人。
非程序员倾向于认为它应该是这样的：
1.检查余额2。发布Notes3。发布交易（减少余额）
&amp;hellip;&amp;hellip;
回答 3 该编码需要在严格的正式逻辑序列中在最微小的步骤中思考。虽然通过几乎完全切换到更高阶语言的步骤尺寸（以稍大的步骤）有所缓解，但需要以严格形式的逻辑序列进行的需要没有如此缓解。
它需要程序员的理解/在工程师问题/解决方案域和计算机问题/解决方案域之间的差异以及如何进行&amp;hellip;
回答 4 在我的工作中，这两个最恼人的问题是我源于我的事实，我是一个实地的程序员，并没有真正在技术产业中。
因此，我正在通过大多数非程序员和非技术人员来编程事情，这些人可能永远不会写一行的整个生命。
由于我们的质量控制不是针对编程但数据完整性的事实来说，这是更糟糕的，因为我在市场研究中，所以测试工作的人也是编程者，而且从未如此。
结果，提出的最令人讨厌的事情是：
授予，我公司有一个严重的有毒管理问题，我愿意。
回答 5 我真的要挑选一件事吗？
他妈的，我会谈谈几个。
首先，实际的事情是挑战代码。它没有平衡你的括号 - 大多数成年人都可以计算。它没有用分号结束你的陈述甚至儿童可以找到;钥匙。
不，它实际上必须设计解决问题的问题，然后将其以非常具体的细节传达给计算机。这是无论使用什么编程语言或使用的低代码工具。
其次，并对第一个，编程语言没有故意钝。相反，他们
我真的要挑选一件事吗？
他妈的，我会谈谈几个。
首先，实际的事情是挑战代码。它没有平衡你的括号 - 大多数成年人都可以计算。它没有用分号结束你的陈述甚至儿童可以找到;钥匙。
不，它实际上必须设计解决问题的问题，然后将其以非常具体的细节传达给计算机。这是无论使用什么编程语言或使用的低代码工具。
其次，并对第一个，编程语言没有故意钝。相反，他们是明确的。正常的英语以及大多数其他人类通信都以歧义而巧妙地被情况澄清（有时会失败）。相比之下，代码必须完全沟通意图。因此，尝试编写代码的人可能会假设它只是没有工作，当时现实是他们预期计算机像人类沟通。
第三，调试。许多人会在第一次没有工作时会感到沮丧，并放弃，这是为什么不是每个人都擅长编程。它该死的附近不可能写出按照第一次尝试的原因，当确实发生时，它通常是因为它一次建造并测试了一条线。但是回到了失败的代码并弄清楚了什么是AWRY是编程的重要组成部分，大多数非开发人员都不知道。
第四，边缘案例和非快乐路径。在设计应用程序时，似乎所有您要做的就是说，当用户执行X时，y发生。但是，您也必须考虑用户出乎意料的事情时会发生什么。否则，意外行为可能导致程序做得非常奇怪的事情。以下MEME应该明确：
（顺便说一下，一个QA工程师是一个人任务，确保程序完全按预期工作）
第五，商业软件基本上永远不会是独一无二的事实。为乐趣写作往常是自己，但是当您编写人们使用的实际软件时，它通常与其他开发人员的团队一起。该团队很有可能还包括项目经理，一个要求团队（实际与客户坐下的人，哈希出来，并将其转发给开发人员），一个或多个QA工程师（也可以是要求团队，但总是不是），并且可能取决于团队的其他角色。
老实说，我可以继续几天。对大多数非开发人士不实现的软件开发有很多关于的问题。就像我认为，要建造的很多，那就是非建筑工人的施工。律师，博士，代理，视频编辑，剥离，教学或体育教练也是如此。
回答 6 作为教导编程的人（我强烈地阻止人们称之为编码，因为目的不是神秘的），我学生学习的最艰难的课程是，搞得代码更容易，而不是图怎么搞砸了。最近，一名学生要求我寻求一些排序代码。我完全了解它应该是什么样的，所以错误通常很容易发现。他的每一系列代码都正确，它的顺序正确。是什么花了我一分钟或两个人搞清楚，他在错误的地方有一个角色。他可能花了一个小时试图弄明白。我也花了两分钟，而且对我来说异常相似。这不是因为我是天才;这是因为我几乎看到了这个特定代码的几乎所有接近但不是完全工作的变化。
辞职计算机科学的大多数学生可以处理数学，以及所有其他智力挑战。他们真正挣扎的是纪律和耐心的结合。
有点与此相关，当我告诉他们编程语言主要没有关于与计算机通信时，我会出现很多学生的地狱。他们主要是与其他人沟通。他们还与计算机合作的事实很大程度上是偶然的;编译代码通常与源代码相对不大。
回答 7 与一个学生的对话;我已经要求一个计划来计算
我教过编程类。学生必须学会处理突发事件。例如，简单的分配写代码以合并两个排序文件。
与一个学生的对话;我要求一个程序来计算三个方面的三角形面积（给鹭的公式）。我输入3,3,7和代码吹动。
我：我正在脱掉半学分;您的程序中止了。
学生，慢慢意识到3,3,7不是三角形：但这是你的错，不是我的！你把坏数据放入我的程序！在现实世界中，任何带有索引的人都会让鹅在将数据放入计算机之前非常仔细检查数据！
我：哪个现实世界？是六边形的情况吗？</description>
    </item>
    
    <item>
      <title>什么是最快的计算机？</title>
      <link>https://xiangqingw.github.io/posts/what-is-the-fastest-computer/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:13 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-the-fastest-computer/</guid>
      <description>什么是最快的计算机？ 回答 1 这是一个不断移动的球门柱。任何答案都可能在1-2岁内未能过时。2020个记录持有人是Fugaku超级计算机，在令人印象深刻的442 Petaflops（每秒442万亿计算）中时钟。随着我们继续在技术中取得突破性，我们将继续令人印象深刻地建立更快的计算机，直到我们达到一些预防我们进一步进入的物理限制。我们无处可见到这一点，这主要是一个金钱，能源成本和工程的问题。
回答 2 日本的Fugaku是当前的超级计算机皇冠冠军，而不是田纳西州橡木岭峰会的计算能力。
什么让fugaku不同？首先，我认为它的惊人简单。它们使用的非常低的功率48芯臂芯片在Paltry 2.2GHz上运行。没有GPU加速器。因此，超级计算机非常有效，相对便宜。他们可以预算交错的158,900个处理器！
dang！
这是一个惊人的760万CPU核心。
Fugaku和山顶仍然在效率下效率为14.7 GFLOPS尽管如此
日本的Fugaku是当前的超级计算机皇冠冠军，而不是田纳西州橡木岭峰会的计算能力。
什么让fugaku不同？首先，我认为它的惊人简单。它们使用的非常低的功率48芯臂芯片在Paltry 2.2GHz上运行。没有GPU加速器。因此，超级计算机非常有效，相对便宜。他们可以预算交错的158,900个处理器！
dang！
这是一个惊人的760万CPU核心。
尽管使用Volta V-100 GPU加速和22核IBM Power9服务器CPU，Fugaku和Sumpit在每瓦特的效率下，每瓦特的效率均可在14.7 GFLOPS上绑定。
从某种意义上说，Fugaku模仿GPU加速，阵列大量的小臂处理器。是的，可能需要100个臂核心以匹配单个V-100的性能，但是ARM核心最有可能超过IPC中的V-100 GPU核心。
好的，嗯&amp;hellip;&amp;hellip;嘎嘎作响，峰会有27,000个NVIDIA GPU，每个核心有5120个。因此，在福卡库中使用的760万臂核心优于峰会上的1.41亿GPU核心。这是一个重要的差异，导致我相信ARM核心的IPC大约比GPU核心的IPC大约为16倍。
我有一种感觉，来自特斯拉和脑筋的这些新的晶圆秤计算机将是一些残酷的怪物。脑袋将850,000 AI处理器核心包装在一个关于笔记本纸张的尺寸的单个晶片级芯片上。
然后他们挤进了一个看起来像这样的怪物冷却箱。
这看起来像空气冷却和制冷剂管线的组合。酷是一个合适的词。这些脑芯片每次凉爽200万美元。
您可以为该价格构建大约两百64核RTX 3090 ThreadRippers。
回答 3 对于最快的一些定义*最快，它是日本超级计算机Fugaku，在当前（6月2020年6月）Top500列表中。730万臂核心运行在2.2GHz，4PB的内存中，转为约415,530辆TFLOPS。一切都在燃烧约28MW的力量。
超级计算机Fugaku - 超级计算机Fugaku，A64FX 48C 2.2GHz，Tofu Interconnect D
*在这种情况下，运行Linpack
回答 4 解决不同问题时，不同的计算机更快。答案降至延迟vs thuroughpul，低延迟计算机快速而超级计算机等。在原始马力方面，Sunway Toinghulight是最强大的超级电脑，超过了三倍以上。它使用了近41,000个定制的64位加工核心，并花费超过2.73亿美元的建设。
虽然Sunway Light是最强大的，但超频桌面Skylake处理器可以是最快的。英特尔桌面级CPU具有最高的可用时钟速度，可以更快地完成一些任务（Albiet高度串行和优化的任务），而不是超级计算机。这类似于摩托车如何快于开放式道路上的半摩托车，即使半卡车也很大，更强大。
一些高度专业化的处理器比超级计算机或高时桌面PC在非常特定的工作负载中更快。例如，思科在其高端路由器和交换机中使用自定义RISC处理器，使它们允许它们转发具有远低于任何通用桌面或工业SoC的网络数据包。它们通过为数据包转发而造成专用CPU管道定制来实现这一目标。虽然许多计算机在做同样的事情（包转发）时非常快，但在做众多其他事情时，CISCOS芯片能够克服与通用管道相关的大量开销，并增加其计数的性能。
所以答案是，它取决于。鉴于一组问题解决和解决它们的参数，一些计算机比其他计算机更快。
回答 5 通常，在液氮中或一些甚至更冷的液体中运行。
回答 6 上个月来自纽约次数：
美国刚刚在比赛中赢得了吹牛的权利，以建立世界最快的超级计算机。
五年来，中国拥有世界上最快的计算机，一个象征性的一个象征性，试图表明它是一个技术强国。但是，由于一台被称为峰会的机器，美国将导线重视，为田纳西州橡树岭国家实验室建造。
峰会的速度，周五宣布，摇晃着头脑。它可以以每秒200千年速度或200个petaflops进行数学计算。为了投入人类：一个计算一项计算的人必须居住超过63亿多年来匹配机器在一秒钟内可以做的事情。
仍然昏昏欲睡？这是另一个类比。如果建造了100,000人的体育场已满，而且它的每个人都有一个现代笔记本电脑，它需要20个体育场，以匹配峰会的计算火力。
回答 7 通用处理器的示例是CPU或Central Pr
最快的计算机被称为超级计算机。超级计算机专门设计用于以非常高的速度进行大量计算，实际上包括成千上万的处理组件。通过设计允许数千个单独组件进行大问题的系统的系统，大量的工作被分成较小的计算块;专家加速器也可以用来加速非常具体的计算类型，以通用处理器不能。</description>
    </item>
    
    <item>
      <title>作为程序员，您认为初学者是否痴迷于数据结构和算法？</title>
      <link>https://xiangqingw.github.io/posts/as-a-programmer-do-you-think-beginners-are-getting-obsessed-with-data-structures-and-algorithms/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:13 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/as-a-programmer-do-you-think-beginners-are-getting-obsessed-with-data-structures-and-algorithms/</guid>
      <description>作为程序员，您认为初学者是否痴迷于数据结构和算法？ 回答 1 编程是关于数据结构和算法的。您可以通过良好的OOP语言驯服数据结构复杂性，并且大多数算法可以以最流行的语言表达。
更重要的是，初学者需要注意他们的工具。例如，您将在编辑器中花费很多时间。如果不是一个好的，你会为任务增加几个小时。
研究其他人如何组织代码。获得免费的GitHub帐户并浏览公共存储库将返回大股息。
回答 2 是的，在更复杂的上下文中，但出于充分的理由。
最基本的数据结构（阵列，地图，列表，树木，集合）是面包和黄油，每天使用，就像许多其他人都指出。痴迷也没有太大的意思 - 你在几天内了解它们，他们几年都有用。
许多更复杂的算法和数据结构是有趣的，但它们很难有用 - 红色/黑色树木，堆，动态编程，Dijkstra的最短路径算法，源区流量算法，近似算法，以及当然超级专业化计算机视觉，AI等算法。
在我的经验中，您将实际上使用非琐碎的算​​法或数据结构，如此可能每年一次在专业的职业生涯中。即便如此，您将使用库或适应现有代码，而不是从头开始写入，因为它更快，更安全。唯一的例外是您正在研究一个专门指定在复杂算法上工作的团队（思考Uber Pool的匹配算法，谷歌搜索，视频压缩等） - 但这并不常见，因为这些团队通常雇用主要是博士主题的专家。
那我为什么这么说他们仍然痴迷于一个充分的理由？仅仅因为算法和数据结构仍然是雇用决策的基础。理解它们，能够正确使用它们，并在白板上解释和实现它们是能够实际聘用此工作的主要要求，在那里您可能无法实现单个算法比泡沫排序更复杂，也不使用单个数据结构，这些数据结构尚未成为语言的一部分。
回答 3 当我在2013年开始编码时，我并没有痴迷于数据结构，它结果很好，但只是很好，不是特殊的！。然而，我随着时间的推移，我必须学习数据结构和算法，因为这些是计算机科学中的核心概念，有助于一个人理解您的代码后面的实际情况。学习这已显着提高了我的编码技巧，而且您还可以了解如何更好地解决和优化编码问题。
似乎初学者痴迷于数据结构和算法，但它是有趣的大多数新程序员如何。这是由于编程中的最新趋势和实现以及他们如何涵盖了对数据结构和算法的深入了解的必要性。
今天，您可以轻松地学习任何框架或语言，因为更有经验的程序员在计算的核心概念上实现了层数的层数，请删除有必要痴迷于数据结构和算法，并使学习曲线流畅。
即，今天您可以在不深入了解数据结构和算法的情况下构建一个全功能的网站或移动应用程序。您需要知道数组，列表和其他数据类型，但没有太深。
这并不是说这些核心概念的研究并不重要。
今天许多开发人员都是自学的，最初的问题是：
如何构建网站或移动应用程序
我想要一个用于XXXX IDEA的移动应用程序
这些天，编程初学者更专注于闪亮的技术。社交媒体程序员和博主炫耀他们如何使用的各种技术和教程。这不是一件坏事，但它变得越来越分散注意力，使初学者跳到学习这些框架。
我犯了这一点。当我开始编码时，我直接跳进了技术和最新框架。我从这种方式学到了很多，也学到了如何解决不同的问题，但这还不够。
编程正在思考未打字。
对数据结构和算法的知识将改善您的思维过程，以编写更好的代码。
数据结构和算法是计算机科学的基础！
回答 4 IT专业的多样性不断增长，因此绝对不必知道深度（或痴迷于其）成功的算法和数据结构。
工程师不是那个了解很多的人，而是知道如何获得任何知识的人;工程师是允许对数据访问的人，可以弄清楚事情的工作原理。
程序员不是正式的工程师，它是职业，它建议在特定区域（甚至可能在一个非常具体的域名）：如何在Python / Java / Haskell中编程，如何编写最佳SQL查询或设计NoSQL数据库，如何要为嵌入式设备创建固件等&amp;hellip;&amp;hellip;每个这样的区域可能需要了解特定算法或数据结构;开发为嵌入式设备的人必须始终考虑如何设计嵌入式系统，它们是什么约束 - 当泡沫排序可能会迅速地优先考虑点。
需要知道它们的详细信息也可能有所不同。例如，如果程序员是提供那些算法实现的库的用户，则可能需要知道界面和复杂性（时间/内存要求）的基本内容，这将有助于选择适合需求的这些组件。如果程序员在较低水平上工作，例如，实现特定算法，也可能需要数学。
我的建议是要了解什么是工程，而不是编程
每个程序员都应该成为软件工程师。
回答 5 我来自第二年的CS课程专注于数据结构和算法等主题（其实在楼下的某个地方，我有Nicklaus Wirth的书籍算法+数据结构的副本
简短答案：不。
更长的答案：了解算法和数据结构 - 以及它们之间的交互是基本知识，帮助开发人员了解他们的工具包中的哪些工具是有意义的。此外，如此非常可爱，因为今天的许多平台和框架都有一些洞察力，他们可能会操作意味着您将能够更有效地使用它们。
我来自第二年CS课程专注于数据结构和算法（实际上，在楼下的某个地方我有Nicklaus Wirth的书籍算法+数据结构=程序）的副本）。知道还有其他方法可以做出除了可以在头部绘制的明显算法之外的事情意味着您可以解决更复杂的问题而不会产生大量不必要的复杂性。
回答 6 也许。
他们似乎想象有一些小小的算法列表，你学习的算法和数据结构，然后你知道你需要知道的一切。
现实是，算法是您为自己发明的东西 - 大复杂的算法，由更简单的算法制成，由更简单的算法制成。
数据结构也是您每天发明的东西。
在数据结构的情况下，有一个强有力的情况来了解如何编写如何编写代码来实现每个标准的标准 - 数组，列表（单独链接），FIFO，LIFO，循环缓冲区，HASH-TABLE，二叉树，一般</description>
    </item>
    
    <item>
      <title>你怎么能讲述某人是否将成为可怕的软件工程师，开发人员和/或程序员？</title>
      <link>https://xiangqingw.github.io/posts/how-can-you-tell-if-someone-is-going-to-be-a-terrible-software-engineer-developer-and-or-programmer/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:13 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-can-you-tell-if-someone-is-going-to-be-a-terrible-software-engineer-developer-and-or-programmer/</guid>
      <description>你怎么能讲述某人是否将成为可怕的软件工程师，开发人员和/或程序员？ 回答 1 一个大的人告诉他们如何用英语（或母语）沟通。持续拼写或使用适当的语法的人缺乏关注细节。如果他们不能用他们一直使用的单词来做这一点，它可能会在代码中不以期限和邋..是的，如果您打字错误，编译器将纠正您。但他们不会告诉你你是否使用有意义的名称并逻辑组织代码。当您处理大小的项目时，Coll &amp;hellip;
回答 2 在我的生活中作为一个软件开发人员，只有一件事表明一个人将成为一个可怕的团队成员，这是糟糕的态度。
我一直在使用非常缺乏经验的开发人员，他们缺乏对该职位所需的许多知识，但所有这些都是努力工作和成长。他们成为一个非常待人的人才和优秀的团队成员。
另一方面，许多新的开发人员进入球队，他们将自己作为老年人销售为老年人，精通和专家。&amp;hellip;&amp;hellip;
回答 3 这是百万美元的问题。
如果您能够预测软件工程师是否与基于95％的准确性有用或可怕，基于一系列3-5采访，那么有公司会在那里才能为您提供数百万美元来引导他们的人力资源部。
这是技术公司今天面临的第一问题。一旦公司成长并成功，招聘和公司文化变得全力以赴。
招聘真的很难。如果有人已经是一个很好的软件工程师，这很难预测。甚至更难预测他们将来会成为一个。
两个最一致的招聘黑客：
一旦您到达第三学位的连接，您就无法确切地信任该建议。此时，您基本上只需要决定是否最大限度地减少误报或假否定，因为无论您如何构建招聘流程，都会有很多错误信号。
回答 4 软件develo.
它是有趣的，而且有点悲惨，到目前为止在这里没有人说过，只要在面试过程中测试他们的技能，或者更好，在白板上一遍又一遍地测试它们&amp;hellip;&amp;hellip; - 因为这是大部分的顶级公司兽医雇佣者。
为什么悲惨？因为这种测试真的没有告诉你一个关于这个人的自然编程能力或人才的很多。它只告诉你他们迫切需要足够的工作，因为一下，在练习的情况下练习可能一遍又一遍地，直到他们闭着眼睛。
软件开发是一个右脑活动 - 一个涉及很多创造力的活动。在大多数人都有机会在他们的桌子上悄悄地工作，而没有过度的压力和压力，创造力被释放出来。这些创造者将使用任何和每个工具，以获得解决问题的知识。谷歌，堆栈溢出，书籍，同事，试验和错误等。这些都不是在白板会话期间存在。
接受采访中的编程问题是最肯定的左脑活动。候选人在战斗或飞行模式下静静地受到压力。只有最少的真正问题解决认为，他们可以在那种环境中带来问题。主要软件房屋给出的大多数白板编码问题都是充分挑战的。为了解决白板问题，成功的候选人必须预测他们可能提前提出的问题，并提前解决它们的实践，以便他们可以专注于实际问题中可能存在的略有变化，以及花大部分时间只是写出基本上记住的解决方案。解决其中一个问题，免费错误，在50分钟的会议中，在没有见过的问题之前，除了几个严重的有天赋的人之外，都会非常不可能。
想象一下，候选人一个崇拜rubix立方体并告诉他们，如果他们可以在50分钟内在你面前解决它，他们可能会得到这项工作。如果他们以前从未见过它，那么他们将不太可能成功，因为没有帮助解决它所需的见解需要几个周到的审判和错误。另一方面，如果他们知道诀窍（你可以在youtube上找到它），他们练习它，它可以在几分钟内解决。成功的候选人比不成功的候选人更聪明吗？你实际上没有想法。你已经了解到，只有一个候选人被问到之前的问题，并主动纪念解决方案。
就个人而言，如果我想对候选人的适用性非常肯定，我会给他们一个归档的问题。在采访中，如果他们能够与您练习他们的设计和实施，他们可能是非常好的软件开发人员。性格？适应性？这就是剩下的内部采访应该是全部的。
 五思思想：自从我第一次写这个回复以来，几个月过去了。我很惊讶地看到有多少人在对这一主题的评估中至少有所同意。但仍然在顶级公司的招聘方法没有变化。他们基本上告诉你的是：当你说你是一名经验丰富的程序员时，我们不相信你。我们不相信您的经验就是您所说的是，即使我们可以通过与过去的同行和主管交谈来验证它。这是一种悲惨的事态。没有其他专业，我可以想到 - 法律，医疗，土木工程，化学，生物工程，生物野蛮等持续挑战候选人的知识和经验，如软件开发人员定期忍受的仪式危险测试。也许我们也变得过于商品化了。我们是否简单地看作是可互换的零件？我们不值得一周或两种培训课程，用于新的语言或技术吗？改变来自内部，所以如果我们想要改变我们必须，因为专业人员试图改变我们在候选人筛选和招聘方面所努力的公司的文化。  回答 5 如果有人因批评非常好的批评（或失去围绕建造的批评而失去镇静），他们将在软件中努力。
可怕可能有点强烈，但我见过很多人在建议时通过分支或良好的梳理到软件中的增长。我见过一些关于他们的方法的问题。
这是一项团队运动！
我听说很多人都说，你需要能够捍卫自己的代码。我觉得这是一个正确的正确，但你需要能够解释自己的代码。
如果是高级开发人员
如果有人因批评非常好的批评（或失去围绕建造的批评而失去镇静），他们将在软件中努力。
可怕可能有点强烈，但我见过很多人在建议时通过分支或良好的梳理到软件中的增长。我见过一些关于他们的方法的问题。
这是一项团队运动！
我听说很多人都说，你需要能够捍卫自己的代码。我觉得这是一个正确的正确，但你需要能够解释自己的代码。
如果一位高级开发人员告诉我，我写了一些错误，很好，我要么捍卫它，要么我会意识到我搞砸了。在我的经验中，作为一个没有真正结婚的人甚至特定的设计模式（通常两种方式同样好转工作），这往往是嘿，嘿Dude，这就是我做到了的原因，为什么它有效，但如果你强烈想要它，我会改变它，没有Biggie。
但是当初级开发人员问为什么我会在某种情况下询问为什么我会做foo而不是酒吧？
我不能只是炸毁，称他们愚蠢，居高临下地说你只是不明白！当然他们不明白！他们刚开始。他们并没有质疑我是一个混蛋或破坏我对主题的任何权威。
这就是人们在脑海中完全失败的地方。您可能是一个智能和有能力的软件开发人员，但如果您没有构建周围的人，那么您在您的环境中表现不佳。
当然，有时人们以居高临下或指责的方式提出问题，但除了1/1000热门，大家犬的狗屎，大多数人都在问，因为我们都试图在这个领域成长。扼杀你周围的人的生长，因为你太不安全了，可能是错的实际上是值得可怕的头衔。
我宁愿拥有一个10/10队球员和7/10程序员，而不是另外的方式。
这就是人们没有看到很多次的东西。他们的愿景是关于我的隧道，我，我！但这是重要的整体画面。我们写的大多数代码将由我们甚至没有遇到的人保持维护。
想一想一分钟。考虑一下，这是有点疯狂的，但这是真的。人们在这个行业中移动了一大吨，其他人必须看看。
所以，如果你没有作为一支球队做的事情对每个人都有意义，做任何可读和好的东西，那么你留下了什么？
这并不是说人们不应该不时地忍受他们的地面，但我们都应该对我们所做的事情开放，这可能会更好，也许最容易对我们有意义的是真的很难99％的DEVS要理解，我们应该努力。
回答 6 如果有人是一个好的开发人员/程序员，那真的很难。但有时可能会告诉他们将是可怕的。
如果我正在寻找有人是否可以学习编程，他们需要的关键能力是摘要的能力。有人汇总了一个测试，这对学生在班上成功学习编程的能力感到令人惊讶地强烈相关。 （无法找到联系人;如果我找到它，我会编辑。下面的例子来自内存，因此可能是错误的。）关键是这样的问题：
在以下陈述之后，C的值是多少？
A = 10.
B =
如果有人是一个好的开发人员/程序员，那真的很难。但有时可能会告诉他们将是可怕的。
如果我正在寻找有人是否可以学习编程，他们需要的关键能力是摘要的能力。有人汇总了一个测试，这对学生在班上成功学习编程的能力感到令人惊讶地强烈相关。 （无法找到联系人;如果我找到它，我会编辑。下面的例子来自内存，因此可能是错误的。）关键是这样的问题：</description>
    </item>
    
    <item>
      <title>凭借超过800万个帐户，如何快速验证像Reddit这样的巨型网站是否已拍摄的用户名？</title>
      <link>https://xiangqingw.github.io/posts/with-more-than-8-million-accounts-how-do-giant-sites-like-reddit-verify-so-quickly-that-a-username-isnt-taken/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:13 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/with-more-than-8-million-accounts-how-do-giant-sites-like-reddit-verify-so-quickly-that-a-username-isnt-taken/</guid>
      <description>凭借超过800万个帐户，如何快速验证像Reddit这样的巨型网站是否已拍摄的用户名？ 回答 1 输入新用户名时，它会在列表中间检查它。这个名字是
这里有很多好的答案。为了纪念Reddit，我将为后方提供高度简化的ELI5版本，而不引用编程或计算机科学概念。
第一个关键诀窍是Reddit在排序，字母表中的列表中存储所有用户名。这意味着用户名列表看起来像A，AA，AAA，AAAB，&amp;hellip; Xyzzyz，yishan，Zz，Zztop。它是一个大的用户名单，800万 - 一些长期。它在字母表中布置在字母表中，就像字典中的单词一样。
输入新用户名时，它会在列表中间检查它。那个名字就像是manwithamodem。它将用户名与此进行比较，并询问是相同的名称吗？如果是这样，拒绝。它可能是没有，所以那么它问这个新用户名在此用户名之前或之后按字母顺序排列吗？
如果之前，它就会知道所有400万+在列表中的名称可能是一个匹配，所以它现在已经在单个比较中消除了400万+可能性。如果它追求，那么它就知道所有400万+在列表中的名字不能匹配。在任何一种情况下，我们只在一个比较之后排除了一半列表 - 以及我们排序清单！
接下来，我们采取我们没有消除的列表的剩余一半，查看该列表中间的用户名，并将其与我们的新用户名进行比较。再一次，如果它不是一个完美的匹配（即发现它已经在使用），我们可以判断匹配（如果存在）是否坐在排序列表中的那一点之前或之后。正如我们之前所做的那样，我们再次消除了整个剩余可能性的一半。
通过每次进行比较，通过将清单切成一半，我们可以快速浏览800万+用户名的列表。太快了？
答案是您需要划分800万的次数，直到结果小于1？我们正试图将排序列表的段切成两半，直到事情足够小，以至于我们已经达到了两个彼此旁边的用户名，然后我们可以将新用户名与每个人进行比较，如果它匹配其中一个，那么用户名已经在使用中;如果没有，那么它是一个有效的新用户名。
好吧，这个问题的答案是23次。
就这样。由于我们将用户保存在一个排序的列表中，我们只需要做的23个比较，以验证新的提出的用户名是否存在。这很多，比800万比较快。
如果您想了解更多，您可以在此处阅读其他答案，该答案解释了该排序列表如何称为索引，并且这种类型的搜索和比较过程（或类似于它的类似物质）通常会在其中的数据库中提供用户名存储，加上其他细节。
回答 2 快速搜索是可能的，因为数据库已创建用户名索引。该索引是用户名的排序列表。
想一想这样的：首先，数据库将用户名与800万用户名中间的用户名进行比较。如果它大于用户名，那么它就重复了与过去一半的中间（400万的中间）的用户名的比较，或者上半年的比较。
重复这一点，直到它找到用户名或两个用户名&amp;hellip;
回答 3 任何现代平台都应该能够索引和缓存一个小varchar字段，以返回子秒内的简单存在评估。即使数亿用户也不会努力让这是努力的人只有800万。
回答 4 这里有很多好的答案。为了纪念Reddit，我将为后方提供高度简化的ELI5版本，而不引用编程或计算机科学概念。
第一个关键诀窍是Reddit在排序，字母表中的列表中存储所有用户名。这意味着用户名列表看起来像A，AA，AAA，AAAB，&amp;hellip; Xyzzyz，yishan，Zz，Zztop。它是一个大的用户名单，800万 - 一些长期。它在字母表中布置在字母表中，就像字典中的单词一样。
&amp;hellip;&amp;hellip;
回答 5 为了回应你的问题，我有好奇，并决定在现代硬件上测试这一点。
我生成了一个带有800万行的文本文件，每行一个6-32个字符长字母数字字符串。这将表示我们的用户名。此文件大176 MB。
现在，使用非常基本的Python代码，我决定搜索这个文件。我从列表结束时占用了一个用户名（但不是最后一个）。我正在2019年MacBook Pro上运行这件事。</description>
    </item>
    
    <item>
      <title>在计算机开发之前，V2火箭是如何引导的？</title>
      <link>https://xiangqingw.github.io/posts/how-was-the-v2-rocket-guided-before-the-development-of-computers/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:13 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-was-the-v2-rocket-guided-before-the-development-of-computers/</guid>
      <description>在计算机开发之前，V2火箭是如何引导的？ 回答 1 盟友没有任何东西。 V2计划作为战争武器尤其低效。它使用吨燃料来提供一个非常小的弹头。在20英里的圈子中的任何地方着陆被认为是成功的。传统的轰炸机提供了更大的炸弹负载，更准确。直到原子弹头可用，V-2作为武器无用。
在战争期间，盟友没有像V-1和V-2这样的系统。这些只是恐怖武器，并没有影响敌人的战争能力。
盟友投入更好的雷达技术，更好的飞机，代码突破，抗潜艇技术以及对军事目标有用的东西。这些投资在黑桃中得到了支付。在他们建造原子弹之前，盟国在战争中赢得了很久。
回答 2 谁说他们没有电脑？
V2中使用的模拟计算机的示例。
概念上，V2S从已知位置发射到已知目标。预先确定意味着范围和方位角。即 - 如果导弹到目前为止以这样的角度传播，则会击中。
为此，您需要加速度计：
像这样的东西（仔猪）是早期的v2使用。它基于加速度的信号产生信号。如果您了解高中物理，您将记住集成加速度提供速度，集成在一起。所以你有来自SI的最关键的数据
谁说他们没有电脑？
V2中使用的模拟计算机的示例。
概念上，V2S从已知位置发射到已知目标。预先确定意味着范围和方位角。即 - 如果导弹到目前为止以这样的角度传播，则会击中。
为此，您需要加速度计：
像这样的东西（仔猪）是早期的v2使用。它基于加速度的信号产生信号。如果您了解高中物理，您将记住集成加速度提供速度，集成在一起。因此，您可以从这样的简单对象和一个或两个模拟集成商中拥有最关键的数据。
模拟计算机用于从该信息中处理实际轨迹，并在所需点切断电机。 V2将提升到特定的速度，切割电机，然后掉下来。电机没有一直燃烧到目标！
在后面的V2上的无线电指导是告诉导弹何时切割电机;在特定坐标上没有回家。加速度计不是完美的，尤其是机械，因此他们试图通过无线电转发器来测量速度。顺便问，V2S并不完全准确。但即使在晶体管之前，数学也可以完成！ v2后面的同一组最终帮助把一个男人放在月球上;他们是聪明的猫。
许多现代导弹仍然使用集成的加速度计电路来获得它们的速度和位置。这对于确保只需距离发射平台即可安全距离即可禁用弹头。 V2所做的基本前提是大多数指导系统的工作原理 - 采用输入信号，调整影响反馈循环中输入的输出。 V2主要涉及火箭电机，但现代导弹看看其目标的相对位置，并调节它们的控制表面（翅片）以转向它。
人们通常会将计算机视为数字; 0和1的。但模拟电路非常强大，让您轻松地进行集成和差异化。这也是非常艰难的主题;大多数电气工程师从这些课程中获得伤害GPA。
回答 3 你必须指数字计算机。
有类似的模拟计算机接受来自陀螺仪，指南针和THT等东西的模拟输入，并为伺服器提供反馈。
在V2的情况下，排气中有四个石墨控制叶片连接到四个独立的伺服电机。这些由小型模拟计算机控制，该计算机由引导仪器感测到的输入，并通过操作连接到叶片的伺服来执行校正。反过来，这些叶片转向了排气。请记住，它在其核心仅在沿着弹道路径控制俯仰，滚动和偏航。自炮兵在战场上变得普遍的日子以来，弹道就部分已经充分利用了。 V2指导系统必须沿着弹道飞行路径纠正差异。
回答 4 这不是。对陀螺仪进行的设置，并在给定方向上发射，希望它会在另一边击中有意义的东西。
像它的前任V1一样，V2是恐怖武器，而不是战略轰炸。
回答 5 更具体地，V2火箭由称为MISCHGERAT的模拟计算机系统引导，该模拟计算机系统从两个陀螺仪（一个水平和一个垂直）加上加速度计或无线电孔
现代意义上的数字电子可编程系统的计算机不存在，但是在机械和机电计算机制的感觉中绝对确实存在电脑。最复杂的例子将是大海军舰上的弹道防治系统，尤其是在当时使用世界上最复杂的系统的美国海军。
更具体地说，V2火箭由称为MISCHGERAT的模拟计算机系统引导，该模拟计算机系统从两个陀螺仪（一个水平和一个垂直）加上加速度计或无线电控制模块，并且反过来控制一组电液伺服电机，在尾部翅片上致电四个外舵和火箭排气中的四个推力矢量叶片。这台电脑做了两个比较简单的事情：
当火箭达到正确的速度时，它基于从内部加速度计或无线电控制链路的输入达到正确的速度时，它关闭了火箭发动机。在前一种情况下，在发射之前将设定所需的速度，而在后一种情况下，地面站将通过多普勒雷达跟踪火箭的速度，并在达到适当的速度时将其发送无线电命令。
它提供了基本的惯性转向，以抵消火箭课程中的任何波动，或它可以遵循来自地面的无线电引导信号。
回答 6 伟大的答案。
我听说过的最简单的位置测量器是一种纯机械双积分器，通过将加速度的值馈送到有效地计算火箭的电流速度的电动机中，然后将速度的电流值馈送到另一个电动机上的电动机上计算火箭距离或位置。真的直观！
回答 7 不是很好。燃料量确定距离，不是非常准确;并且陀螺系统大致朝向正确的方向送出。但它通常会错过几km的瞄准点。
这些天我们倾向于使用计算机来均衡数字电子电脑。除了早期设计的码碎片设备外，它们没有WW2中的那些。但是，它们绝对确实在更一般的意义上具有更多的计算机 - 主要是使用齿轮和机构的模拟设备和/或模拟电子电路。
Norden Bombsight是一个复杂的模拟计算机的众所周知的例子，它可以被捆绑来控制轰炸机的自动驾驶仪。美国战列舰的防火系统是另一种非常复杂的计算，通常基于实时输入，即使两个船舶操纵也是在很长的范围内实现准确的枪声。
回答 8 飞行路径被编程到模拟计算机中，该计算机响应了与预期轨迹的偏差发生。时间和方向是主要变量。精确的[和可靠性]被奴隶劳动者的聪明破坏侵蚀，并在伦敦的虚假代理商逐步地反馈到达时间。有人说，后一种做法确实在反对党居住的轰炸地区实现了一些精确性&amp;hellip;&amp;hellip;
回答 9 V-2不是导弹，也不是V-1。V-1有一个脉冲喷射发动机，更像是一种无导体的巡航导弹。发射器简单地瞄准它并在规定的时间后，设置一个计时器以切断发动机。V-1失去了势头并受到撞到的任何地方受到影响。V-2是一个弹道导弹。它在抛物线弧上发射，旨在以地图上的预定点结束;因此，它的路径被计算得多于炮击壳。没有导弹都可以被视为一种精密武器，并且发射后既没有课程纠正的能力。
回答 10 因为如果泵在飞行中关闭，导弹将继续沿着弹道轨迹，可能会在英格兰的某个地方引爆。如果涡轮泵吹动本身，它会刺破坦克，导弹会爆炸浪费鼻子里的千磅爆炸性。</description>
    </item>
    
    <item>
      <title>如何在Turbo C中创建一个新项目？</title>
      <link>https://xiangqingw.github.io/posts/how-do-i-create-a-new-project-in-turbo-c/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:13 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-i-create-a-new-project-in-turbo-c/</guid>
      <description>如何在Turbo C中创建一个新项目？ 回答 1 在20世纪80年代后期，我曾经在当天的Atari st上回来涡轮增压，以后它被重命名为纯C.这是一个很好的编程环境，但我绝对无法告诉你如何创造今天的项目。
回答 2 它不存在。
现在，如果您有特定的需求集，您可能会找到一个可能与该情况最适合的编译器（或一组编译器）。
尽管如此，没有单一。您甚至没有说明测量标准。没有单一的判断编译器的价值。
最好的价钱？最棒的表演？最好的诊断？最好的代码大小？最佳许可证？最好的文件？最佳支持？最佳遵守标准？最佳编译extensions？最好的交叉编译支持？最好的编译时间？最佳便携性？最佳名称识别？最好的整合到您的工作流程中？最佳内存消耗？
即使在这些指标中的几个指标上，所有C程序可能都有统一。
GCC和LLVM都有很好的C编译器。 MSVC更好地集成到Windows生态系统中，虽然Microsoft在C ++上专注于C ++，而不是保持最新状态。英特尔有一个C编译器，它在自己的筹码上做了鞭打的东西。 TI的C编译器确实为他们的DSP疯狂优化。
而且，如果您正在编制Commodore 64，我听到CC65是去的方式，虽然我没有直接经验。
回答 3 蒂姆
是的，我们可以在Turbo C ++编译器中运行C程序，然后您询问如何实现它。因此，答案很简单只是按照下面给出的步骤
这如何如何在Turbo C ++编译器中运行C程序。
快乐编码🙂
回答 4 这里有很多热情的C ++编码器，但我会违背谷物并说出它一般，但并不总是用C ++开始一个新项目的错误选择。
与其他选项相比，在C ++中开发代码的总成本和维护该代码库的成本要高得多，并且开发更慢。此外，维护C ++ CodeBases的团队通常不太敏捷（不是过程而言，而且在改变产品相对于市场的能力方面）。最后，C ++的性能增益通常小于可以更快的迭代所获得的增益，C ++中项目的开发成本通常远远超过更多机器。跨平台方面具有一些值，但语言之间的端口代码成本通常远低于在C ++中通常开发的成本。净网络：作为技术选择的经常成本无效。
但是，有例外。复杂的模拟，高级计算机图形，嵌入式系统，电源管理是一个重要的代码，是一个重要的问题，高度分布式的问题或具有自定义数字优化的问题落入一类通常最适合C ++的问题。每年框架在尽量减少未托管代码的优势时会更好地保持托管代码的优势，例如TensorFlow和CNTK在非常大的数据集上使机器学习在不使用非托管代码的情况下，或者单位已经制作（一些）游戏没有非托管代码的开发可能，但存在许多框架造成的案例。
即使C ++是正确的选择，它往往不是真的，整个项目应该在C ++（或C）中开发。相反，成功的策略是抽出需要高性能的代码进入库，然后将其嵌入到具有较低成本语言开发的项目中。
作为一般规则，如果您确切地知道您正在尝试构建的内容，那么该图书馆的性能要求挑战，那么它值得考虑。但是，用睁大眼睛考虑它：它是一种昂贵的语言，且成本通常但并非总是消化的性能优势。
回答 5 终极编码项目是我称之为活力的代码
活力代码基本上是一个现场编码项目。
什么是现场编码，你可能会问。
在简单的术语中，现场编码是一种编码形式，其中代码在代码正在执行时写入代码。
基本上与执行代码相反 - &amp;gt;崩溃/退出，因为错误 - &amp;gt;在源文件中找到错误 - &amp;gt;更改代码以更正错误 - &amp;gt;重新启动执行
实时编码是Lisp和Smalltalk代码的主要方式。我最喜欢的语言pharo是一种现代的小型技术。
这看起来很奇怪或难以做到，但实际上非常简单。全部
终极编码项目是我称之为活力的代码
活力代码基本上是一个现场编码项目。
什么是现场编码，你可能会问。
在简单的术语中，现场编码是一种编码形式，其中代码在代码正在执行时写入代码。
基本上与执行代码相反 - &amp;gt;崩溃/退出，因为错误 - &amp;gt;在源文件中找到错误 - &amp;gt;更改代码以更正错误 - &amp;gt;重新启动执行</description>
    </item>
    
    <item>
      <title>您曾经遇到过的源代码中的最佳评论是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-is-the-best-comment-in-source-code-that-you-have-ever-encountered/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:13 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-the-best-comment-in-source-code-that-you-have-ever-encountered/</guid>
      <description>您曾经遇到过的源代码中的最佳评论是什么？ 回答 1 我曾经在十六进制编辑器中打开可执行程序，看看我是否可以看到评论，复活节彩蛋等的字符串，我使用的早期文本编辑器之一具有嵌入在其.exe文件中的此评论：如果您可以阅读，您也可能成为一个伟大的黑客！完全破解了我！
回答 2 我在税务软件公司工作。我们的一个开发人员正在致力于一个人可以填写税务表格和写入错误消息以获得所有可能的错误。他遇到了一个无法发生在现实世界中的错误。在现实世界中没有办法，您甚至可以设置错误的情况。尽管如此，他不喜欢在没有错误对话框的情况下留下一个置换的想法。但是如果时间和空间突然出现了什么信息&amp;hellip;&amp;hellip;
回答 3 鸭子说了什么????????????????????????????????????????????????????
喵。
是的，亚马逊让鸭子说喵喵叫！
转到Amazon.com和查看页面源（Ctrl + U），滚动到最后，你可以看到一只鸭子说喵喵叫！
而且，在第240行，您可以看到此消息说：
回答 49 发现这个宝石大约三个星期进入一项新工作，几乎整个工程团队在接受采访时间和我的开始日期之间留下。
在对此项目的帮助下，我有良好的财富，前一天在绅士们负责下面的绅士们被解雇，以便将IT票用于打击工作。</description>
    </item>
    
    <item>
      <title>计算机程序员，软件工程师和开发人员只能让其他人不做什么？</title>
      <link>https://xiangqingw.github.io/posts/what-do-computer-programmers-software-engineers-and-developers-just-get-that-other-people-dont/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:13 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-do-computer-programmers-software-engineers-and-developers-just-get-that-other-people-dont/</guid>
      <description>计算机程序员，软件工程师和开发人员只能让其他人不做什么？ 回答 1 一般ID说，至少对至少基本逻辑的理解。所以，如果我与非开发人员交谈并制作一个非常简单的条件声明，就像一个，那么b，我傻眼了解了多少人，其中有多少人忽略了if，并指责我说b总是真的。程序员一直在有条件上交易，并且更有可能接受这一点。甚至程序员甚至悲伤地常常在内容是政治性质时奋斗。
程序员让我变得更有可能重新认可&amp;hellip;&amp;hellip;
回答 2 嗯，我应该在哪里开始？
你知道什么，我刚刚开始制作一个清单，看看它最终的位置&amp;hellip;&amp;hellip;
这可能已经足够了。并非所有人都会让我畏缩，但大多数人都非常令人沮丧，我从新手到中间开发人员看起来很沮丧。
好消息是，我确信有一份来自经验丰富的开发人员的同样令人讨厌的行为列表，因此我们都不豁免讨厌他人。
在个人备注上，我相信我挫败了我在每个技能水平的每个技能级别的公平份额，我在这个列表中在一个或另一个人中完成了大多数东西，所以我绝不是豁免。
 武器
P.S.我也在其他地方写下代码和职业问题&amp;hellip;&amp;hellip;  回答 3 华丽的人说他们可以编码但从未做过它
非常有趣的情况，但真实的生活。我有一个同事 - 完全没有技术（但是华丽而假装是技术）。他只是重复他听到的东西或阅读他的同事陈述的东西（写作或讲述）。绝对不知道自己的工作。讽刺地，他已经完成了近2年的几十年，大约十几个裁员（几个月没有工作）。
我们正在使用包括AWS Lambda和Apache Spark的很多东西。因此，我们有多种编程语言选择 - Java，Python，Scala，Go等&amp;hellip;&amp;hellip;随时随地，即使他绝对不需要（他有）在每次会议中一直在可选）。我们在让开发人员使用它们所擅长的内容而不是强迫每个人在Java中迫使每个人来说（如我们知道毕业于过去5 - 7年的人，而是比Java更加了解Python）。
每次有关于任何语言的讨论 - 这个家伙都会说他正在学习那种语言（通过9.99美元的Udemy课程 - 始终购买课程，只是玩&amp;hellip;&amp;hellip;从不学习或理解）&amp;hellip;&amp;hellip;但他从未准备好贡献（设计或代码）&amp;hellip;&amp;hellip;他的简历继续添加他刚刚听到的东西。他想了解一切。后来他去了我们的老板，并声称这就是他所做的一切。老板超级繁忙，因为没有充分的理由（每天近14个小时工作&amp;hellip;&amp;hellip;工作没有人知道什么&amp;hellip;&amp;hellip;带来这个糟糕的家伙的每一个词）。这家伙非常出色，扮演肮脏的政治并掌权别人的工作。
非常需要这些人应该被启动出来。它需要很多清洁。
编码是低级任务，任何人都可以做到
有些非程序员和N岁的人总是提升这一点，这个编码是低级任务，每个人都可以做到这一点。但他们从未前进，并尝试这样做。他们在这里是什么？只是说话，做肮脏的政治，并掌权别人的工作。我不知道这些人有史以来如何对IT领域做出。是的，我确实理解了很多几十年来对它的需求，但这不应该在这个领域得到这些瘾君子。
一个晴天它会发生
另一个例子&amp;hellip;&amp;hellip;几年后我们有一个主要是支持的大型机资源。他正在开放系统项目（Java，C ++等）&amp;hellip;&amp;hellip;当时SCJP（Sun认证Java程序员真的很热IT证书）&amp;hellip;&amp;hellip;这个人在他的任期6个月（他没有超越超过6个月）曾经说过什么scjp &amp;hellip;&amp;hellip;在周末和下周一的一个晚上我会有那个。那个周末的夜晚即使在14年后也从未在他的生命中进入。我几个星期检查了他，他没有完成（现在它从甲骨文开始，并且还有一个较小的难度证书考试）。
回答 4 一旦我在网上遇到一个笑话，就是这样的：
世界上有10种类型的人。理解二元的人;那些没有的人。
看着它一点点，啊，我明白了。那种有趣的。所以我把线路转发给了一个朋友，并在最后添加了，我不敢相信它花了10秒才能得到它。
我的朋友在某个时候回答，哈哈，我比你好。它只花了4-5秒才能得到它。
只有在电子邮件中可以看到我的傻笑，我才回来了，你只有0.1个笑话。
回答 5 我正坐在我妻子旁边的医院里，他们在劳动力的积极部队提供我们的经营。护士让这个监视器绑在她身上：
所以在一个点，我问了一个护士的数字意味着什么，以及我们看到的数字是否显示出强烈的收缩。她对我说：别担心，那件事在127左右超越！她继续说她不知道为什么它会在这样一个奇数。
所以我是，像某种善良一样傻笑，在中间，在中间可以说是傻笑的事情。我确切地认识为什么这是这样做的，或者至少，我怀疑！
正如评论中所指出的那样，我解释了为什么会发生这种情况。原因简单，它是因为对于计算机，数字128,256,32768和65536是圆形的，就像100或10 000或这些数字可能是正常（十进制思维）人。一个不到这样的数字的数字等同于999上最大化的计数器，因为它只有三位数字可以使用。程序员理解大约127的程序员与普通人理解约999的基本相同，但程序员立即得到这种情况。
我需要扩展的第二件事只是一小位（这对故事没关系，我只是为了兴趣而添加它）是上面的监视器照顾两件事：胎儿心跳和收缩。左侧的数字是胎儿心跳，可以说是更重要的，并且相当准确。右边的那个是一个无量纲的数字，并且在我的经历中并不准确。因为护士知道它达到100多个，每个人都非常关注劳动力没有进展，因为我们几乎没有到达40多岁，我们在12个小时内。当妇产科人到达时，她惊讶地发现我们很糟糕的是发现我们进入了积极阶段并进入最后一个（最短）的阶段&amp;hellip;&amp;hellip;机器没有读得很好！
添加：2020年6月
有趣的最近案例让我陷入了一段时间，这是一辆汽车无线电AKA头部单位。音量最大化为63。
互联网上的一些搜索发现这在许多家用电器中非常常见，特别是LG电视。
同样，计算机程序员直观地知道它是2 ^ 6-1，你可以用6位表示最大的数字。但为什么在地球上会有任何人使用6位卷吗？并假设设备至少使用8位微控制器，另外两个比特将保留什么？
答案原来是在编程领域之外，并且在电子领域：最常见的数字电位计具有64个离散的阻力水平。任何使用此类组件的设备将具有64个离散的音量，从0到63。
在这种情况下，我怀疑一名电子工程师会立即得到它，而我们其他人会陷入困境！
回答 6 您意识到许多公司是数据挖掘公司。
例如，采取Foursquare。对于许多人来说，这是这个有趣的应用程序，您可以在那里办理入住手段，您可以在那里查看您访问的商店和餐馆。但是，广告商会喜欢知道您在商店的商店，Foursquare在他们的隐私政策中明确地说，他们销售您的（假义）签到广告商，所以他们可以衡量他们的广告有效程度。
Quora也是一个数据挖掘公司。对您来说，这是一个阅读和写作的平台。但Quora的主要工作是弄清楚你喜欢的东西，所以他们知道展示你的内容。 Quora甚至还有自己的跟踪像素（尽管在我理解时，这是一个很近的发展）。</description>
    </item>
    
    <item>
      <title>两个字符串真的不可能拥有同样的SHA-256哈希，或者它是不太可能被认为是不可能的吗？可能的哈希有限公司，但我们可以拥有无限的独特字符串，我错过了什么？</title>
      <link>https://xiangqingw.github.io/posts/is-it-really-impossible-for-two-strings-to-have-same-sha-256-hash-or-is-it-extremely-unlikely-that-it-is-considered-to-be-impossible-the-possible-hashes-limited-but-we-can-have-infinite-unique-strings-am-i-missing/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:12 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-it-really-impossible-for-two-strings-to-have-same-sha-256-hash-or-is-it-extremely-unlikely-that-it-is-considered-to-be-impossible-the-possible-hashes-limited-but-we-can-have-infinite-unique-strings-am-i-missing/</guid>
      <description>两个字符串真的不可能拥有同样的SHA-256哈希，或者它是不太可能被认为是不可能的吗？可能的哈希有限公司，但我们可以拥有无限的独特字符串，我错过了什么？ 回答 1 哈希可能是如何逆转的？有证据吗？
写入程序以反转任何散列函数是琐碎的。任何初学者程序员都可以编写该代码，并且该代码证明它可以完成。如果你困惑，你是对人们困惑的，为什么人们一直告诉你，他们是不可能的，他们是错误的（或者更准确，你可能误解了他们的观点）。
哈希函数得到他们的加密力量不是不可能颠倒的，而是来自&amp;hellip;&amp;hellip;
回答 2 它当然不是不可能的。但是它非常不可能。
由生日悖论，如果我们收集21282128哈希，我们在该集合中的两个散列之间有大约50％的碰撞。
让我们说比特币网络每秒拉动1.7亿立陶宛。它接近这一点，这种选择使数学变得更简单。
1.7亿特拉什人是1.7×10201.7×1020。同时，2128≈3.4×10382128≈3.4×1038。
这意味着，如果我们在任务上设置了整个比特币网络，那么它将需要2×10182×1018秒才能找到碰撞。
那是多久了？ theres近似
它当然不是不可能的。但是它非常不可能。
由生日悖论，如果我们收集21282128哈希，我们在该集合中的两个散列之间有大约50％的碰撞。
让我们说比特币网络每秒拉动1.7亿立陶宛。它接近这一点，这种选择使数学变得更简单。
1.7亿特拉什人是1.7×10201.7×1020。同时，2128≈3.4×10382128≈3.4×1038。
这意味着，如果我们在任务上设置了整个比特币网络，那么它将需要2×10182×1018秒才能找到碰撞。
那是多久了？在一年内大约Π×107π×107秒，所以约6.4×10106.4×1010年。
如果我做了我的数学权利，那将需要整个目前的比特币网络约64亿多年来有50％的机会找到SHA 256碰撞。
所以，是的，非常不可能。
回答 3 两个字符串可能具有相同的存在，这是一个像你说的简单计数争论。
它不太可能发生，很难构建具有相同的字符串。
对于较旧的哈希，这已成功完成，例如，MD5，对于SHA256很难做到
回答 4 A2A：不。
没有考虑到它。两个字符串肯定有可能具有相同的哈希。但是，很难找到具有相同哈希码的不同字符串。
鸽子校长：有“只有”22562256不同的哈希代码。但是，由于这些字符串不限于256位，您可以散列哈斯赫的大大不同的字符串。他们不能都有不同的哈希。
回答 5 这不是不可能的。它非常不可能。而且，即使有两个字符串具有相同的哈希，它们也不会“看起来更像彼此。而且，这是这种散游的重要品质。您无法拍摄字符串，并轻松对其进行一些更改并修复虚假字符串以具有相同的哈希。您可能有另一个具有相同哈希的字符串，但它不会是第一个字符串的虚假。
回答 6 有坏消息，有好消息。
坏消息是，即使是说，只有1-kbit串，每一个都是22562256哈希分享27682768。所以，不仅碰撞不是不可能的;他们很丰富。添加更多潜在的长度，您有噩梦大量的哈希碰撞。
好消息是你不能拥有这么多字符串。因此，逐个逐个逐个的理论，总数不同的字符串根本无关紧要。重要的是，您实际上可以在某种应用中拥有多少个不同的字符串。所以，即使对于21002100不同的弦数，也有足够的稀疏性，因此是非常，非常小的碰撞概率。
回答 7 每个相同的两个字符串都具有相同的哈希。两个非相同字符串的哈希相同，概率约为2英寸，如上所述，有无限的串，因此存在具有相同哈希值的无限多条串。
回答 8 两个字符串真的不可能拥有同样的SHA-256哈希，或者它是不太可能被认为是不可能的吗？可能的哈希有限公司，但我们可以拥有无限的独特字符串，我错过了什么？
您错过了关于捕捉的数学课程，即非注射的或非注射形状功能。然后（IM）概率取决于输出的熵，256是指数的大数字，即在碰撞时偶然绊倒。
回答 9 不，你没有错过任何东西。由于所有输入映射到固定尺寸的输出，它绝对是确切的是多个输入（实际上只要输入尺寸不受限量的无限数）都可以产生任何给定的输出。
问题在于找到它们。
回答 10 如果SHA-256中的位数（256，其中每十六进制字符可能为4位，如果散列在十六进制中输出）短于位中的字符串的长度（调用n），则有2 ^ 256可能的哈希，2 ^ n可能的字符串，并且由于2 ^ 256是小于2 ^ n的方式，必须有不同的划线，具有相同的哈希。
如果它们可以具有无限长度，则只有无限数量的字符串，而不是限于每个尺寸，如每一个特定尺寸。
找到具有相同哈希的第二个字符串，作为给定字符串可能会非常耗时。
回答 11 它是极不可能的，但可能的。2个不同随机选择的字符串具有相同SHA256哈希的赔率约为2256.2256。
回答 12 你已经有了一些好的答案。我只会补充一点，哈希必须有点碰撞。例如，您不应该能够通过更改法律文档，例如添加几个0s，然后补偿其他地方的消息以获取相同的哈希。因此，消息的小变化必须导致哈希的大变化。因此，当您建议向文档制定有意义的更改以产生相同的哈希值，所以不太可能被认为是不可能的。但是，安全始终是相对的，对于大量数据，人们可能想要增加散列大小。</description>
    </item>
    
    <item>
      <title>为什么Java被认为是一个硬编程语言？</title>
      <link>https://xiangqingw.github.io/posts/why-is-java-considered-a-hard-programming-language/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:12 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-is-java-considered-a-hard-programming-language/</guid>
      <description>为什么Java被认为是一个硬编程语言？ 回答 1 实际上，与其他语言相比，学习Java是关于中间困难的。
帕斯卡用于教学 - 它被设计为一种教学语言 - 很容易学习。建立真实的东西并不容易，直到涡轮帕斯卡队 - 而德尔福稍后 - 但那些不再易于学习。
实用性，似乎，很容易有点差不多。
基本曾经用于教学，但是许多缺陷和遗漏和普遍的不愉快，真的很避免。现在它基本上已经消失了，良好的谜语。
Python是现代等价物
实际上，与其他语言相比，学习Java是关于中间困难的。
帕斯卡用于教学 - 它被设计为一种教学语言 - 很容易学习。建立真实的东西并不容易，直到涡轮帕斯卡队 - 而德尔福稍后 - 但那些不再易于学习。
实用性，似乎，很容易有点差不多。
基本曾经用于教学，但是许多缺陷和遗漏和普遍的不愉快，真的很避免。现在它基本上已经消失了，良好的谜语。
Python是现代相当于基本的。每个人都想学习Python，同样的方式在20世纪80年代，每个人都想学习基础。 Python似乎很容易学习，但其简单性是欺骗性的。基本概念等价值表示，如何处理类型，指针主要是隐藏的。
如果你永远不需要知道它们，你就可以了，但如果你确实需要了解它们，那么缺乏基础知识可以让你回来并导致多年的混乱。
同样用于JavaScript。欺骗性早期简单使占地面积的占地面积和绊脚石和难以阻碍对编程的真实理解的奇怪性。
然后有语言更困难。 Haskell和Lisp有时被教授为第一语言，他们似乎为此工作 - 如果你是一个特殊的心态。诱惑是要说数学心态，但这并没有真正准确;它们没有比其他编程语言更多的数学，但初学者经常发现它们很难。
所以&amp;hellip; java。
虽然Java库很复杂，但基本语言很简单。它与欺骗性简单的危险性的危险程度不如基本，Python，JavaScript，Ruby，PHP和类似语言，但它强制学习者解决对象方向 - 封装，继承和多态性 - 以及编程基础 - 序列，选择，迭代，表达评估，变量 - 与学习基本图书馆机制同时。
这是一次拍一次的很多。
因此，我建议从C开始
我喜欢学习。这就像用所有的盖子调查机器，所以你可以看到运动部件。标准库很简单，它没有隐藏指针和值表示，并且它不会遮挡对象方向胶板后面的编程基础。当您学习C时，您真的学习编程的基本原则，只有编程的基础，以及良好的机器基础。
但是一旦您使用C来学习编程，除非您计划成为系统程序员，否则切换到Java或C＃等内容。
如果您不是系统程序员，C有许多GOTCHAS最终会咬你。不仅仅是什么，不要使用c作为业务应用程序开发语言。为此，这是工作的错误工具。
已经学习了C，拾取Java或C＃很容易。
顺便说一下，Java和C＃是如此类似的是它们有效地有不同的相同语言版本。 C＃有几个语言功能，C＃人真的喜欢它们。 Java人们认为他们增加了不必要的噪音，但我们真的将苹果与此处略微不同的苹果比较。
想想C＃和Java是一样的。
我争辩说，首先学习C，然后学习Java或C＃，比学习java或C＃自己更容易。
那么为什么Java被认为是一个硬编程语言？
简而言之，它是因为Java具有大量广泛的库和对象方向以及完全静态键入的编程语言的所有复杂性。它是为建立工业质量的软件机械制作，这意味着它是一种工业工具，需要工业水平致力于学习它。
这使得它具有固有的复杂性，复杂性使得任何困难。
但不要让这吓到你。正如我所指出的那样，Python和JavaScript这样的替代方案可能看起来更容易，但它们不是。了解一些C开始，然后切换到Java。那么它似乎不会像复杂一样复杂 - 你会看到Java的功能如何让大量的C更容易和更简单 - 您可以准备好学习为它做的事情使用它：开发工业-Strence Enterprise软件。
回答 2 它可能是因为它非常冗长。这意味着阅读Java代码是繁琐的。相比之下，像Python这样的语言更容易。</description>
    </item>
    
    <item>
      <title>为什么Microsoft选择C在Windows中的默认驱动器？这是一个背后的故事吗？</title>
      <link>https://xiangqingw.github.io/posts/why-did-microsoft-choose-%e2%80%9cc%e2%80%9d-for-the-default-drive-in-windows-is-there-a-story-behind-this/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:12 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-did-microsoft-choose-%e2%80%9cc%e2%80%9d-for-the-default-drive-in-windows-is-there-a-story-behind-this/</guid>
      <description>为什么Microsoft选择C在Windows中的默认驱动器？这是一个背后的故事吗？ 回答 1 这里的答案是非常正确的，但我想补充一点
软盘驱动器都有自己的控制器
当硬盘出来的电脑，它采用了专用的控制器，特别适用于硬盘驱动器（我忘了名字），在当时的主板没有主板上的硬盘驱动器控制器，所以时间的硬盘驱动器是通常由与ISA硬盘驱动器控制器卡捆绑
后来在路上，一个更通用控制器出来称为IDE（电子集成驱动器），发布从那时起放弃了他们专有的硬盘驱动器控制器，并使用IDE控制器启动硬盘驱动器，而这一次的IDE控制器是主板旁边的软盘上控制器，不再占用一个ISA插槽
IDE打开门，其他形式存储的，如光（CD，DVD和一些古怪的格式），ZIP驱动器，CF卡读卡器，甚至一些SD卡读卡器存在是通过IDE连接（大多为热插拔固态替代在较旧的计算机硬盘驱动器）
但是，与硬盘驱动器，软盘驱动器不会从软盘控制器没有变化，还有作为一个IDE软驱没有这样的事
正因为如此，甚至直到今天，驱动器A：和B：专门为（现在不存在的）软盘控制器保留的，而直至SATA被释放十年或两个（或者甚至3）后，IDE控制器负责对于任何驱动器C：和最多
通常，C：被转移到任何驱动器是在IDE0头中的主
现在取决于BIOS，有可能诱使一些PC变成使用ISA软盘控制器卡，其中，根据我所听到的一个附加接受长达4个软盘驱动器，将显示第三个软盘驱动器作为驱动器d：或E ：
回答 2 归咎于1960年代后期使用的驱动器盘符与IBM一般起源。所述CP / CMS分时操作系统有小型磁盘的概念，它被称为与会话相关联的物理或逻辑驱动器。字母A或B表示，其小型磁盘你指的。
在70年代初微电脑世界，数字Research的CP / M操作系统中，部分是由IBM的CP / CMS的启发。 CP / M使用的驱动器号指定物理驱动器。当时，8英寸软盘驱动器是昂贵的，但他们更实惠，比硬盘驱动器的可用存储空间。信件被用来识别物理软盘驱动器，以及使用该驱动器作为前缀的文件名的想法可能来自DEC的1967年TOPS-10操作系统，它使用的设备前缀来了。
因此，可以让我们使用的驱动器盘符前缀指定单个驱动器的点。在此之前的20世纪80年代，这种做法是不通用的（即，一些操作系统使用的名称或编号到指定的驱动器）。但是CP的流行/ M影响了很多后来微电脑操作系统，采用驱动器字母前缀的方法。
这种方法坚持为8英寸软盘驱动器让位给更小，更便宜的5.25英寸软盘驱动器。在与软盘驱动器的系统，两个驱动器很常见，因为（a）操作系统本身所占用的空间，在引导软盘上显著的百分比，以及（b）具有两个驱动器复制软盘是更快，更容易。因此，A和B软盘驱动器的系统是常见的。
QDOS，后来成为86-DOS，是有效的CP / M的16位运算的克隆，由西雅图电脑产品（SCP）独立开发的。权86-DOS被微软（看到这个答案的详细故事）购买的，当时微软被要求提供一个CP / M-像第一个IBM PC操作系统。 PC-DOS和MS-DOS，从该协议窜出，基于86-DOS到IBM PC硬件的端口上。 PC-DOS中使用的IBM硬件和MS-DOS是对所有在此后不久兴起的IBM兼容的克隆使用。
原IBM PC在1981年随两个5.25英寸软盘驱动器。当然，A和B分别为他们指定的驱动器号。下选择作为默认的盘符为硬盘驱动器，当硬盘驱动器变得可用。最初，在PC-DOS / MS-DOS的驱动器号称为物理驱动器，并在此后不久引入逻辑驱动器的支持。 IBM个人电脑的普及野生无数和兼容克隆凝成了驱动器字母前缀的方法，特别A和B软盘驱动器和C作为硬盘驱动器。
继任到MS-DOS，包括Windows，Windows NT和OS / 2，采用同样的方法，主要是为了与现有的应用软件为PC平台的兼容性。 5.25英寸软盘驱动器让位给了3.5英寸软盘驱动器，A和B驱动器号刚刚凑凑热闹。
如今，软盘驱动器很少见到在现代系统中，虽然有USB软盘驱动器的偶然目击。您可以从硬盘驱动器（或固态驱动器）启动。你是从一个驱动器，其分配的盘符是C可能启动，如果你在一USB软盘驱动器的堵塞，他们很可能会显示为驱动器A和B.
因此，使用驱动器号日期在IBM于60年代，驱动器字母前缀发现其在20世纪70年代的立足点在CP / M操作系统的微型计算机，并且A，B的分配，和C在20世纪80年代凝固由IBM和微软。我们不认为A和B软盘多了，但C作为硬盘驱动器（或SSD）信生活在电脑世界。
除了系统上面提到的操作，许多其它操作系统使用（或已使用）驱动器号，包括但不限于：MP / M，并发DOS，FLEXOS，4680 OS，4690 OS，S5-DOS / MT，多用户DOS，系统管理，REAL / 32，REAL / NG，S5-DOS，在DOS另外，DR DOS，Novell的DOS，PalmDOS，OpenDOS家庭，AMSDOS，PTS-DOS，S / DOS，FreeDOS的，GEMDOS，TOS，薄荷，魔术，MultiTOS，SpartaDOS X，MSX-DOS，ANDOS，CSI-DOS，MK-DOS，GEOS，SymbOS，eComStation，ReactOS的，Symbian操作系统，DexOS，TempleOS。
回答 3 它也是DOS中的默认值。第一个IBM个人计算机有两个360k 5-1 / 4“软盘驱动器。左手是一个，右手是B.</description>
    </item>
    
    <item>
      <title>如果几乎每个人都可以免费学习编程，为什么薪水相对较高？</title>
      <link>https://xiangqingw.github.io/posts/if-almost-everyone-can-learn-programming-for-free-why-is-the-salary-relatively-very-high/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:12 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/if-almost-everyone-can-learn-programming-for-free-why-is-the-salary-relatively-very-high/</guid>
      <description>如果几乎每个人都可以免费学习编程，为什么薪水相对较高？ 回答 1 因为几乎没有人关心编程。
不要让我错了。每个人都懒得坐在各一天，推动按钮和银行。每个人都想尝试。
但没有人想坚持下去。
除非你对工艺非常热衷，否则不可能成为一个好程序员。在看到你的概念和发明方面，你必须非常愉快。
大多数人没有耐心。他们现在现在现在想要结果。代码需要耐心和激情。
学习&amp;hellip;&amp;hellip;
回答 2 我喜欢列出的许多答案。继承了我的2美分。
在一个非常抽象的水平，编码就像写作。至少对于这个简短的类比。
我们都可以写作。我们知道文字以及如何制作句子。但我们中有多少人作为小说家成功？
我认识一个非常熟练的程序员，曾经为新的现任者提供了关于如何渲染2D方形的测试，以便它可以平稳地旋转时钟或逆时针。
有数以千计的解决方案，也许数百万。当我问他在测试什么时，他&amp;hellip;&amp;hellip;
回答 3 每个人都可以免费学习编程。但每个人都可以作为程序员工作吗？
不要用硅谷薪水衡量我们所有人。
与此相比，大量的程序员使花生制作。
回答 4 在这方面有一些有趣的事情应该是显而易见的，但我想这不是&amp;hellip;&amp;hellip;
在生活中，有很多东西可以自由学习，并且很少得到报酬。与此同时，您可以免费学习许多事情并为此付出了很多报酬。
例如，任何人都可以自由学习吉他。如果你发挥得足够好或写一首名着名的歌曲，你可以赚很多钱。
事实上，大多数人击中歌曲涉及4个和弦，你可以在下午学习&amp;hellip;&amp;hellip;
回答 5 当我在学习工程时，每个人都希望在IT行业登陆工作。因此，他们中的每一个都是加入了Java，C，C ++，Oracle等的教练类，他们在4个月内完成了课程，他们自豪地说我知道Java。它不会停止在那里，他们参加另一个班级，他们现在说，我知道Java，Oracle。他们也不会那里停止。
在校园采访期间，他们在简历中指定了他们的技能，他们知道Java，Oracle，PHP，MySQL，C，C ++，HTML，CSS（是的，您几乎在所有简历中都会找到这样一个巨大的列表）。他们知道，他们什么都没有学到。他们甚至没有划伤表面。掌握单一语言需要几年时间，更不用说学习一切。但他们不知道。对于他们来说，一旦他们完成课程，他们就是那种语言的专家。
然后他们参加校园采访，并自豪地对面试官说，他们知道这一点。有趣的是他们找工作。他们知道这一点，他们没有因为他们的技能而得到的工作，而是因为工作并不涉及编程。 TCS，INFY，WIPRO等是基于支持的公司。他们的大部分工作都处理支持，而不是编写编程。只有小百分比的职位处理编程。但他们不知道，他们相信他们因为他们的技能而得到了工作。
现在，他们建议他们的小辈学习这个和那种编程语言来获得工作。这是&amp;hellip;&amp;hellip;
要回答您的问题，完成付费课程或在线教程不会让某人成为程序员。学习和申请需要数年年和多年。遗憾的是，90％的学习编程的人甚至无法开发基本应用。真正的程序员很少见，他们期待溢价。
回答 6 一个并行问题：
如果每个人都可以工作键盘并使用SpellCheck，为什么编剧员可以获得250,000美元的约25,000个字？
如果您可以回答该问题，您可以使用相同的逻辑回答程序员问题。
回答 7 如果您想到它，就可以自由地学习任何人类努力的领域。引用将狩猎（从好的将狩猎）：你在他妈的教育上放弃了一百五十次，你可以在公共图书馆的延迟收费中获得一美元。是的，这是虚构的，但它揭示了真正的真理。只是关于人类尝试的任何主题都是合理的记录，并且可以揭示主题的细节，非常小的货币成本&amp;hellip;&amp;hellip;
回答 8 诚实地因为对于大多数人来说，它需要接近1000个焦点时间，以便成为一个JR级开发人员。从那里到达更高的位置甚至更加困难。
我开始编码并让自己在16岁时得到一个编程工作。我在第一份工作就读了一个吨。去CE大学，在该计划期间学到了一个吨。在那里学到5年的MSFT工作。乘坐4年的初创公司，并学到了一堆其他事情。
所以在这里，我已经16年了，因为我成为专业，每年仍然学会很多。
所以基本上是一个巨大的问题空间，并且没有足够的人将时间放入其中。
回答 9 薪水不是您在学者/专业研究中支付的费用的赔偿。它相当付出了你的辛勤工作，时间和精力，以优越的节目。
感激
回答 10 你好jhon，
在我国（印度尼西亚）程序员薪水不高，一些程序员薪水很低。许多公司仍然混合编程器 - 设计开发商 - 营销 - 销售 - 所以我们不得不掌握编码水平，也是如何说服客户。薪水仍然很低，为什么？
因为大多数人不明白建立一个系统多么难以建立一个系统，其中一些人认为一个人能够像Amazon.com那样构建系统[http://amazon.com/]。
如果所有程序员薪水和Wi &amp;hellip;&amp;hellip;</description>
    </item>
    
    <item>
      <title>我22岁。我太老了学习编码吗？</title>
      <link>https://xiangqingw.github.io/posts/i-am-22-am-i-too-old-for-learning-coding/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:12 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/i-am-22-am-i-too-old-for-learning-coding/</guid>
      <description>我22岁。我太老了学习编码吗？ 回答 1 年龄无关紧要。去吧。
有一些属性需要成为可采用的专业软件开发人员，但你会看到这个年龄不在该列表中：肯格雷格斯回答为什么每个人都不是程序员？[https://www.quora.com/why-is-everyone-not-a-programmer/answer/ken-gregg]
回答 2 当然，今天，不像那么，有一个
我从21岁开始，我的第一份工作从大学里，除了电影和电视之外，从未见过一台电脑（主要是科幻小说，因为世界上只有几千台电脑，我将有望修复它们他们破产了，所以要了解他们的工作原理很重要。编程非常艰难 - 约20分钟。然后，事情刚刚开始点击。我现在是75岁，仍然学习新的语言和算法。引用着名的佛教徒作家和老师，从你所在的地方开始。在你选择的任何事情。
当然，今天，与那么不同，有一个良好的计算机科学课程，所以认为他们在生活中知道他们想要做什么开始学习18岁，所以你有一些追赶，但大概是你在过去三年中学到了一些其他技能，这将在将计算机规划应用于该领域时是有价值的。编程很简单，但制作一个有价值的程序需要一些深入了解该计划的最有用的事情，以及需要做些什么功能。
回答 3 你在任何年龄都开始的方式。年龄与您学习的内容或如何结束的年龄无关。
当我开始学习计划时，我恰好在1979年回来了。我在这个主题上阅读了许多书籍，实验时间，并建立了我的能力，达到更大且更大的问题。我的第一个完成的薪酬计划是在TRS-80型号上，拥有四个软盘驱动器，它确保了维护一支卡车的票据和费用跟踪。它在该部门的过程和执行中迅速揭示和记录了问题，并节省了许多倍的发展成本。我被迷上了，其余的是历史。其他早期项目包括远程键入的代码生成器，以及各种会计系统 - 所有这些都没有任何正式培训。
也许这个问题被问到已经完成的人，这些人已经完成了一个不相关的本科学位，他们试图找到他们能负担得起的正规教育方案，并且在这种情况下，真正的问题更加了解最大化价值的具体问题正式的学习课程。在我的案件中，我完全是纯粹的，这就是我所需要的，才能赢得良好的生活和良好的声誉。虽然在20世纪70年代后期和20世纪80年代未来的容易地面机会，但在20世纪80年代不再存在，您仍然可以通过免费在线Moocs和个人实验和实践来学习您在实践中所需的大部分所需的内容。事实上，大多数本科CS度都是如此沉重的理论，如此轻松的实践，在我的经历中，许多人在CS中的BS可以几乎无法从纸袋里划分出路，除非他们做了很多侧面学习或者也许实习在学位计划之上。所以记住这一点;这不仅仅是获得羊皮的问题，这也是一个学习至少一个问题领域的问题，有人愿意为你解决问题的人来解决问题。您必须学习如何应对技术问题，如何帮助雇主/客户弄清楚他们的实际，而不是感知需求 - 这样的事情。
回答 4 我可以从经验中回答。
我在高中收到了2.0英寸，并于2009年招募了一所初级学院，以在2011年辍学之前学习行动。我在19岁时，我体重大约350磅，有可怕的社交技巧，生活中没有真正的选择。
我做了什么？只是任何其他孩子在这种情况下会做些什么。
我独自搭便车，沿着沿途探讨了令人惊叹的地方。
这让我有信心减肥
然后我决定抓住背包，并购买葡萄牙的单程票以旅行。我通过留在预算约45天的16个国家最终结束了
我可以从经验中回答。
我在高中收到了2.0英寸，并于2009年招募了一所初级学院，以在2011年辍学之前学习行动。我在19岁时，我体重大约350磅，有可怕的社交技巧，生活中没有真正的选择。
我做了什么？只是任何其他孩子在这种情况下会做些什么。
我独自搭便车，沿着沿途探讨了令人惊叹的地方。
这让我有信心减肥
然后我决定抓住背包，并购买葡萄牙的单程票以旅行。我在大约45天内在16个国家以预算在宿舍和吃街头食品中最终结束。
然后，我做了几个部署作为海军陆战队的步兵
并嫁给了我的灵魂伴侣。
我将海军陆战队26岁留在了一所伟大的学校，我学习计算机科学，并拥有3.7个GPA，超过80％的课程与词干相关。对前任代理专业和大学辍学不差。 （我也有几只狗在某些时候！）
现在我27岁，并将在核心操作系统组中成为微软的软件工程实习生。回顾我的生活在短短8年里，我很有趣。
简而言之：不，现在还为时不晚。没有太晚学习如何编程。改变你的生活还不算太晚。
编辑4/22/19：我的心脏可以看到有多少人与我的故事有关。祝你生命冒险一切顺利！
回答 5 是的。
100％，你注定要失败。
你太老了，无法学习新事物:(
这个问题被问到了很多次在Quora上，它变老了。
你显然已经完成了零搜索。
总结我以前的一些答案对此确切的问题：不，你不是太老了。
回答 6 除非我太老了，否则无法学习代码！我刚刚完成了HTML5和CSS课程，作为我的2年数字开发计划的一部分。我即将开始学习javascript这个学期，从大约8天开始。我是51 :)
回答 7 “当德古拉追求新鲜血液时，他412岁。当索伦塑造了一个戒指时，他在人民心中灌输了54,000年的疯狂，Cthulhu已经目睹了星系激发了生命并消失在脾气/黑暗中
所以，追求你的野心永远不会太晚：p
希望这可以帮助 ：）
回答 8 有时当我看到这样的问题时，我很想说你在开玩笑吧？22？和二和两个一样？请开始学习。
下面是一个非常短的悲伤故事
照片信用：Freepik [1]
[1] 我是180多，我想学习弹钢琴。我的一部分觉得我太老了，无法开始学习，因为我知道我当时已经玩过的一些同龄人。我没有继续学习。
那是11年前。
想象一下，如果我试图学习。现在，我会有11年的钢琴演奏体验。</description>
    </item>
    
    <item>
      <title>程序员，您听过的最有趣的外人观点是什么？</title>
      <link>https://xiangqingw.github.io/posts/programmers-whats-the-funniest-outsiders-view-of-your-job-youve-ever-heard-1/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:12 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/programmers-whats-the-funniest-outsiders-view-of-your-job-youve-ever-heard-1/</guid>
      <description>程序员，您听过的最有趣的外人观点是什么？ 回答 1 我的妻子 - 嘿，看，我找到了研究职位的工作机会：编译器研究科学家。这听起来很棒，你应该申请！我 - 嗯，我相信这真的很有趣的工作，但我真的不太了解编译。妻子 - 你在说什么？我 - 嗯？好吧，这是真的。我的意思是，当我朝着我的学士学位时，我确实拿了一个课程，但是当我走向我的学士学位时，但这只是一个班级的妻子 - 但你总是在我旁边工作，不断地告诉我你是唱！
我发现可爱的。
回答 2 许多卫星前，我的前妻在房间里，我正在努力制定C ++申请的一些新能力。
我有许多浏览器Windows，并显示各种网站显示示例代码，文档，其他人的方法等。
她喘着粗气，说，丹，你在做什么？
我很困惑，并告诉她我正在研究一些新的功能。
但你不是在作弊吗？她问，睁大眼睛。
呃？是我更加混乱的回应。
你在看那些网站，你不应该自己弄明白吗？
我的下巴下降了。
我的意思是你从哪里开始？她是一个聪明的女人，但在那个poin
许多卫星前，我的前妻在房间里，我正在努力制定C ++申请的一些新能力。
我有许多浏览器Windows，并显示各种网站显示示例代码，文档，其他人的方法等。
她喘着粗气，说，丹，你在做什么？
我很困惑，并告诉她我正在研究一些新的功能。
但你不是在作弊吗？她问，睁大眼睛。
呃？是我更加混乱的回应。
你在看那些网站，你不应该自己弄明白吗？
我的下巴下降了。
我的意思是你从哪里开始？她是一个聪明的女人，但在她的生活中，在这种情况下，以这种方式利用别人的工作的想法是外国的。
好吧，它的文件，有些人已经完成了某种方式，很多人都分享那些方向，这样每个人都在某种程度上赢得&amp;hellip;&amp;hellip;就像它只是这样的方式。
hmmmhmmm &amp;hellip;&amp;hellip;欺骗她说。
回答 3 时代前，当我在大学时，有一段时间你不能从家里的电话叫远。你不得不去街上到一个std摊位来制作长途电话。笑声.. 。他们曾被称为STD展位。的摄影证据
曾经，我不得不和我的朋友谈论在不同的区号，所以我走了街上。曼宁的家伙过度地谈论我的谈话，并问我
你在大学里学习了什么？编程是什么编程？我们了解如何让计算机做我们希望它们所做的事情，你输入了计算机吗？是。我们键入计算机数据条目的程序！否，不是数据条目。这是一个不同的你输入了电脑，意味着它是数据条目。我就像，&amp;lsquo;忘记它，我做数据条目。我每天要学习3个小时，学习如何做数据输入..很好！&amp;rsquo;
现在，削减到学院的去年。我正在寻找要富有成效的事情。是一个叫做NIIT的学院，提供了大学后提供技术培训。你必须参加入学考试。我拿到了入口考试，并钉在一起。然而，我没有加入NIIT，因为我拒绝了他们的费用。我听说有一家名为DataAmatics的公司，正在招募新生，他们开放了招聘日。我是第一个这些开放的招聘日子.Datamatics通过让它们给予入口测试来筛选候选人。我想避免采取测试，所以我去了审查员并向他展示了我的尼特分数，问他是否可以离开考试和谈到某人，然后告诉我，我不必参加考试。我可以直接去下一阶段，这是一个口头采访。我就像woohoo &amp;hellip;&amp;hellip;短暂的切割！面试官问道我一些问题，并问我什么时候可以开始。我告诉她我可以在我的前任后加入ams.so，她告诉我在考试后的第一个星期一开始。她给了我一个录音信，我跳过了一封录音，我跳过了家，开心我在经过考试之前拿着一份工作.FEW几个月后，我给了我的考试。我在考试后的星期一，我在Datamatics出现了。他们问我谁是谁？我是一个新的雇用。我被告知开始今天的新生事物开始后开始他们的考试结果。这是从现在的3个月的3个月？但我留下了另一份工作来加入你。那个报价。所以，他们看着要约的信，它确实说我应该在那天加入他们。然后回来了告诉我，有一种误解，我是唯一雇用那一天的人（因为我拿到了使用我的NIIT成绩跳过考试的优秀生活，我被赋予了不正确的报价日期。我恳求我是一个穷人，我真的无法坐在家里3个月。所以，他们告诉我不担心并等待一段时间。15-20分钟后，一个团队领先来了通过并询问我一些基本的C ++问题来评估我的技术技能。他说我今天可以开始工作，但由于误解，我的电脑没有设置。所以，我将不得不在临时的位置工作。向我解释。向我解释他想让我工作的是什么。他告诉我他们雇用了很多数据输入运算符，他们希望实现一个键盘记录器，可以以他们可以将其存储在数据库中的方式捕获操作员所做的工作.I猜猜他们可能想做一些分析，或者捕获误操作。我们介绍了我要去的东西的细节。所以他把我带到了一个装满行和行的房间。他告诉我坐下来在其中一个计算机上并开始工作。他给了我所有的CD来安装IDE和一切。他告诉我不用担心房间里的其他人会做什么。我不需要遵循他们给出的订单，我可以做我想做的事。我上班了.15-20分钟后，家伙进入并填满了房间.T嘿开始键入真的很快。我喜欢wtf是这个吗？数据输入运营商!!!我在一个充满数据条目运算符的房间里。我正在写的相同的数据输入运算符，我正在写入.so，这些家伙正在打字在Breakneck速度..而且我正在打字像大多数程序员一样..在Bursts.这些家伙被Word.so得到了报酬，他们附近的一些人看起来像我担心我无法工作。事实上，我起床休息休息，其中一个人开始签署我坐下。我就像为什么？什么？
回答 4 有一天，我收到了另一份工作的报价，我把它带到了我工作的公司总统只是为了让他有机会抵消它。我并没有想到他要谈判提议，事实上我已经决定接受该报价，但与我的雇主交谈似乎是正确的事情。
公司总统，我的雇主，雇用了我的人，一直向我创造和更新公司的主要产品一年半，说他甚至不知道我所做的事。您只需帮助我们使用电子表格或绘图程序，对吧？嗯，是的，除了我的主要工作外，我已经成为与桌面电脑有关的任何事情的技术支持。
我的雇主甚至告诉我他不需要两周的通知。我可以立即离开新工作。他说他们真的不需要一个计算机的家伙。
这就是我为200美元/小时的顾问被聘用的方式。
回答 5 妈妈：你在工作中做了什么？
我：写软件妈妈，如节目。
妈妈：不是关于电力的东西吗？
我：不，不，这就像写下计算机的说明，使其做事。
妈妈：像如何使用程序的手册？
我：不，这就像告诉电脑应该做什么。
&amp;mdash; o &amp;mdash;
我：妈妈，我在上班做什么？
妈妈：撰写说明手册，教授计算机如何做事：&amp;gt;
我：Yepp，究竟。
回答 6 当我被安置在亚马逊作为软件开发人员时，我父亲告诉了他的一个朋友。</description>
    </item>
    
    <item>
      <title>练习解决技巧的最佳方式是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-is-the-best-way-to-practice-problem-solving-skills/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:12 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-the-best-way-to-practice-problem-solving-skills/</guid>
      <description>练习解决技巧的最佳方式是什么？ 回答 1 问题解决是高需求的技能之一。许多雇主将其评为他们在潜在员工中寻找的最重要的特质之一。它通常在大学中的许多课程中被列为一个重要的学习结果，包括数学课程，心理学课程，甚至这个课程！但是，它往往没有教学或者很好。
为什么这是一个原因是因为与正在解决的问题有关的混乱。它是 &amp;hellip;
回答 2 通过关注和你是如何解决过去的问题学习。你注意到什么工作好，这是为什么。您还回顾一下失败，你可能已经改变。
例如：假设在邮局的线长。你觉得不安。你等着，开始生气。你看检查时间的人在你前面。嗯，你的不满是共享的。这令人欣慰。然后你看到店员是新的，速度很慢。你决定这是不值得期待的，和你离开了，失望，但不是疯了。
哪些部分去吗？你是如何“帮助”你自己来决定？是什么奖励？ （ 不生气）！你的战略是一个门将。建立，当你已经做得很好的心理目录。这是你的发展发生了！
回答 3 你看到这个人？他的名字是阿基米德。
有一天，阿基米德实现了一些东西。作为希腊的居民在200多岁的公元前，人们没有办法将水从该国的丘陵地区移动。
这意味着日常任务，如从矿山或灌溉农作物中除去水的不确定更困难。你可以在山底到山顶的桶后携带数百名工人携带桶吗？
效率低下。但是有什么&amp;hellip;&amp;hellip;
回答 4 采取模块化方法。打破问题成独立的问题的列表，这将导致
我坚信思想的力量。因此，解决问题的技能的真正威力取决于你的心理和情绪状态。
因此，在问题面前，任务＃1是感情上的问题，脱离自己，打开右脑控制的逻辑功能。
锻炼耐心，当你面对一个块不明白不安。相反，请问你有什么需要解锁。如果你已经成功地从问题分离自己，那么练的耐心是很容易的。
采取模块化方法。打破问题成独立的问题，这将产生一个子问题的列表。直到每个最终模块是你的能力范围内可以解决的进一步细分子问题。
是创意的。现在，这是什么陈词滥调实际上意味着什么呢？这意味着去想想从不同的角度有问题。从头开始，并采取不同的每个时间接近。例如，您可以通过它伸出一条腿在一些硬纸板，或旋转台围绕其中心，直到它停止晃动修正摇晃的桌面！有关数字和东西影片。这种思维第二种方式是，你需要开发什么。
不要判断由它有多长，它是如何丑陋的外观，它是如何不切实际成为一个问题。此外，不要被关心你解决它多么接近。这只会让你不耐烦。总之，不要法官的问题或妄下结论。
快递问题/子问题简单，你可以。这是复杂问题的关键。必须始终有一个更简单的表达的问题。在自然界中任何事物都有一个基本的简单的图案。
最后，获得足够的知识在手解决问题。但大多数时候，我们不知道该知道的。因此，搜索所有你认为是与问题有关的主题。例如，如果一个问题是关于二项式定理然后搜索有关的排列组合，代数，多项式等
我相信，因为他们瞄准的情绪和精神状态，而不是problem.Thanks的逻辑上述所有指针可以适用于任何问题。
回答 5 有人用近乎天才解决问题的能力表示，研究自然规律和自然看到工作如何给她见解解决任何问题。
此外，实践帮助，如玩光度脑游戏显示了一些随时间增加。
但最重要的是，任何从限制解放了思想和创造力苏醒，如先验调解程序，提高解决问题的能力。在K-12教育计划，使自1994年以来大家的做法TM已经获奖的目标，因为想象TM提高解决问题的能力。
创造性地解决问题
在GQ
有人用近乎天才解决问题的能力表示，研究自然规律和自然看到工作如何给她见解解决任何问题。
此外，实践帮助，如玩光度脑游戏显示了一些随时间增加。
但最重要的是，任何从限制解放了思想和创造力苏醒，如先验调解程序，提高解决问题的能力。在K-12教育计划，使自1994年以来大家的做法TM已经获奖的目标，因为想象TM提高解决问题的能力。
创造性地解决问题
在GQ指南超越冥想
回答 6 大多数问题可以通过图解情况来分析 - 寻找所需的资源，生产的产品，人，最佳实践的例子。所有问题都可以由逻辑语句表示，甚至可以作为集合表示。
然后寻找什么是不合逻辑，无效，过时，重复，低效，静态或延迟，缺失等。
突出显示图中的这些区域，然后重绘图表，以便按照您更喜欢它的方式。这是最小的解决方案集。
业务分析方法&amp;hellip;&amp;hellip;
回答 7 问题金额的挑战，并与C广阔的百分比
问得好亚洲时报Siddharth，感谢您的要求。
除了分析和诚实的评价不是真的。我不使用任何特殊的工具，除了与收集相关数据显示，刚刚好老式的像批判性思维，笔和纸张有关的那些。
就像失败，我用这个词的挫折取代，我把问题变成挑战，这可以帮助我在正确的角度来看待他们，并保持两者乐观，当谈到寻找解决方案以及学习的过程中新的东西，并继续成长为一个个体。
问题金额的挑战，而这些挑战一个巨大的百分比附加有可行的解决方案，你只需要找到他们多数民众赞成。
我看所有的部件，并问自己，如果这个问题的部分进出口开始？我想先解决我自己的责任，如果我有好歹促成了问题，那么好处是我可以解决这一问题，并以不同的方式做出贡献。
因为它们发生目录挑战，沿着已被证明的工作在过去的解决方案。你会惊奇地发现，很多人没有做到这一点，然后发现自己在压力下时，同样的问题在以后的日子在他们的雷达弹出。
请记住，其他人在你面前了。为什么要重新创建苹果时，别人已经花费的时间这样做。
有时候仔细分析指向一个区域内的问题在于那完全超出了我们的控制的事实。
我关心我什么我能控制和影响力，不是我不能。
评估零件和解构，如果问题仍未幻影然后在另一个元素带来如眼睛和值得信赖的同事谁很可能提供另一个有用的视角耳朵。
请记住，生活的全部，伴随着增长的舒展。更大的挑战，在它的更内在的潜力，我们都经历了那舒展，以及来自它的生长。
祝你好运！
回答 8 创建一个问题然后解决它。
我将使用计算器程序向您展示快速进展，以向您展示您可以复杂的复杂程度。</description>
    </item>
    
    <item>
      <title>计算机程序员/软件开发人员应该是什么，从不对他们的团队领导？</title>
      <link>https://xiangqingw.github.io/posts/what-should-a-computer-programmer-software-developer-never-say-to-their-team-lead/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:12 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-should-a-computer-programmer-software-developer-never-say-to-their-team-lead/</guid>
      <description>计算机程序员/软件开发人员应该是什么，从不对他们的团队领导？ 回答 1 当我试图解释一下失踪的东西时，另一位也刚刚开始学习该框架的大学毕业伙伴在某种程度上讲述了这个代码，他们认为我有零想法它正在做什么，没有经验
这很难回答。我知道你正在寻找不包括人力资源违规和公然不尊重的无污染的答案。我现在只能想到一个：
我在IDE中帮助了一个大学毕业课程。他们没有明白语法突出显示看似不合逻辑的差异。这是他们开始学习的框架。
正如我试图解释缺少的东西，另一个大学毕业伙伴也刚刚开始学习该框架，以某种方式告诉我，他们认为我有ZERE的想法是什么，没有经验，没有编程语言，基本上没有经验阻止我帮助，因为他们认为IDE问题不是一个问题来自CodeBase。然而，它是，我确切地了解了什么问题。
然而，他们在这里告诉我，但两次我没有注意他们的初步警告，我试图做任何事情都是徒劳的。
我冒犯了。我没有说什么。我完全让它走了。我很久以前意识到了我看起来年轻，或者看起来很明显，因为某种原因（在人们实际上与我工作之前），我会被视为我对软件工程一无所知。也许它是因为我不去告诉人们我有多聪明。
我经常玩Coy，只透露我在被问及或需要说/问什么时候所知道的。最终需要注意的人会把它称为。它让我知道需要多长时间，所以正在分析的程度。如果有人称我我的第一天聪明，我被专心地看着。如果有人在几个月后叫我聪明，他们真的很难关注我的存在。但我骨折。
我会说强烈的是，肯定地质疑我作为领先的原因，因为我可能是错的，如果你知道我错了或者不明白为什么我给出答案，那么否则就会被纠正或帮助，但不要向我解释这种情况如果你最了解超过我的人。它令人尴尬地告诉任何人他们无法修复某些东西，然后观看他们修复它，我会尽力避免最多的这些情况。我甚至不对我的人这样做。在向他们解释的东西之前，我会问某人他们实际想知道的内容。我试图尊重，但我会建设性地挑战想法。我认为这是关键。
现在，当你与一个虚张声势的人打交道时，他们不喜欢受到挑战（显然），但后来你知道他们之后没有虚张声势（或者有时他们只是不喜欢你）。有时人们可以让你感觉让你在某种程度上尊重他们，但真的没有。
请记住，这一切都要确保事情已经正确完成，每个人都有自己的定义，这意味着我们互相质疑的原因。如果您觉得有人可能会冒犯，最好直接向后道歉并继续前进。我人们相同的尊重我想要表现出来。
事实问题，你可以阅读的书，称为48个权力法律。它解释了处理优越的微妙之处。我打破了一些，但我充分了解我正在做什么以及它得到的反应。
回答 2 很难想到任何通过社会规范所知的明显事物的任何不合适的东西。
但是，对于我个人而言，存在累积效应，这是否则否则的否则响应，或者我们无法做到这一点或者对请求具有的合法性的一般性判断，这是非常令人沮丧和有问题的合法性。为了解决它，我从关于灵活性的对话开始作为一种力量，并举出人们获得合作拒绝的方式，而不是从去的情况下关闭。尽管坚定但是温柔的辅导，但是这个人仍然是无法的，他们并没有留在我的团队中要长得多。最终，他们对健康，蓬勃发展的团队文化毒性，并通过忽视它是故意破坏的那种行为。
回答 3 我曾经在项目中作为顾问工作，是高级软件开发人员。有一只年轻人（可能是18岁，溜冰板家伙在他的下巴上有小馅毛，等等），我被告知，一个程序员。让我们称他为生命。
在公司所有者参加的一个设计会议上，我们讨论了需要解决的特定数据问题。生命认为问题无法解决。我向他解释了如何在具有关系表，索引，存储过程等的SQL Server数据库中进行。
当我完成后，公司老板问道，嗯，生命，你对迈克说的是什么？
生命思考一下然后说，好吧，我通常不喜欢倾听别人的想法，因为我只是感到困惑，然后我最终尽我所能。
我没有孩子。他说过。响亮地。到公司的主人。我不知道他是如何首先被雇用的，但他没有那里的工作更长时间。
回答 4 vp br.
问：软件开发人员应该从不对他们的团队领导说什么？答：这项任务无法完成调度约束。
（我之前写过这个，但对于那些没有听到的人&amp;hellip;&amp;hellip;）
我们的团队在项目迟到了。我们估计了使用良好技术的项目的计划，但管理层不希望该项目需要那么长时间，因此他们使我们取出所有迭代，所有集成测试，并接受不合理的乐观日程估计。我们去了这个项目，而不是令人惊讶的是，一两年后，我们落后了。
VP将整个团队带到了他的办公室，用他的稳定凝视来解决了我们，并对第一工程师说，你绝对会做出准时完成的项目吗？这不仅意味着没有更多的延误，而是为了弥补已经失去的时间。
什么可能对vp的强烈凝视进行低调。空中有明显的威胁。一个接一个，我们都说，是的，我会这样做。
我是团队领先。由于随机的机会，我被问到了最后。无论在时间表上完成什么，你会做什么？问VP。我说，我不能保证在当前的时间表上完成，因为我认为现在的时间表是不可能的。我们使用我们的最佳估计技术来规定时间表，但有人让我们取出所有的松弛。在该项目的这一点上很明显，计划无法实现。我保证每天都准备好做到最好的工作，但这就是我能保证的所有，因为我相信时间表是不可能的。
我在大约一周后被删除，因为我们需要我们的高级人员专注于写作代码。
该项目拖延了另一年或18个月。当我们开始运输时，它并不完整，并且没有满足其用户，主要是在价格方面。我们唯一的安慰作为软件开发人员是硬件团队在他们的调度方面更加乐观，因此代码是在硬件之前完成的。
在狗屎真正击中粉丝之前，稳定的VP明智地离开了公司。
回答 5 （我不是databa
一个真正震惊的人是一个由女性团队要求的程序员引导你为什么这样做？
他的答案：亲爱的，别担心你的漂亮小。
她又回到了自己。她是一个非常经验丰富的程序员，专家级数据库优化。她在会议上发表了演讲，她用他的代码作为如何行动的例子。当她完成了解释她不小心滚动到文件标题时，将他的名字作为作者在全景中留下，因为她继续谈论一个天真程序员落入的三个陷阱。
（我不是数据库专家，但她解释了他的程序所选择的巨大数据集，然后用删除大多数项目的查询过滤它，但重新排列它将选择一个小型数据集，然后略微过滤一个小型数据集或略微过滤不同之处将允许优化器重新排列）。
回答 6 当我审查了这个程序员最近的提交时，一个看他的代码，我立即注意到内存泄漏，效率低下代码，未使用的Variab
很多年前，我曾被一家公司聘用，该公司使用了Delphi（编程语言）作为其主要编程语言，并成为技术领先者。其中一个开发人员（公司已经超过2年）不断错过他的截止日期并转向QA将拒绝的错误代码。这是在他们有任何形式的代码审查或指导过程之前。他们在那时也没有任何静态分析或自动构建。
当我审查了这个程序员最近的提交人看待他的代码，我立即注意到内存泄漏，效率低下，未使用的变量等。这可能有最多的WTFS /分钟我所看到的真实商业代码。
当我与程序员谈话时，我开始向他解释他的代码有什么问题以及如何更好地写入。在我向他解释的事情之后，我问他是否了解我所说的话，如果他可以解决他的其余代码，如果他可以将这些原则应用于前进的话，他说是的。
经过几天后，他仍在检查可怕的代码，所以我必须再次与他交谈。当我问为什么仍然继续编写不遵循我展示他的代码，他说他实际上不知道Delphi，只有一个可视基本（编程语言）背景。
长话短说，他不再在公司之后不再在公司工作。
回答 7 过于乐观的时间表或特征承诺。
这只是乞讨问题。你承诺的保证越少。你解释的速度越快，带领球队领先，更好。
回答 8 为什么我们不使用XYZ技术？！
我多次听到这一点。它脱离了非常自鸣得意和不成熟。它基本上意味着你为什么如此愚蠢，你没有意识到这项新技术显然是最好的方式。
如果您想说服您的导致使用不同的工具，平台，语言，模式等，您应该以不让您的导致防御性的方式提及这个想法。您的案例轻轻地展示，我希望使用我认为可以帮助我们更快/更有效地帮助我们工作。我没有遇到一个不会听到你的领导者。它不保证工作，但它应该为您提供最佳机会，让您的提案得到接受。
回答 9 我个人拥有的最糟糕的经历只是：* Eyiteroll *
这是我来自我的前网开发雇用的最不喜欢的记忆。没有言语，只要眼花卷，当我给了他客户的反馈并试图为他分配工作订单改变。它伴随着我剩下的剩余群体的大叹息和明显的不尊重。</description>
    </item>
    
    <item>
      <title>Zeros等代码如何与处理器内的可变脉冲进行物理创建？</title>
      <link>https://xiangqingw.github.io/posts/how-does-a-code-like-zeros-and-ones-physically-create-variable-pulses-within-a-processor/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:11 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-does-a-code-like-zeros-and-ones-physically-create-variable-pulses-within-a-processor/</guid>
      <description>Zeros等代码如何与处理器内的可变脉冲进行物理创建？ 回答 1 我会让你在一个秘密的秘密，即硬件设计师永远不会说明。
处理器中没有零和那些。零和那些是抽象的逻辑想法，而不是硬件的东西。
相反，设计人员创建了代表那些零的物理物质。例如，存储在它的电容器上的电容器在DRAM单元中的一部分电容器可以置于一个1中的1个，而没有电荷的电容器在没有电荷的情况下为0.在官方规则本的DRAM中的某处，它会说a超过50毫不辅酶组或任何要解释为1的费用，而少于该金额将被解释为0。
在一些导线上，将大于0.4伏的电压的存在被解释为1，而小于0.4伏的电压将被解释为0。
所以现在我们在电子的领域！接下来，您可以设计一种电路，使得两个输入的电压大于0.4 V，则输出将为0.8伏，如果输入小于0.4V，则输出将为0.1伏。这真的是什么和盖茨就是这样的。
接下来，出于几种基本类型的电路，逆变器，或者，或者，或者，我们可以构建像加法器，乘数等等的逻辑电路，并建立每次记住其输入的电路（寄存器）时钟切换从低电平到高。与这些东西一起，我们可以建立整台电脑。
它是一堆抽象可能高10或12层高，但如果您获得基本电路，最终结果将快速可靠。
回答 2 没有人，没有零，这就是这里的重点。没有任何。它们不存在电脑的任何地方。
所以没有什么可以翻译它们。
它们只存在于我们的思想中，作为代表电子电路正在做的事情的数学方式。
所有源代码都将存储器设备作为一系列电压电平进行。它存在为电压电平。
当程序员在键盘上按下键时，一组电压电平从键盘移动到一个称为数据总线的一根导线到微处理器的引脚中，将它们发送到MOSFET晶体管上，其中电容很少有电压电压。
ther
没有人，没有零，这就是这里的重点。没有任何。它们不存在电脑的任何地方。
所以没有什么可以翻译它们。
它们只存在于我们的思想中，作为代表电子电路正在做的事情的数学方式。
所有源代码都将存储器设备作为一系列电压电平进行。它存在为电压电平。
当程序员在键盘上按下键时，一组电压电平从键盘移动到一个称为数据总线的一根导线到微处理器的引脚中，将它们发送到MOSFET晶体管上，其中电容很少有电压电压。
永远没有一个或零。
回答 3 每个人都回答了零是否实际使用的低级方面&amp;hellip;&amp;hellip;
没有人回答了我认为你可能一直试图问的元问题：
二进制值如何在一个状态下只能在一个州或另一个状态下导致屏幕上平滑的颜色渐变等的东西？不应该像素是打开还是关闭？
答案是组合。
如果您在抽象中只有一个二进制数字（或&amp;rsquo;位&#39;），则是，your和关闭是您唯一的选择。但是，如果组合多个位，则该组合可以具有多个状态。有两位，你可以
每个人都回答了零是否实际使用的低级方面&amp;hellip;&amp;hellip;
没有人回答了我认为你可能一直试图问的元问题：
二进制值如何在一个状态下只能在一个州或另一个状态下导致屏幕上平滑的颜色渐变等的东西？不应该像素是打开还是关闭？
答案是组合。
如果您在抽象中只有一个二进制数字（或&amp;rsquo;位&#39;），则是，your和关闭是您唯一的选择。但是，如果组合多个位，则该组合可以具有多个状态。有两位，您可以有四个态度：00，01,10和11.对于您添加的每一个额外位，您可以增加可能的状态的数量。因此，只有16位，您已经有65,536个可能的组合。有24位，这个数字达到16,777,216。
如果您通过不同值的电阻器运行每个单独的比特，然后组合结果，则可以获得一组多个不同的电压。通过打开或关闭各种比特，更改输出电压 - 您可以改变它，创建变量脉冲。
回答 4 当您编写和编译代码时，它被存储为机器指令，恰好是0s和1s的长链（如计算机逻辑所示）。但这只是一个代表性。物理上，它以许多方式存储在物理媒体中，以存储信息两个状态（这就是为什么是双人的） - 在紧凑的磁盘中存在或不存在凹口，在a上的指定电荷的情况下电容器等
执行代码时，计算机必须运行（当然）。计算机上电并运行时会发生什么？输入，存储和输出设备全部通电。现在这些设备能够“读取”和“写入”数据。
当要执行代码时，将获取其上写入的设备获取从给定位置读取该编译代码的指令。由于它被激励（即连接说+ 5V和0V或接地），因此能够通过数据线重定向一些电压到处理器。它可能被编程为每次遇到凹口，否则0V时发送0.9V信号。在这里，信号必须是电子产品（虽然研究正在进行它来使其光子彻底照片）。
通过各种机电组件轻松完成重定向部件。非常像一个小号手按下按钮，从一张音乐中读取不同的笔记。他也可以在不吹（电力）的情况下按下按钮（代码），并且您不会得到任何音乐声音（代码的物理输出）。
因此，您的代码像零和那些在处理器内创建物理（具体地，电子）脉冲。
我以非常简化的方式写这一点，所以如果某些东西是不正确或过时的事情，该领域的任何专家都可以随意发表评论。
回答 5 处理器看到没有人或零，只是存在（1）或电力的缺失（0）。一堆创建代码序列，导致处理器做某事。
例子
如果它得到了
在（31 offs）上关闭关闭
它将代码发送到监视器以打印字母a
回答 6 现在让我们屏蔽我们在一个白色和黑色的监视器中，并且在p中有这一点
因为在处理器上没有零和那些，所以ProCesor只有在正面电荷和负电荷内，电流的流量单向或其他和不同电压。
后来被翻译成别的东西，我们作为一种抽象方法，将此转换为0和1来思考，但这绝不在处理器内部
内部您只需将某种晶体管连接到正导通，（另一个OFF）和其他类型的晶体管到负（大多数次接地）接通而另一个晶体管。
现在让我们屏蔽我们在白色和黑色监视器中，特别是这一点是（因为我们将内存设置为）屏幕上左上角的颜色，其设置为其上它显示白色和关闭显示什么都没有（正常监视器是黑色的）。看？该位何时变成0或1，无处。
有时那个位是另一个位的一部分，它是你的屏幕应该向上移动或者是多少？不，但可以充当一个，即使是这样也不是0或者1也不是任何其他数字。
只是一个信号（因为它们不是不必要的脉冲），它与其他信号一起组成，并且全部形成字节或更大的块，特别是一个组用于屏幕的每个像素，其他组用于管理硬盘驱动器，其他人被分组以获取键盘的输入。等等等等。但是这里太难了，无法解释在这里。您需要开始查看晶体管和在该逻辑门之后以及看到您将足以启动UndeDand
现在，基本栅极形成有至少2个晶体管，但是真实（商业）门具有更多。因为第一个是理论的，所以它不如我所说的那么简单。
回答 7 我已经向劳伦茨添加了很棒的帖子。</description>
    </item>
    
    <item>
      <title>一个技术面试官曾经让我陷入困境：因此，开放式原则状态您不应修改现有行为。如果它有什么虫子，怎么了？你不修复它？我该怎么回答这个？</title>
      <link>https://xiangqingw.github.io/posts/a-tech-interviewer-once-got-me-stuck-with-a-question-so-the-open-closed-principle-states-you-should-not-modify-existing-behavior-and-what-if-theres-a-bug-in-it-you-dont-fix-it-how-was-i-supposed-to-answer-this/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:11 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/a-tech-interviewer-once-got-me-stuck-with-a-question-so-the-open-closed-principle-states-you-should-not-modify-existing-behavior-and-what-if-theres-a-bug-in-it-you-dont-fix-it-how-was-i-supposed-to-answer-this/</guid>
      <description>一个技术面试官曾经让我陷入困境：因此，开放式原则状态您不应修改现有行为。如果它有什么虫子，怎么了？你不修复它？我该怎么回答这个？ 回答 1 我不喜欢这个想法，除非物体中的一切都是公开的，或者仅受保护，而不是私人。
如果是的话，因此您可以使用扩展来修复错误。当然，这具有利用相同对象的人的副作用，必须继续与错误一起生活。
这意味着在实践中的原理意味着拧紧其他人，只要它适合我。
否则，如果有真正的私有部分，原则要求您与错误一起生活。这是无法接受的。
回答 2 这一原则是为了确保在其行为中可预测的共同特征，并且不会因个人要求而被操纵
是的，这是一个伎俩问题。面试官可能正在检查您在坚实的“开放式”原则上的理解程度。
“开放式”原则表示，实体应该开放到扩展，但关闭到修改。这意味着您可以使用代码中的功能/库方法，以扩展该功能已在做的内容。但您应该避免将/添加代码更改为共享库方法本身，以满足您的特定要求。
这一原则是确保在其行为中可预测的共同特征，并且不会因其消费者的个人要求而被操纵。它有助于减少添加到共享方法的错误变化的广泛副作用。
如果在常用函数中存在缺陷影响其消费者，则可以更改常见实体以解决问题。 “关闭”部分原则不是在行为不端时未修复功能本身。但是，在修改代码以解决问题之前，开发人员需要确保它实际上是常见功能的问题，而不仅仅是在特定扩展中使用它的错误使用。
回答 3 不，这是荒谬的。
为了执行有效的面向对象的模块化设计，固体原则是您遵循的原则。
当您设计要消耗的界面时，您正在尝试设计一些将简单且容易在其代码库中实现的东西。
对于一个非常基本的例子，请考虑一下灯开关。光开关的用户不需要了解电气工程或物理以便操作它。他们应该能够在或关闭它，光应该工作。
这是否意味着，如果接线出现问题，那就是错误的
不，这是荒谬的。
为了执行有效的面向对象的模块化设计，固体原则是您遵循的原则。
当您设计要消耗的界面时，您正在尝试设计一些将简单且容易在其代码库中实现的东西。
对于一个非常基本的例子，请考虑一下灯开关。光开关的用户不需要了解电气工程或物理以便操作它。他们应该能够在或关闭它，光应该工作。
这是否意味着，如果电机可以解决问题会出现问题，这将是错误的修复它？当然不是。这些是两个单独的问题 - 一个关于系统的适当设计理念，另一个关于有价值的特征的实际交付。
所以它与所有的固体原则有关。您通常应该避免用许多职责写作方法。给定类的目的应该是连贯的，具体的尽可能具体。您的所有子类通常都应该替代他们的父类。等等。
所以情况是开放式原理。如果我构建包含一堆计算器功能的库，我不应该假设使用我的图书馆的程序员将要挖掘我的代码并更改乘法函数的方式。它应该是一个黑匣子。他们可以有利于阅读我的源代码并知道它如何出于性能原因或某种东西的工作原理，但原则上，他们唯一需要知道的是他们可以呼叫繁殖（4,2），它将返回8。它们不应该或必要的是，他们改变这个功能。
但作为这个库的维护者，如果乘法不正常工作，或者我弄清楚更有效的方法来实现它，当然我可以做到这一点。修复代码中的错误是接口设计完全分开的问题。
我不知道面试官正在寻找什么，但这是我给予的答案。
更普遍
工程不是以下规则和检查清单的问题。这是关于批判性地思考你的设计决策。什么是权衡？有什么风险？坚实的原则，敏捷的做法，所有这些东西 - 他们是由资深工程师学到的准则，艰难的方式和与较大的社区共享，但这就是他们所在的 - 指导方针。它们并不总是适用于您的用例。如果在任何时候某些思想或标准练习似乎是愚蠢的工程，那么就不要在那种情况下使用它。只需确保您了解为什么您为规则发出异常。如果我在面试的人，那些证明他们都理解规则和何时制造一个例外，他们就会从我这里得到一个竖起大拇指。
谢谢你的A2A VSVH1NH83Z。
回答 4 不，这完全不是开放式原则的意图 - 这是哲学的方式太远了。您应该显然修复代码中的错误。
首先让我们看看开放式原则是什么：
软件实体（类，模块，函数等）应打开扩展，但已关闭以进行修改。
现在，这适用于较大的软件系统。我们希望关闭修改的事情的原因是我们不会修改许多其他组件可能取决于的东西。所以，当你只有几百条代码时，随意忽略这一原则。
我将会
不，这完全不是开放式原则的意图 - 这是哲学的方式太远了。您应该显然修复代码中的错误。
首先让我们看看开放式原则是什么：
软件实体（类，模块，函数等）应打开扩展，但已关闭以进行修改。
现在，这适用于较大的软件系统。我们希望关闭修改的事情的原因是我们不会修改许多其他组件可能取决于的东西。所以，当你只有几百条代码时，随意忽略这一原则。
我还会注意到这一原则太自由地说，事情应该是开放的延期。不应遗传未明确设计的类别。
关闭部分的开放式原理意味着在大型软件系统中，您通常不会在每次要为特定用例添加新功能时修改现有类（其他代码可能依赖）。
所以，如果我们需要添加一个支持的函数，该函数只有我拥有的一些用例，我不应该将其添加到每个人的导入中的一般模块;相反，我应该将其写成我自己的模块，如果需要，将常规导入常规模块。同样对于一个类：我不应该混乱一类泛型类，每个人都使用了一些特定于我的用例的额外功能 - 在做出任何已经取决于类的所有代码都会进行风险。我应该创建一个用于我用例的新类，如果需要，在我的实现中利用现有类（通过构成或继承）。这样，没有人已经依赖改变，我的变化只会影响我。
如果您确定此类用户的所有用户（大概是，错误修复只需确保满足某些已经承诺的合同，则可以完全修复一个错误即使开放式原理技术上告诉你，你仍然可以随意为现有类添加方法（假设您能够这样做）如果它真的适用于所有类的用户，您可以保证您的所有现有用户都是正确的默认实现。
开放式原则是一个建议而不是一个艰难的规则。不要让它妨碍写好的代码。
回答 5 现在假设第4页，我们看到第十几次上市的租户，但这里是l
想到法律合同。
可以是什么，但让我们说租赁协议。这是应关闭的东西，以修改（除非各方当然同意）。假设合同有少数目标：
漂亮的标准东西。显然，5个子弹不是完整的合同，但与我忍受。
现在假设第4页，我们看到第十次上市的租户，但它将其列为Alice和Bbo。我们可以由于印刷错误而改变该合同吗？当然我们想这样做。我不是律师，所以这可能需要每个人或一个重新签名或其他什么，但我们确实想要修改问题。</description>
    </item>
    
    <item>
      <title>作为软件工程师，您可以通过查看编码风格来告诉谁在团队中开发了特定组件？</title>
      <link>https://xiangqingw.github.io/posts/as-a-software-engineer-can-you-tell-who-developed-a-specific-component-in-your-team-by-looking-at-the-style-of-coding/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:11 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/as-a-software-engineer-can-you-tell-who-developed-a-specific-component-in-your-team-by-looking-at-the-style-of-coding/</guid>
      <description>作为软件工程师，您可以通过查看编码风格来告诉谁在团队中开发了特定组件？ 回答 1 我曾经与一名同事合作，其代码可以以任何语言和任何项目都认识到。部分原因是他&amp;hellip; 艾姆解决问题的独特方法，但主要是因为评论（当然评论通常应该赠送作者）。
这个特殊的开发人员写了像对老朋友的一封信一样的评论。他会在每个阶段解释几件事：
它啰嗦吗？当然，过度。它真的很重要，因为我会在我正在阅读的整个时间微笑。我期待着审查代码，我从未触及这些评论。
我不再拥有一个真实的例子，但这是我记得它的方式：
现在我们占据了阵列的长度并将其添加到我们的柜台上。这是我们的偏移量，我们如何使用它将是一个令人惊讶的是稍后会出现惊喜。我正在考虑召唤变量Myoffet，但我不想似乎似乎是如此占有欲。实际上我们应该将这块块爆发成自己的调试功能，但现在我仍然有点累了。
回答 2 在这里，你试试吧。你需要知道的是，declcontext（他没有选择的一个名字）是一种类型或源文件，我们正在寻找它
有一个老家伙，我认识到80年代在80年代的小型语言上工作的前教授 - 谁用奇怪的句子函数名称写。例如，我可以调用checkformodule（）的方法，他调用lookforamodulewiththegivenname（）。
他们绝对不是我会选择的名字。然而，每次我看待他最多工作的代码一样，我非常容易理解它在做什么。
在这里，你试试吧。您需要知道的是DECLContext（他未选择的名称）是一种类型或源文件，我们正在寻找具有特定名称的东西。看看这个功能：</description>
    </item>
    
    <item>
      <title>如果编程语言也以编程语言编写，则第一个编程语言如何写入？</title>
      <link>https://xiangqingw.github.io/posts/if-a-programming-language-is-also-written-in-a-programming-language-how-was-the-first-programming-language-written/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:11 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/if-a-programming-language-is-also-written-in-a-programming-language-how-was-the-first-programming-language-written/</guid>
      <description>如果编程语言也以编程语言编写，则第一个编程语言如何写入？ 回答 1 这是一个有点有趣和真正的轶事。
在70年代末，我正在与研究实验室一起工作，并且给出的任务之一是从组件中建立微处理器板。各个芯片，电阻器，电容器和PC板。 （处理器是英特尔8085 - 当时全新）。这几十年后仍然让我感到惊讶，因为一个未经训练的学生，我设法努力工作 - 好吧，它确实如此。
所以，我有一个功能微处理器板。最初，作为输入设备，它具有一个小十六进制键盘（零九，a到f，输入键，我认为它有一个退格 - 不确定），并且作为输出设备它具有多个字符的LED分段显示能够单行文本。 （随后输入和输出设备都被更好的选项替换，但这是第一个配置）。
我设法在Web上找到以下图像。那个我建造的那个肯定是类似的。
唯一的接口“语言”是机器代码。不是装配 - 机器代码。机器语言的字节。虽然很短暂，但它在十六进制中编写了微小的节目，并让他们展示东西，但快速脱落。所以，当然，这是70年代，而不是60年代早期，下一个目标是使它理解一个编程语言 - 所选的一个被解释的基本。我们发现了一篇日本人（我认为）发布的文件，该文件有一个完整的基本解释器，用于机器代码中列出的处理器。我仍然记得有趣的是，纸质标题下面是一条舌头脸颊线，读过Copyleft，保留所有错误。 （编辑 - 有人找到了原始文章。李晨王于1976年发表了他的小型基础，他是中国人，而不是日本人。李晨王维基百科）
我键入整个程序，并将其刻录为支持系统支持的EPROM（可能是8或16千字节）。我一定是正确的，因为从那时起就可以与微处理器以基本交谈。
因此，对您的问题的一个可能的答案：通过在机器语言中实现它，可以将其实施，手动编码每个字节，并将其刻录到EPROM（或其他可编程存储器设备）中来实现第一个编程语言。
回答 2 所有代码都已成为“机器语言”。这是一系列在处理器的本机代码中写入的一系列指令，以及您正在运行的硬件系统。
回到当天，之前的“语言”，你在汇编程序中编程，这使得在机器语言中编码更加理解，方便，但仍然最终写作了机器指示，这是非常繁琐和劳动密集的。
这是它看起来的样子：
这些助记符如“LR”（加载寄存器）和“LA”（负载地址）直接相当于机器语言。
第一种语言（例如Fortran和Cobol）是Progr
所有代码都已成为“机器语言”。这是一系列在处理器的本机代码中写入的一系列指令，以及您正在运行的硬件系统。
回到当天，之前的“语言”，你在汇编程序中编程，这使得在机器语言中编码更加理解，方便，但仍然最终写作了机器指示，这是非常繁琐和劳动密集的。
这是它看起来的样子：
这些助记符如“LR”（加载寄存器）和“LA”（负载地址）直接相当于机器语言。
第一种语言（例如Fortran和Cobol）是用汇编程序编写的程序，它将人类可读指令作为输入并将其编译成可执行的机器语言。沿外的更高级别语言如PL / 1采用相同的方法。这些降低了培训要求，急剧缩短了开发和测试周期。
编译器只是一个像其他一切一样的程序，区别在于它专门用于创建其他可执行程序。
回答 3 这是一个有效的问题。我可以看出它似乎是如何存在某种循环依赖或鸡肉或鸡蛋的情况。NOPE.NOPE。它完全是这样做的吗？我会尝试解释，但它会花点时间，图表和图片如此，请忍受我一个位。在部分中断行之后，下面的DR下降开始（1940年代和1950年代）非常简单。最简单的工程师实际上的工程师在面板上翻转开关或将电缆插入开关电路。在他们使用的打击卡上，卡片中的孔可以代表打开或关闭的二进制状态（1或者0）。最初没有小鼠，键盘，甚至屏幕（除了非常早期的实施中的示波器类型屏幕之外）。可以在手动读出或卡片设备上打印或显示出来的。用想法将这些设备用于毛皮构建和设计其他输入设备，键盘，小鼠，诸如监视器，打印机等的输出设备是在它之前的技术年份和建立它之前的逐步构建，因此可以拥有什么我们今天考虑一个现代化的计算机。全面看一台非常早期的电脑，即1945年大约1945年被称为巨型标记2的代码：
非常手动。使用电缆和旋钮，开关以及可能读出数据的纸带，甚至只是打印出与最终计算（不像算盘不同的旋钮打印出来的纸带以下是IBM 533打卡系统的IBM 650大型机（打卡卡甲板位于右侧 - 650次操作员控制台）。这是大约1956年：
不要太好。非常手动，没有真正的屏幕或任何类似于我们今天会叫电脑的东西。无论何地，它都有许多进步，加载打卡程序的能力，更快地运行，更好的指令集等&amp;hellip;&amp;hellip;也是如此添加IBM 653存储单元的能力，该存储单元添加了磁芯存储器，60个10位字的磁芯存储器，3个数字索引寄存器和浮点算术精度。指令集更进一步，并且具有汇编语言的基本助记符功能稍后会有。如果我们向大约1968年移动到大约1968年，我们会看到类似HP 9100的东西：
嗯。这开始看起来像一个电脑。of.techly，它被称为第一个科学计算器，用于营销原因，但它基本上是第一个桌面电脑之一。它有一个纸磁带读数，小屏幕和键盘输入数据。这是Time.Circa 1971的众多第一个可编程计算器或个人桌面计算机之一。这里我们拥有IBM 360大型机和控制台：
这现在开始看起来更像是我们将考虑的电脑。这是一个典型的输出监视器，以及输入的典型键盘。鼠标尚未发明。1981年我们拥有IBM的第一个运行英特尔的官方个人台式电脑处理器：
TL;博士
我的观点是每个一代都在上一个上面建立.Langumages作为编程计算机做有意义的东西的方式。目前来自翻转交换机的艰苦任务，以获得所需的效果（编程）。那是说，我们今天做的键入我们今天做的软件，或者这瞬间做了什么，只是一个非常先进和抽象的版本的同一件事。我们认为这主要是由于：1）今天的输入设备非常顺畅，光线，快速，响应和2）通过我们选择的语言的给定指令我们可以更加明显地做，检索更多的数据，产生有时的产出量（相对于2-5年前），这也是3的结果）今天的计算机比甚至70年代的最佳电脑速度快。秒）.Thats 3 -6百万次作为1975年最佳电脑的速度快！它的数量级100倍，与1945-50的第一台电脑相比。吹嘘，嗯？
回答 4 考虑这一点的一种方法是你想制作一些非常强大的砖头机智
另一个不完整的提供&amp;hellip;&amp;hellip;
它值得深入启动，因为它有助于获得元杠杆思想的经验。例如，如果只有一台计算机只有一台机器代码？在这里，您必须使用与机器代码指令对应的位模式。如果你懒惰和雄心勃勃的同时怎么办？ IE。你不想在比特中捣碎比你必须多，你还希望尽快制作一个高级编程语言？
一种方式来思考这一点是你想制作一些非常强大的砖块，没有大量的手工编码，那么允许引导引导所需语言的东西（并且也许你需要一个引导阶段） 。
从60年代我们可以随意使用多台计算机，因此我们可以考虑使用更多工具的途径。人们写交叉编译器，但我倡导这是最后一件事。在游戏的早期部分引导各种口译员，您更好的是。
一个有趣的皱纹是在我们的开发机器上写一个目标机器的翻译。这使得很多意义，因为在我们的开发工具的怀抱中可以在目标上删除目标之前可以在我们的武器中完成。
我在1965年在国家大气研究中心编程时，我有乐趣。头系统程序员没有信任控制数据，因此他们决定为不完全发布的6600个超级计算机进行自己的系统软件，并让我在我们现有的CDC 3600上写一个模拟器 - 所以它可能是调试。与大多数HW架构相比，6600是非常激进的，并且很有趣，使得能够迅速模仿机器（这是用3600个汇编代码编写以获得最大速度）。</description>
    </item>
    
    <item>
      <title>您如何判断有人是否将成为一种现象软件工程师，开发人员和/或程序员？</title>
      <link>https://xiangqingw.github.io/posts/how-can-you-tell-if-someone-is-going-to-be-a-phenomenal-software-engineer-developer-and-or-programmer/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:11 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-can-you-tell-if-someone-is-going-to-be-a-phenomenal-software-engineer-developer-and-or-programmer/</guid>
      <description>您如何判断有人是否将成为一种现象软件工程师，开发人员和/或程序员？ 回答 1 他们多久说一次我不知道，但它听起来很有趣
我与工程师10多年比我更高级的人在一起，因为一个原因，他们似乎知道一切，似乎是关键词。
承认您对课题缺乏了解是一天需要成为一天的第一步。
说出来，即使它没有让你对它感觉良好：git rebase？我不知道，我没有用git工作，是喜欢git merge吗？和T&amp;hellip;
回答 2 他们大多是或他们arent。它需要不到一年的时间，如果你有合适的资质，从零到卓越。其他任何事情一样，他们获得更好的使用体验，而且以惊人的软件工程师可以简单地在他们的大脑，这依赖于他们的大脑结构，大量复杂的建模。
唯一的预测性的测试，我知道的是怎样的一个作弊的：在真正优秀的程序员，我知道所有的一杆进洞高中几何。我得了A +，甚至没有尝试。
和Im谈论通常在美国任教，你必须写证明的那种。这就是为什么它是一个骗子：证明只是很喜欢编程。
也可以看看：
蒂姆Menschs回答什么技术/编程技能分开平均Java程序员的伟大？
回答 3 有很多不同的方式是在某些东西上是惊人的，但是有一种人钦佩的人。
理查德·费曼
是什么使Feynman成为一个惊人的物理学家，也可以制作伟大的开发商：
回答 4 如果我知道，我会非常富有。谷歌自己的人力资源部门研究了他们的招聘实践，并决定如何在采访时做出候选人，但是没有对公司所做的程度没有承担。而这是谷歌，他们的巨大堆现金，技术专长，看似无限的资源。
您聘请了智能，受过教育，激励的人，并希望他们不是怪异，欺诈或反社会疯子。
回答 5 一个伟大的高水平指标是他们解决问题的方法。我认为，韦斯温和巴林特Mórocz在他们的回答做了一些真正有效的点。当然，你得有实力，专业技术知识，逻辑思维，等等。但…
如果一个人有一个非常困难的问题，但在长度追求它的挑战，可能让它凝胶的日子里，做相关的研究，和他人交流，以及有关它的思想在他们的业余时间，他们可能会做一个优秀的程序员。
是的，你需要的技术能力，在正确的思维模式中，知识的支持背景，等等。但为了是例外，你必须有解决问题和寻求知识，学习新的东西，以解决新的问题的愿望的热情。
如果你成为大师，并认为你知道的够多了，游戏结束。如果你认为你可以弄清楚的问题在你的头上没有更广泛的研究和学习，忘掉它。所以威力并不代表一切。事实上它几乎没有，如果你不热情，对解决问题的有效。
回答 6 这里有很多好的答案。在我的书中，在软件开发竞技场中成为“现象”所需的两个能力：逻辑上思考的能力，以及简化的能力。
除了这些之外的任何东西都是绒毛，或根据技术知识的类别（可以教学/学习）。
回答 7 你不能。
现在是糟糕的人可能会在未来产生动力，最终成为一个伟大的开发人员。
同样，现在有一个真正擅长的人可能，有一天，松散他或她的驱动，不要再关心良好的品质软件并变得真正平庸。
回答 8 谢谢你的A2A。
许多真正伟大的答案，这里是来自技术知识的观点。所以，我想采取不同的路线。
人们通常定义惊人的人谁在技术上是个天才，就像有人做功能可以做到（我不是说他或她要做到这一点），整个应用程序。
我自己，信任只有1人的指标，当我必须决定在食物链中，他们乍一看。这就是激情。
问一个人谈，同时开发软件的自己最幸福的时刻。如果有人约100行代码谈到他们做了类似的激情
谢谢你的A2A。
许多真正伟大的答案，这里是来自技术知识的观点。所以，我想采取不同的路线。
人们通常定义惊人的人谁在技术上是个天才，就像有人做功能可以做到（我不是说他或她要做到这一点），整个应用程序。
我自己，信任只有1人的指标，当我必须决定在食物链中，他们乍一看。这就是激情。
问一个人谈，同时开发软件的自己最幸福的时刻。如果对他们用类似于他们的完美伴侣结婚，在我眼里，这意味着你可以依靠的人作为一个开发者的激情做了100行代码的人会谈。有人谁需要时间来完善自己，他们的工具，他们试图创造最好的自己的能力。如果他们都批评他们试图以应用而不是转身离开的。这就是我所说的现象。
有人谁在技术上是一个奇迹，没有那么多。我在过去谁是能够在代码做的奇迹有几个优秀的程序员。但他们不能接受批评意见，即使他们提供的代码只是他们明白（其中有很多的“超级明星”级开发商发生）。
不然我和意见指出，热情淹没，并不意味着某人是惊人的或将永远成为一个：
激情来的实践，熟能生巧。
如果起动时有人有激情，分配一个伟大的高级/导师给他们。他们将快速增长。即使他们不会成为你平时的惊人开发商，他们会比同龄的其他更大。
激情是一个伟大的指标，因为你可以看到，在采访中也一样，技术知识是不可能的面试来衡量。
当然还有其他因素，如社交技巧，所以有他们在成为巨大的影响，但是，这也是东西是难以衡量的，可真球队具体了。
干杯。
回答 9 他们能够销售。
这个问题在Quora上得到了很多。
有两种思想阵营是什么让一个伟大的开发商。
营地1：你是房间里最聪明的人。
2营地：你只是对它的热情，男人。
两者都要大分 - 但两个阵营都来自开发人员的观点。</description>
    </item>
    
    <item>
      <title>您认为应该在所有国家实施什么？</title>
      <link>https://xiangqingw.github.io/posts/what-do-you-think-should-be-implemented-in-all-countries/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:11 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-do-you-think-should-be-implemented-in-all-countries/</guid>
      <description>您认为应该在所有国家实施什么？ 回答 1 民族主义有所作为？
积极，建设性，在实践中是世俗的，并拯救人类更长，更好的未来？
集体思想与行动 - 适当尊重每个人的遗产;信条和（贸易，教育（至少基础学校），食物，庇护，衣服和尊严）？
尊重彼此的领土，如果需要份额（？）;改善并一起推进？
环保地，我们已经设法（差点）破坏了我们生活的唯一世界？
我们需要做的是没有从枪的工作结束寻求电力，或者践踏提供的花朵？
有条件的中间
民族主义有所作为？
积极，建设性，在实践中是世俗的，并拯救人类更长，更好的未来？
集体思想与行动 - 适当尊重每个人的遗产;信条和（贸易，教育（至少基础学校），食物，庇护，衣服和尊严）？
尊重彼此的领土，如果需要份额（？）;改善并一起推进？
环保地，我们已经设法（差点）破坏了我们生活的唯一世界？
我们需要做的是没有从枪的工作结束寻求电力，或者践踏提供的花朵？
如果进行专用搜索，则可能有条件中间地面。
保持大流行安全，让更美好的一天！
回答 2 在你嘘声和嘶嘶声之前，让我解释一下。我在巡航船上工作了四年的更好部分，并走遍了世界各地。我去过欧洲，亚洲，非洲的不同地区，澳大利亚，南美洲，中美洲和当然我居住在北美洲。我去过夏威夷，加勒比群岛，菲利普琳，越南，香港，新加坡，泰国，埃及，以色列，摩洛哥，新西兰，我可以诚实地说它给了我对世界各地的其他文化和人民的巨大欣赏。我没有去过的唯一一个antarctica.are那里的国家我没有去过？当然&amp;hellip;&amp;hellip;很多。但我认为它的安全要说我已经足够了解这个问题的相当合理的答案。首先，我喜欢新西兰，这是我答案我是否可以住在美国以外的任何地方，在哪里？我活着？我会是一个猕猴桃！首先，他们有点说英语，（他们对此相同埃里卡人生病了，哈哈），它是一个美丽的国家，气候很棒。峡湾提醒我阿拉斯加，但好吧，思考戒指的主，因为这是它的拍摄。没有问题。我居住的最佳国家在哪里？我挑选了美国。它完美了吗？肯定不是。但是，我们有一个令人难以置信的多样化的气候。有趣的海滩？生活在夏威夷，佛罗里达州或沿岸麦克斯山脉，靠近洛矶山脉，大巨大的山脉或阿巴拉契亚山脉。很冷的天气？很多寒冷的天气，或者去阿拉斯加人。也许你想住在美国的一个维尔京群岛之一或也许波多黎各或关岛。实际上只有两国更大&amp;hellip;&amp;hellip;俄罗斯和加拿大。我从来没有去过俄罗斯，但加拿大很好&amp;hellip;&amp;hellip;但是你将在加拿大找到温暖的阳光海滩。罗斯有温暖的沙滩也&amp;hellip;&amp;hellip;它被称为古巴！（开玩笑）
除了气候之外，美国还有一个强大的经济。大部分时间都有一切。这一事实无论如何超过250岁。所以美国经济是如何如此迅速变得如此迅速iPods和On和On.如果它没有在美国发明，那是来自这里的大规模生产的结果&amp;hellip;&amp;hellip;例如，汽车由Carl Benz发明。但是亨利·福特是制造汽车实惠的人通过装配线制造的群众。关于沃尔特·迪士尼？沃尔伦自助餐？比尔盖茨？史蒂夫乔布斯？所有visionary。但除了一个人的学位之前，除了一个富有的地方。但收到了荣誉学位。酒杯有一个本科生和大师，但唯一挂在一起他是他毕业于戴尔卡内基课程的毕业生。这些人取得了梦想的成功水平，但由于将思想变成现实，他们变得丰富&amp;hellip;&amp;hellip;并让别人看到他们的愿景。但不是美国人贫穷？是的。但是我们的贫困与其他国家贫困不同。在我去过的一些其他国家，贫穷不是食物，庇护所生活在塑料袋下。美国贫困可能包括食物，庇护所，空调，手机，甚至医疗服务。我并不暗示居住在贫困中很好&amp;hellip;&amp;hellip;我只是说居住在这里的贫困不是在海地，牙买加，泰国或我所拥有的许多其他地方的贫困曾经去过那种可怕的枪问题。人们没有人拍摄只是走在街上？几乎没有。我们真的没有枪的问题。在美国买枪很容易买枪，但是枪支相对少的人杀了。我给你一个例子：2017年有大约400人死亡达利射击。与此国家的闪电相比，大约1000人袭击了大约1000人。所以如果一个人被闪电击中的人的赔率是与步枪杀死的2.5倍，那么这些都很低。媒体喜欢报告那些真正相当普遍的人。这不是。媒体喜欢用枪支用凶杀案来杀手。当你回来时，你每年获得10,000-12,000辆非自杀枪支死亡。
回答 3 甚至不接近一切都更便宜。电子产品在新加坡比较便宜。衣服价格广泛变化，许多家用用品在伦敦和电力，手机票据，互联网作为示例便宜。没有人为每人的医疗保健支付比美国的医疗保健支付。其他人提到兽医护理也更昂贵。啤酒在澳大利亚更便宜，新鲜水果，蔬菜，肉类，面包都可以在更便宜的范围内取决于美国的地区。
在纽约或旧金山等一些美国城市生活的成本非常高。用于处方药的复制有时甚至不存在于其他国家。伦敦的汽车保险比美国大多数主要城市更便宜。在英国，高等教育贷款有远低的利率。旅行的PCR测试也有点便宜。我在凤凰城的同一天考试支付了250美元，但伦敦只有18磅。
老实说，这个列表可以有点。这一点在于美国有很多，很多事情，只需花费更多并且不少于其他地方。
回答 4 有许多国家正在尝试为期四天的工作周。
冰岛在2015年至2019年间为期四天的工作周进行了几项大规模试验。研究人员表示，它表明它表现出工作时间减少的效果的突破性证据。
试验主要发现表明，一系列指标中的员工福祉转化为较短的一周：从压力和倦怠到健康和工作生活平衡。
日本以其艰苦的工作薪水而闻名，越来越多地，薪水妇女，但日本政府已公布其年度econ
有许多国家正在尝试为期四天的工作周。
冰岛在2015年至2019年间为期四天的工作周进行了几项大规模试验。研究人员表示，它表明它表现出工作时间减少的效果的突破性证据。
试验主要发现表明，一系列指标中的员工福祉转化为较短的一周：从压力和倦怠到健康和工作生活平衡。
日本以其勤奋的薪水而闻名，越来越多的薪水妇女，但日本政府已经推出了其年度经济政策准则，推荐公司转移到一个为期四天的工作周而不是典型的五个。目标是提高工作生活平衡。
政府表示，这也有助于公司保留可能会留下家庭或照顾老年亲属的员工。它还鼓励更多人获得额外的教育资格，以便在经常就业之外采取职业工作。
最重要的是，当局希望额外的一天会刺激经济。
新西兰总理贾南娜阿尔德纳建议为期四天的工作，可以提高国家经济。个人可以使用很长的周末来访问当地斑点。随着国家严重依赖旅游，国内旅行的增加可以弥补缺乏外国旅行。
苏格兰计划推出一项四天32小时工作周的审判，工人不会赔偿。该计划将由SNP资助，超过1000万基金（1380万美元）。
政府指出苏格兰最近的民意调查，展示了80％的人回应了这个想法，这是对主动性的高度积极态度。
西班牙于2021年9月推出了一项为期四天的Workweek飞行员，该飞行员将持续三年，并在欧盟资助中使用5000万欧元，以补偿估计的200家公司，将员工减少到32小时内而不削减工资。
阅读有关为期四天的工作周：
回答 5 捷克共和国/捷克（中欧） - 德国旁边的小国家。
一页捷克纳税申报表
2.将建设建设基础设施 - 与复杂的法律有部分连接，几十个迈出，试图停止建造高速公路，铁路等捷克群体所以这些项目总是影响某人&amp;hellip;&amp;hellip;
3.民粹主义 - 嗯，在许多其他西方国家的辛苦般地。民粹主义是捷克协会的一个大专题，因为在捷克共和国，有时是有点奇怪的。 Tomio Okamura和他的派对是公开的仇外心理。 Okamura先生是捷克语 - 韩国日语血统。 ：即使他的亲戚也反对他。例如，建筑师海地奥克马拉。
4.前重型工业区（北波希米亚和摩拉维亚 - Silesian地区）仍面临着相当长的静态问题。当地人口同时显着下降。</description>
    </item>
    
    <item>
      <title>程序员可以通过做工作来富裕吗？</title>
      <link>https://xiangqingw.github.io/posts/can-programmers-become-wealthy-by-doing-their-job/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:11 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/can-programmers-become-wealthy-by-doing-their-job/</guid>
      <description>程序员可以通过做工作来富裕吗？ 回答 1 如果他们是在正确的时间出现在正确的地方，确保万无一失。
标准，在大公司运行的设施，工厂的程序员？可能不是。
软件工程是在一个相对高薪的职业矩有很好的理由，但最不只是从事自己的径流式的磨9到5工作变得富有。他们将赚到足够的获得，可能能够承受偶尔的演员，像度假，每隔一段时间，但他们不会是环游世界的娱乐表演。
并不是每一个任务就是像这样（图片来源）
但是，一个软件工程师谁上那张被incredib一个高科技启动的地面连接
如果他们是在正确的时间出现在正确的地方，确保万无一失。
标准，在大公司运行的设施，工厂的程序员？可能不是。
软件工程是在一个相对高薪的职业矩有很好的理由，但最不只是从事自己的径流式的磨9到5工作变得富有。他们将赚到足够的获得，可能能够承受偶尔的演员，像度假，每隔一段时间，但他们不会是环游世界的娱乐表演。
并不是每一个任务就是像这样（图片来源）
但是，一个软件工程师谁对那张高科技启动的地面连接是令人难以置信的成功？当然。谷歌的第一个员工都富可敌国，因为是甚至不是家喻户晓的微软，Facebook等科技公司的创始人。即使是运行的设施，工厂的程序员对微软进入20世纪90年代开始通过股票期权富裕。
但只是标准的程序员在大公司？并不真地。他们将谋生和可能能够通过他们70时退休。
编辑：
有用户指出，大多数工程师舫公司工作可以致富只是在做自己的工作。我不为一舫的工作，所以我很感谢他们的意见。
详情请参见注释。
回答 2 如果我可能会延伸它，是的，是，通过将他们的工作转变为启动和成功。
昨天，Confluent成为公众，我读到了创始人现在是亿万富翁。他们开始作为在LinkedIn的Apache Kafka工作的程序员。
回答 3 有富裕并无统一的定义。我可以从经验说，程序员做足够多的资金来满足他们的需求和他们的大部分愿望的多。从全球范围来看，这是真正的富裕。
通过他们量入为出，程序员可以赚到足够的钱投资于未来的需求和退休。尽早开始，并持续投资，你会很快积累了七位数的组合。在美国方面，这是富裕的。
很幸运，土地在启动的提议的股权，并最终有一个大的出口，你可能土地权益价值七位数的时刻。无论如何，只要那是富裕了。你可能会说这个级别的财富是丰富的。
因此，计算你的祝福，你的所有需求和大部分的欲望都得到满足感谢。投资早，往往能达到经济安全和独立。并采取了两次险在职业生涯的早期，看看你能发大财上启动。无论什么时候，你会活的很好，并最终在你的中年舒适富裕。
回答 4 他们肯定会致富，缓慢，适度的方式。如果你每年制造150千克（这是平均水平的方式，而且在生活区的高成本也不罕见）并节省20％，这是每年30k。投资于股票市场，假设历史退货，您将在银行中退休10至1500万。
但突然，戏剧性的财富？这基本上只有在它是微小而变得非常幸运的时候加入初创公司。
回答 5 我知道一个31人，净值戒掉了他的工作。这只是在10年的工程职业生涯中。对你来说是富人 - 那么是的程序员可以通过完成工作来富裕。
然而，为了在短时间内实现这样的壮观财富，您的大部分财富应该是您薪水的一部分。此外，您应该在市场上支付IT公司之一。即使那么，就像你公司一样的事情就是错误的;股市坠毁或其他东西。但仍然 - 有希望，因为软件公司正在疯狂地支付最佳候选人。你必须非常长的时间才能在你的比赛中。
回答 6 是的！
当我们年轻而愚蠢的时候，我们大多数人都太愚蠢了。它与初创公司或任何其他罢工完全无关，您可能会被告知。我在最新的书中谈谈这一点。
这篇文章直接相关：
支持它并构建那些
克里斯纳什的种类给了你一块答案。
许多程序员得到了很好的报酬。太麻木了
是的！
当我们年轻而愚蠢的时候，我们大多数人都太愚蠢了。它与初创公司或任何其他罢工完全无关，您可能会被告知。我在最新的书中谈谈这一点。
这篇文章直接相关：
支持它并构建那些
克里斯纳什的种类给了你一块答案。
许多程序员得到了很好的报酬。当我们年轻的时候，我们太多是愚蠢的。我们购买昂贵的汽车，只能燃烧高级燃气。我们在连续几年内拍摄所有休假。我们为重要的其他人购买昂贵的珠宝。列表继续和打开。
许多大型机开发人员领导了一个cape代码的生活。
Roland Hughes·10MO &amp;lt;/ SPAN&amp;gt;
10mo &amp;lt;/ span&amp;gt;
年轻开发人员（我所包括的东西）从来没有学习他们足够年轻人真正做出重要的时候，是股息投资。我们如此习惯于没有任何我们不会幸福的东西。
股息投资只不过是购买股票，ETF和相互资金，即直接向您支付股息，并有很长的轨道记录。甚至有这些公司的列表。这不是一个很棒的回报。事实上，当你第一次开始它看起来毫无意义。
一旦您向周围传播投资以覆盖您的风险，并一直在播放您的风险，您将注意到您在股息中只需1000美元/月。这是关于它陷入困境的时候。
嘿，我应该真的停止购买最新玩具并占用那些昂贵的假期，因为当这个点击$ 10k /月我不需要工作期间！
许多中国人都有金融道德，我从未能够实现。
生活在收入的40％。</description>
    </item>
    
    <item>
      <title>高级软件工程师告诉我不要使函数并拥有我的主要方法，因为它更快。我认为这使得代码方式太不可读，冗余和凌乱。谁是对的？</title>
      <link>https://xiangqingw.github.io/posts/a-senior-software-engineer-told-me-not-to-make-functions-and-to-have-all-of-my-code-in-my-main-method-because-its-faster-i-argued-that-this-makes-the-code-way-too-unreadable-redundant-and-messy-who-is-right/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:11 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/a-senior-software-engineer-told-me-not-to-make-functions-and-to-have-all-of-my-code-in-my-main-method-because-its-faster-i-argued-that-this-makes-the-code-way-too-unreadable-redundant-and-messy-who-is-right/</guid>
      <description>高级软件工程师告诉我不要使函数并拥有我的主要方法，因为它更快。我认为这使得代码方式太不可读，冗余和凌乱。谁是对的？ 回答 1 这两个观点都有一些真相，但对于非琐碎，现实世界的开发项目，您比其他软件工程师更正确。
考虑唐纳德Knuth，计算机编程系列艺术作者的以下声明：
 程序员浪费了大量时间思考，或担心他们的计划的非关键部分的速度，并且这些尝试在调试和维护时实际上具有强烈的负面影响&amp;hellip;&amp;hellip;
 回答 2 高级软件工程师告诉我不要使函数并拥有我的主要方法，因为它更快。我认为这使得代码方式太不可读，冗余和凌乱。谁是对的？
代码比让我们说30行代码*是短的吗？然后他可能是对的。否则他几乎肯定不是。在99.99％的情况下，您赢得这种方式的性能可以忽略不计。在99.99％的情况下，您失去的代码质量并不可忽略不计。所以在99.99％的情况下，你是对的。
而且，坦率地说，那个人不值得标签工程师，更不用说高级。
*当方法变得超过10行时，我个人开始重构。我的大多数方法都长五行。
回答 3 当代码完成后，可以p
通过编写代码保存运行时间内联的是一个是便士和笨拙的例子。
确实，函数调用每个成本一分钟的额外时间，如果代码全部均为行。这种差异吗？它是1％，还是0.001％？通常是后者。
但是发展得更快？一块软件分成逻辑函数，或者是一个单一的墙壁代码文件，没有明显的开始或停止？这种微小的速度降低通常会为您提出一大批易于发展。这是一个有价值的贸易。
完成代码后，您可以配置它，如果一个函数调用太多次数，则可以在内联函数。通常有一个或两个功能，可占据可观的时间，其余的别是没有。所以在最后优化的是更有效的。
回答 4 当然是一个主要的
高级软件工程师告诉我不要使函数并拥有我的主要方法，因为它更快。我认为这使得代码方式太不可读，冗余和凌乱。谁是对的？
遗憾的是在它中，在许多其他人的生活中，你遇到了没有被宣传超越他们的能力的博泽斯，通常是凭借谈论一个良好的谈话。
除非您的主要值非常短（例如，10到20行），那么将代码分解为更简单的单位，将帮助可辨据和可接受性与接近对性能的无限影响。
当然，一个主要由每次函数组成的主要函数是两行长度，但除了这种极端情况之外，你是对的，他/她不仅错了，而且没有能力抓住他们的职称。
回答 5 你是。不得不做堆栈的性能是如此小，你可能也不令人费不知它作为增益。但是，可读性的丧失是真正阻碍了您未来的编程团队实际解决任何内容的能力。
如果在一个环境中的函数调用太多的环境中为您做过，您根本不应该使用高级语言。
回答 6 当您想要展开一切以获得绝对性能时，存在罕见的情况。编程FPGA的人有时会进入这一点。但即使在那里也非常罕见。也许40年前，功能呼叫开销足够重要，以至于人们有时担心它。但是通过现代机器，功能呼叫开销非常小，如果它成为一个问题，则通过引用调用通常会减少它。并且在编程语言中设计用于问题的问题，通常存在内联指令，告诉编译器为您展开它。此外，优化器非常擅长自动完成此内容。
易变是问题的一个方面。整体问题是验证性和验证。您如何测试您正在构建并验证他们符合其规范的部分。实时编程可能存在特殊情况，其中最高优先级的东西需要在少于x的时钟周期中进行。这是一个特殊的情况，其中定时是正确性规范的一部分，并且在某些角落的情况下，如果它展开，则可以更容易证明代码符合规范的时间部分。实时系统开发人员将更好地对此进行评论。
回答 7 哇，1989年的一个问题，我不知道Quora回来了！
（认真色：在他们的正确思想中没有人想到2021年的方法调度的开销。好的，除了0.001％的软件工程师外，没有人在超低级内循环非常性能敏感的东西中进行的0.001％
回答 8 我敢肯定的是，在过去几年比几行再此高级软件工程师不写任何程序。
内联一切速度的提升是negliable，它是由编译器如果可能的话做了。
如果你的老板告诉你写在一个单一的主功能的一切，你显然必须这样做，但是这将是一个维护的噩梦，也是它使测试相当困难。
回答 9 你说的对。他们不是一名高级。
除非这是一个巨魔问题。它感觉就像一个，因为它如此完全不可能为我们在我们的行业持续到200条线路或更少的代码的工程。更少促进了。
这实际上是难以置信的。
更新：自写这一点以来，我实际上经历过这一点。
回答 10 这是事实，没有通话功能是非常，非常稍快;毕竟CPU具有存储寄存器的状态，更新调用堆栈，调用该方法，然后再次更新调用堆栈和恢复寄存器。这需要的不仅仅是跟随直线路径时更大一些量。然而，有一些参与这一并发症。
首先，一旦你过去一定规模是不维护;我们的大脑根本就没有这样的。我们有这样的功能，我们可以采取真正的大任务，把它们分解成更小的任务。如果我们真正想要的额外性能，我们可以选择内联函数，其交易少函数调用（快）编译的代码大小（大）。一些编译器自动执行此操作时，它是有道理的，尤其是如果我们杀青的优化级别（长编译时间，更快的执行时间）。
其次，许多语言中的编译代码条款强加最大功能尺寸。虽然现代系统应该不会有这个问题，这是不是很久以前，一个功能必须适应32KB或64KB内存中。一些有限的存储器装置今日（如嵌入式系统），并设计为便携式的语言，仍可能有类似的限制。要编写可移植的代码，我们应该更喜欢功能。
三，功能允许我们重用代码。这意味着更少的打字，更小的源代码的大小，且再次，可维护性。如果您发现有一些逻辑，这是复制粘贴100次的错误，你现在必须解决它的100倍。但是，如果你有这样的功能，你修复一次，所有代码受灾地区固定为一次。这是在大型项目中节省大量的时间。
第四，CPU有一个缓存。在一条直线上写一串代码可能会导致更多的高速缓存未命中，造成比不调用函数相关的获得更多的性能损失。使用功能可减少程序的大小在内存中，使之更容易适应在缓存中。这可以通过50倍或更多字面上加快程序。
没有高级开发人员会永远这样说严重。如果他们这样做了写代码，他们应该为不称职被解雇。这是一个非常新手犯的错误。功能让我们的生活更容易，并且由于现代计算机的速度不够快，调用的函数是不区分。实际上，CPU可以甚至预见一个函数调用预先，和沿该路径优化代码。
回答 11 这取决于您是否正在进行应用程序开发。由于您提到了主要方法，这听起来是这种情况。对于高级，应用程序开发，您是正确的，可读性非常重要。但是对于低水平固件开发或驱动程序开发，性能（速度，存储占用空间，内存足迹&amp;hellip;&amp;hellip;）可能更多的是驱动力。
回答 12 问：一位高级软件工程师告诉我不要使函数并在我的主要方法中拥有所有代码，因为它更快。我认为这使得代码方式太不可读，冗余和凌乱。谁是对的？
答：2019年的旧问题，
在等待谜团展开的谜团，&amp;lt; - 内部笑话。
我来啦，</description>
    </item>
    
    <item>
      <title>Linux粉丝实际上认为命令行比GUI更用户友好和直观吗？</title>
      <link>https://xiangqingw.github.io/posts/do-linux-fans-actually-believe-that-command-line-is-more-user-friendly-and-intuitive-than-gui/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:10 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/do-linux-fans-actually-believe-that-command-line-is-more-user-friendly-and-intuitive-than-gui/</guid>
      <description>Linux粉丝实际上认为命令行比GUI更用户友好和直观吗？ 回答 1 只需五分钟前，我不得不替换所有PillarID的值：从0到1中的数千个.json文件中的0到1的条目，然后在其他几千个文件中从0到2。
sed -i.bak s / \ pillarid \：0，/ \ pillarid \：2，/ g * _2.json
这两条线路还在创建原始文件的备份时执行作业。
祝你好运与GUI一起做。
命令行让您在GUI让您有效地完成其他事情时非常有效地进行一些事情。如果您知道两个都可以使用正确的工具进行作业。
回答 2 [清除下面一些评论的误解，我实际上认为命令行更加用户友好和直观，而不是我认为牛排是味道的而不是巧克力。我的回答解决了一个相当不同的点。
告诉我，你如何在GUI中进行以下操作：
列出在3个月前至10天前创建的目录的所有文件，其中包含大于1.5MB的文件，结束。
但我从不这样做，我听到你说的话。我既不是。如果我刚刚制定了它。但你可能想要做的事情并不总是与我想做的一样。关于UNIX / Linux shell的重点是您可以决定您要这样做，只是做到这一点。在一个GUI中，您将最终做出大量指向和单击，乘以您必须查看的目录和文件的数量，这可能是几十或数百个。没有生产力的时间。
然后，您突然意识到您实际上想要存档所有这些文件，而不是只列出它们，而且还要匹配的字符串是结论而不是结束。在你的GUI中，你可以再次完成所有工作。在shell中，您可以在命令行和鲍勃的叔叔上进行快速编辑。
Brian Kernighan着名，你所看到的问题是你得到的是你所看到的就是你所得到的。对于许多事情来说，GUI非常棒，我一直在使用一个。当我需要时，我也使用shell，因为它对我想做的一些事情非常方便。
Neal Stephenson让它变得更好（有点约会，但仍然值得阅读）：
回答 3 所有命令行都是用户友好的，用于电源用户想要进行高级事物，他们花了时间学习如何使用命令。
并非所有都直观。Git Cli是一个噩梦，即使你了解图理论，Git和你应该试图做的事情。
来自基本软件工程原则的直观使用：
并非所有的CLI都是如此设计的。并非所有的CLIS都是甚至设计的 - 它们只是随着时间的推移被砍在一起。
那些CLIS永远不会直观 - 你必须学习他们并学习如何避免他们的陷阱
回答 4 Linux粉丝实际上认为命令行比GUI更用户友好和直观吗？
这取决于：你想做什么？
假设我有一个名为2021-11-14-journal.txt的文件。
假设我想将TXT文件转换为PDF。
而且，我想将文本文件的MD5哈希汇集到PDF的文件名：2021-11-14-journal-blahlahblahblahblah.pdf
并假设我需要为数十积或数十万个文件做到这一点。
GUI会让这种用户友好和直观吗？
显然，它不会。你需要多长时间？！小时？天？几周？
但通过命令行，它更简单。它
Linux粉丝实际上认为命令行比GUI更用户友好和直观吗？
这取决于：你想做什么？
假设我有一个名为2021-11-14-journal.txt的文件。
假设我想将TXT文件转换为PDF。
而且，我想将文本文件的MD5哈希汇集到PDF的文件名：2021-11-14-journal-blahlahblahblahblah.pdf
并假设我需要为数十积或数十万个文件做到这一点。
GUI会让这种用户友好和直观吗？
显然，它不会。你需要多长时间？！小时？天？几周？
但通过命令行，它更简单。这几乎太容易了。整个过程可能只需要几秒钟。 （也许几分钟。这取决于。难以抽象地说。）
特别是每当您处理大量文件或Finicky更改时，计算机都非常擅长自动化那些重复的任务。这就是我们使用它们的原因！能够告诉电脑来完成你想要的东西，可以是一个非常用户友好的事情！
如果我想打开我的电子邮件？不。我可能会点击桌面上的图标。
回答 5 在20世纪80年代初的某些时候，Unix被描述为（可能是Dennis Richie）作为专业的新手漠不关心。这几乎存在。</description>
    </item>
    
    <item>
      <title>什么激励你代码？</title>
      <link>https://xiangqingw.github.io/posts/what-motivates-you-to-code/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:10 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-motivates-you-to-code/</guid>
      <description>什么激励你代码？ 回答 1 多年来，我告诉自己我不是一个编码者。
编码只是对我来说，我会说。
我在高中尝试过蟒蛇，因为我的学校没有任何编码或计算机科学课程，但我没有足够的奉献精神或纪律来学习它。
当我到达霍普金斯时，我告诉自己，我终于将学会编码，所以我注册了我的新生年度的介绍级别的蟒蛇课程。虽然，课程太快了，我最终滴下了它。
在我的时间在霍普金斯，我通过各种研究项目挑选了一些Python和Matlab技能​​。这是一个很好的开始，bu
多年来，我告诉自己我不是一个编码者。
编码只是对我来说，我会说。
我在高中尝试过蟒蛇，因为我的学校没有任何编码或计算机科学课程，但我没有足够的奉献精神或纪律来学习它。
当我到达霍普金斯时，我告诉自己，我终于将学会编码，所以我注册了我的新生年度的介绍级别的蟒蛇课程。虽然，课程太快了，我最终滴下了它。
在我的时间在霍普金斯，我通过各种研究项目挑选了一些Python和Matlab技能​​。这是一个很好的开端，但我对我的能力很少信心。
本学期，我注册了一门课程，教授Python和Matlab介绍。该课程帮助我识别我的误解和弱点，让我解决他们并以两种语言构建强大的基础。重要的是，我的信心上升了。
凭借新的信心和稳定的基础，我开始写自己的Python脚本。我对股市非常感兴趣，所以我一直在使用Python在我的投资组合中对股票进行技术分析。例如，我建立了一个程序，每天早上自动通过电子邮件发送给我和朋友的文本文件，为我们个人投资组合中的股票进行更新分析。
从对我和其他人有用的东西建立一些东西，让我激励我代码。
我喜欢建筑的过程。我喜欢人们在我建立的内容中使用的时候。
我觉得我可以用我的代码来制作或做任何事情，这是赋权的。如果我不知道具体步骤，我的朋友们在stackoverflow上总是在那里帮助我;）
我很高兴我没有放弃编码。它是我所拥有的最愉快的经历之一。
-kh.
回答 2 感谢您的A2A，克里斯。对于任何16岁的人来说，在他们想做的事情中有戏剧性的波动是正常的。越来越陷入决定时间，并且你想制定一个将实现你的生命选择.im 45，而且我从来没有后悔选择电脑编程，我在17或18岁时让我的职业生涯选择。我有点认为它是我唯一适合的。在我的血液中。一个专业的程序员，我的个人动机很少永远进入了分配的项目。我得到的工作是营销人员和销售人员能够找到的工作，而不是不同于我是汽车机械师，或者会计师或律师。这听起来很无聊，但我的动力快速和能力，拥有高质量，并为我的公司和客户提供服务，让我为我的工作感到自豪。所以我猜我在工作中的主要动机是骄傲的工艺。我可能有一个或每年的两个个人动机的编程项目，以及在我自己的时间内完成的渴望自动化我的爱好方面的愿望。我每隔两三或三年学习一个新的编程语言。我认为如果我试图激励自己只是在没有被我个人兴趣之一推动的情况下，我是像你一样使用。如果你想进入它，所选择的语言是高度的市场。我注意到你现在使用的所有语言都是必不可少的，你可能会发现一个有趣的模式转变，足以抽出你的动力.any lisp包括clojure，scala，f＃，Ocaml，Haskell是一些良好的功能编程选项。除了你的声音厌倦除了java之外，没有java没有错，你不应该让自己只是咬人。军方作为职业生涯，因为我从来没有想到任何人死亡，无论是偶然还是由设计都是死亡的。我也因同样的原因而被认为是医生，所以这不是因为对士兵的不尊重而不受欢迎或者是曾经说过的，当我看到来自国际空间站的加沙的战争的图像时，我必须承认我对科学上先进的并置了，作为一种从太空观看世界的物种，以及仍然具有毫无意义的宗教部落冲突，好像它是1000亿。但是，这也是哪些维和人员来预防和他们的士兵。当你选择一个职业生涯时，以免对任何人负责任何死亡，就像我一样，你也不会负责拯救某人的生活，就像医生或士兵一样。（它发生在我身上，你可能永远不会在一段时间内生活在士兵被部署为你这个时代的维和人员。这个想法来自加拿大外交官，名叫莱斯特B. Pearson。谁赢得了诺贝尔和平奖的这个想法，后来，在20世纪60年代，是加拿大总理。我认为最后一次维持者人员在大量使用中，在1990年代的巴尔干战争系列中。我可能是错的，不是专家在这些事情上并依赖于雾记忆。使用它们;在美国和加拿大，考虑到士兵冒着国家的风险，坦率地区坦率地区很糟糕。这似乎是政府在他们在战争中支持我们的军队，并在部队退休后失去所有善良的精神并且经常后创伤后的应激障碍。你对IT安全感兴趣，军队并不是那种宽阔的差距。它表现出对阻止坏人做坏事的兴趣。更有可能实际上拯救军队的生活，以及你更有可能在军队中汲取生命（或失去自己的）。这将网络编程问题留给那些做更多Web编程的人。我从来没有在我的职业生涯中这样做，尽管已经想要这样做。我缺乏对使用Web技术的项目的动力;几年前我用CGI做了一些事情，但我几乎不考虑那样的网页编程。有点像有太多的选择？IVE被认为是春天，PHP，Scala的Java，带有升降机或游戏，Groovy在Grails上，Ruby在Rails上，Ruby Django和我不能选择。
回答 3 我喜欢解决问题。我想出了一个新的想法或解决问题，然后我必须编码它。
回答 4 我的动机根据我的年龄而变化。当我在20多岁时，我被激励在计算中的艰难主题，例如操作系统内部和体系结构，数据库架构，或经常在开源项目中解剖代码。
然后在我20多岁时在几乎没有工作经历后，我了解到了没有。 1.我的动机杀手正在开发永远不会发布的软件（由于大公司政治）。这一切都去了浪费。
随着时间的推移，随着我的生活观点和优先事项的变化。我更有动力让项目尽可能多地完成/完整/效率。这听起来很俗气，但如果我的老板（es）和客户不开心，那么我不开心。
回答 5 真的不是很多&amp;hellip;&amp;hellip;
作为一名大学生，我喜欢制作东西。我对此并不擅长，但享受了在电脑上制作东西并看到它的工作。作为专业的我继续编程，但不是作为一个全吹的程序员。我积极参加测试自动化和性能测试。我很有动力，了解更多关于编码的信息，甚至为我的整个智能家庭编程（当时需要大量的编程，因为没有箱子的解决方案&amp;hellip;&amp;hellip;）。
随着时间的推移，我变得越来越逊于学习真正正确的代码。我仍然可以代码足够好，因为我想要/需要，然后我喜欢这样做。但我不是一个编码者，不想成为。我代码在我需要以及我需要代码时，我喜欢做的事情。但我真的不认为这是我的爱好。
回答 6 我觉得我觉得我学习了新事物，我开发和感知我得到了新的优势 - 我可以看到我如何看待前端开发的差异，我更接近f
能够发现和整合新方面的持续前景 - 一种恒定的进化感 - 但也是安心。
我不特别享受大社交会众。
因为我宁愿用那个时间与我垂直的人一起度过的奇异原因，它会产生它 - 或者这与谈话不能给我同样的东西，因为代码可以给我这样的不可行的来源。
每天我都觉得我学习了新的东西，我开发和感知我获得了新的优势 - 我可以看到我如何看待前端开发的差异，我更接近完全能够整合我长期以来一直想要的东西。
与一个人说话可以给你喘息，归属感 - 欢乐，幽默 - 但通常他们无法解渴渴望知识。
只有不断的探索可以。
这就是我的激励。
回答 7 微分方程激励我的代码。微分方程可用于模拟物理世界，以极高的准确性。
然而，分析地解决了微分方程并不总是可能的。我们，人类，已经开发了数值近似于对这些微分方程的解决方案的技术。微分方程的数值解决方案可能取决于您正在解决的内容以及您拥有的资源和专业知识的情况取决于余地。
几乎所有情况下的这些数值技术都可以很容易地用您喜爱的编程语言编写。让我们乘坐一个非常着名的多人主科软件，以解决物理学各种各样的问题。</description>
    </item>
    
    <item>
      <title>作为C &#43;&#43;程序员，您是否觉得如此优于其他使用更高级语言的程序员如Java？</title>
      <link>https://xiangqingw.github.io/posts/as-a-c-programmer-do-you-feel-so-superior-to-other-programmers-who-use-higher-level-languages-like-java/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:10 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/as-a-c-programmer-do-you-feel-so-superior-to-other-programmers-who-use-higher-level-languages-like-java/</guid>
      <description>作为C ++程序员，您是否觉得如此优于其他使用更高级语言的程序员如Java？ 回答 1 IVE编码，如实施的生产软件，在C ++和Java中销往实际客户。 IVE还实现了使用C，C＃，VB，JavaScript，Typescript甚至汇编语言的生产系统。鉴于所有这些经验，我可以诚实地说，最好的软件工程师是那些使用最好的工作工具的软件工程师。在某些情况下，可以是C / C ++，在其他java中，并且在其他一些情况下，它既不是这些语言。
事实上，我争辩说，C ++和Java都变得过时，并通过更现代和强大/灵活/富有表现力的语言来取代。除非维护大规模的现有代码库，否则我可能更喜欢Scala或Kotlin over Java（两者都编译JVM），并在C ++上生锈。
回答 2 我编码在C.我认为C ++编码器是疑问&amp;hellip;&amp;hellip;然后我遇到了一个编码在汇编的人。虽然我不被允许在他面前抬起眼睛，但不得不留下他的办公室后退，我很荣幸每天早上喝咖啡。
//讽刺 - 你真的想到这样的狗屎吗？
回答 3 我主要使用C ++，C和装配来获取我的问题域。然后是我与机器代码的各种交互。我有
我感觉优于Java程序员吗？ Puh-Leeeze！
我们有不同的工作。我在SoC架构师和裸机固件开发之间转移。 Java不适合这里。 Java适合的区域，我对此不太感兴趣。
当我开发LTO闪存时！，我需要一个在Windows和Macintosh上运行的漂亮用户界面环境。我开发了汇编语言，C和C ++的混合中的硬件，固件和低级工具。
一个朋友为我开发了GUI。它真的很棒，超越任何我会管理的东西。没有前端，我不会有一个产品，ID有一个Creddy Tech Demo。
那个GUI？它是javas表弟语言，c＃。
我是否对Java作为一种语言批评？当然。但我可以对我使用的每种语言说。是的，甚至是机器语言。
语言是工具。
有人施加一个大型建筑可能不需要8种不同的小锤子，而是一个珠宝商可能。
珠宝商可能不需要大量的砌体钻头。
最终，遵循自然先生的建议：
回答 4 我花了大约五年，几乎完全在C ++上工作。然后我了解到，Lisp等较高级别的语言更接近计算机科学。更近，我的意思是，如果您试图解决计算机科学中的问题，您仍然可以看到您正在尝试通过代码解决的问题。 C ++代码更靠近机器，往往掩盖问题。你看看代码，问我们在这里尝试在此处完成什么？这并没有借给一种优越感的感觉。
这一点的另一方面是C ++代码需要大量的评论来了解代码存在的原因。那里有一个教训。评论更多为什么他们是什么。裸的代码真的是什么。但问题是为什么这段代码首先存在？ C ++代码倾向于提高很多原因的问题。我目前的语言偏好是Wolfram语言。几乎没有原因的问题，就像说你可以这样做，因为一些定理建立了一个等价，允许你替代更有用的表达式，但在大多数情况下，从Wolfram中的代码本身非常明显。
现在，如果我试图解决机器级问题，就像一个设备驱动程序一样，会有一个大问题：为什么我在Wolfram中这样做？，它不会在C ++中提出，因为它自然是更近的机器。
至于Java，它坐在中间的某处。我几乎没有十多年的Java工作。我在Sun的Java专家组上。所以这是我生命中的重要组成部分。但与Wolfram或Lisp，甚至Scala相比，它不是一种高级语言。与C甚至C ++相比，它不是一个低级语言。有一个相当窄的乐队，一个人不会问为什么看到Java代码。并且有严重的整体问题，原因为什么Java支持尾呼叫优化???我已经听到了几年和年份的答案（它会改变关心的堆栈轨迹）。对于Java的大多数问题是15年前的java，Scala是今天的优越选择（BTW，它确实有尾呼叫优化）。
而且，当你知道你以一种非常适合你正在解决问题的语言工作时，优势的感觉就会出现。一切都是有点契，舞蹈工作。
回答 5 我每天使用C ++ 7年。然后从下一个20开始使用Java。
我从未感受到自己优越。
回答 6 我会从Java程序员的角度回答。由于我的经验，在我的经验中，过度流出的自负和大规模的优越感几乎总是来自甚至更高级别的语言人群。我正在说scala，haskell，python。几乎所有最糟糕的互动都来自这些社区。
C ++程序员非常欣赏到最大质量的东西是多么努力。他们知道事情很困难，一般都可以理解为什么你拿一些快捷方式来简化你的工作。他们知道一切都是一个权衡，而且不要特别严厉地判断你所做的具体选择。
&amp;hellip;或许我刚刚与非常好的和经验丰富的C ++开发人员互动，而且Y&amp;rsquo;all的其余部分是呼吸怪物。</description>
    </item>
    
    <item>
      <title>作为软件工程师/开发人员，在拍摄脸上，你没有得到什么？</title>
      <link>https://xiangqingw.github.io/posts/as-a-software-engineer-developer-what-did-you-not-get-until-it-slapped-you-across-the-face/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:10 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/as-a-software-engineer-developer-what-did-you-not-get-until-it-slapped-you-across-the-face/</guid>
      <description>作为软件工程师/开发人员，在拍摄脸上，你没有得到什么？ 回答 1 哈哈，必须回答这个问题：能够用界面引用对象，而不仅仅是强制执行类中的实现方法。
我是一个目前为Java 8 OCA考试学习的初级Java开发人员，并不了解Java的这一非常基本的一部分，直到在书上阅读并看到这些示例。当然，我当然使用列表作为参考，并使用arraylist，但我与抽象类混淆，毕竟为您提供了几乎相同的行为。
q &amp;hellip;
回答 2 它也永远不会是C＃/ Unity中的问题，因为它继承了来自E的一些好的设计原则
为什么自动化测试/软件质量很重要。
事实上，我没有意识到这一点直到大约2年进入一个我自己写作/维护的C ++项目，到了这一点，我一直是一名全日制软件工程师3年，经过4年的大学教育和1年大学之后级别，共8年经验写作软件。
看它从来没有成为学校一个明显的问题，因为项目永远不会跑得很长一段时间，学校从未正确解释了写作测试的推理。
C＃/ Unity中也从未存在过问题，因为它继承了来自发动机的一些好的设计原则，允许设计不良的项目继续取得相当稳定的进展。
当然，发展随着时间的推移而放缓，但那是正常的，只是不要碰到旧的臭味的意大利面，你最终可能会很好。
在C ++中没有那么多，在第二年的结束时，发展已经变得足够有问题，即甚至相对简单的补充，造成了几周的调试，往往会导致完全不相关的模块中的事情打破。有一些错误一次又一次地出现，以及拒绝发生在日志记录语句时拒绝发生的臭名昭着的海森布，或者随时随地。
并且没有人可能责备但是我自己，毕竟我在整个代码库中的约95％的代码中写了大约95％。
它到了我完全失去了我曾经有创造软件的快乐的观点。
即便如此，它也需要一年来弄清楚导致这一点，而且还有一年来获得如何防止这种死亡螺旋形成的体面理解（希望）。
即便如此，在那一年重新设计软件从头开始，我偶然发现了几个主要陷阱，这是一个规模的改进，我犹豫了（重写接近1500个测试是一个艰巨的任务），尽管我正在慢慢筹码通过执行较小的重写/改进构件的较小尺度的重写/改进，导致最常见/令人讨厌的问题。
回答 3 现在我不是特别擅长这个，但我的雕像
虽然需要一定的基本级别的技术能力来获得雇用和持有软件工程工作，但人们的技能是确定职业生涯轨迹的一个更大的因素。
生病了一点。组织中的良好工程师知道谁是伟大，平均值和无能的程序员。然而，管理职位中的大多数人都不完全没有想法，因此促销，提出，认可等，倾向于去那些了解如何管理其上级对其能力的看法的人。
现在我不是特别擅长这个，但我想到了一些关于我希望有人告诉我的游戏的一些基本规则，当我还是一名新工程师：
回答 4 这是几件事。这一点都不是这些都是技术问题。他们是人类和文化问题。企业政治：无论多大或多小的公司都有自己的公司政治。在我的职业生涯中，我的职业生涯最大的震惊是影响公司政治参与了决策。最好的想法并不总是获胜。行事并不总是赢得什么。鉴定法律并不决定在所有情况下如何做出决定。你也意识到这一切意识到，如果你想要有效，你将要了解和工作。你没有屁股或玩肮脏的imo，但你当然需要了解什么是激励关键决策制造者，并学习如何在上下文中沟通。我的意思是基于对观众重要的重要性，提案或计划。我们都倾向于关注并突出我们自己亲爱的问题。但这可能是错误的。这是一个简单的例子：你正在提议和arg关于安全/隐私姿势方面的一个系统高于平均水平。您觉得您应该这样做，因为它是正确的事情，有些用户将关心这一点。但是只有豆柜台或其他高级管理层听到更昂贵的实施方式，所以我们可以成为型号，他们不会绿灯额外的费用。如果你制作类似的论点，但解释了没有采取隐私/安全高路的风险，如罚款，制裁，玷污品牌的高级管理层不会看着你，因为只想花更多钱的人。他们将意识到这一决定的实际影响以及使用强大的安全/隐私姿势作为法律预防性和可款待的竞争优势。格兰特这是一项简化可能发生的最真实世界因素，但它解释了将音高调整到观众的概念。议题问题：叫我天真但是当我第一次开始这个伊斯特时35年前我很惊讶，不是每个人都有一个良好的道德指南针或者没有重视做正确的事情。我想到每个人都想做他们所说的话，并说出他们所做的事情，尊重他们的客户，并提供最好的他们可以以上的软件。在我建议向观众修改音调的地方，我的建议在这里不同。尽可能快地从故意雇用不道德的人或容忍非法或边际行为的公司。我们可能会发现自己在你的职业生涯中的某个地方在某个地方努力工作的位置。不要压力或击败自己，只要它才能解决它。这涉及离开。人们不同：人们有不同的学习方式，沟通，工作，协作。没有假设一个尺寸适合All.ever.Always确定你是谁以及如何一起实现最佳结果。如果没有假设他们将足够调整以看到差异。你将有成为更大的人。阶段阶段适当的行为：很多人都没有本能地了解您通过项目的生命周期时所需的行动如何改变。然而，任何一切都有生命周期并通过不同的阶段移动，并且需要调整您的行为例如，在一个项目的早期，代码将被自由地修改，而且经常被修改，而经常在用于在任务或故事或史诗中分配工作的方法之外，但随着您接近主要的里程碑，您只需要更加保守和坚持已分配的代码已被更改为已分配。该代码需要审核。您需要识别如何识别您如何影响测试代码覆盖范围。很明显正确？它对我来说，我发现了一个公司中工程师和其他人的百分比未能理解或锻炼这一概念。对他们来说，在整个项目中应用相同的指导方针，他们抵制了没有AUT的触摸代码霍尔大小的问题然后提交。这也涉及允许人们感到听到，尊重和包括在内。
回答 5 事件驱动的编程。
然后，我一直认为等待状态改变的事情总是通过投票发生。
所以，让我们说，你有2个进程A和B，它异步地做不同的东西。
然后在某些时候，B已经完成了任务，但需要等到完成自己的任务，这可能发生，呃&amp;hellip;&amp;hellip;稍后。
我的解决方案是什么？简单，在B完成任务之后，它将继续检查一个完整的状态，然后工作完成自己的任务。所以，可能是这样的：</description>
    </item>
    
    <item>
      <title>作为软件工程师或程序员，在CodeBase中看到的最愚蠢的代码行是什么？</title>
      <link>https://xiangqingw.github.io/posts/as-a-software-engineer-or-programmer-whats-the-dumbest-line-of-code-youve-seen-in-a-codebase/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:10 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/as-a-software-engineer-or-programmer-whats-the-dumbest-line-of-code-youve-seen-in-a-codebase/</guid>
      <description>作为软件工程师或程序员，在CodeBase中看到的最愚蠢的代码行是什么？ 回答 1 两个好的例子来到了我的脑海里。
1）首先是正式语言表达的存在危机：</description>
    </item>
    
    <item>
      <title>在有越野车释放时，大公司消防软件开发人员？</title>
      <link>https://xiangqingw.github.io/posts/do-big-companies-fire-software-developers-when-there-is-a-buggy-release/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:10 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/do-big-companies-fire-software-developers-when-there-is-a-buggy-release/</guid>
      <description>在有越野车释放时，大公司消防软件开发人员？ 回答 1 是的，大公司在有越野车的发布时消防软件开发人员。但是，当存在无臭虫的版本时，或者没有释放，或者只是因为。现在，我们可以在裁员和终结之间分裂头发，但事实是开发人员昂贵。裁员的经验差异很大，在经济衰退期间明显恶化。
因为很少有人留在很长时间的任何位置，我们都不要这样做，但软件开发中的流失量非常高，并不是由人们自愿地离开的人。
我的建议是：尽你所能，如果你失去了工作，不要让它破坏你的自我意识。贵公司不关心你。公司不是人，他们没有感情。
回答 2 我从未见过它
你有：
替代方案是：
哪个选项最适合公司？除了不超过人类可能的速度的选择，你应该为自己发射吗？
如果是软件公司的典型哲学，如果是的话
我从未见过它
你有：
替代方案是：
哪个选项最适合公司？除了不超过人类可能的速度的选择，你应该为自己发射吗？
软件公司的典型哲学，如果他们不适用于作为生命支持系统的资格，总是早期失败，并且经常失败;修复下一个版本。
我并不完全同意这种哲学，但随后我在NMR（MRI）控制台软件，血液气体监视器和其他生命支持系统上，如果你发出错误，那么人们死亡，或最终得到不必要的治疗，他们也可以死。
顺便说一下，错误的一个原因是开发过程中间规范的变化。这些天我们用吸引人的单字名称称之为叫做这件事：敏捷。
回答 3 是的。当天空是蓝色的时候，这款大五家公司还有消防软件开发人员，当天空是蓝色的，当13是素质时。
回答 4 在合并到m之前，高级工程师必须通过高级工程师审查代码的原因
公司应该发射的谁？
如果您没有上述过程，那么在更高的管理层中发射最高级的人，CTO或某人，他们并不了解如何实现软件开发过程。如果您的版本有错误，只有人对该错误负责，那么您的进程已经坏了，无论您做什么都只是一个滴答时间炸弹。
有一个原因在于高级工程师必须在合并到掌握分支之前，并且通常开发人员和测试人员是单独的人，有时甚至是单独的部门。所有这些过程确保在任何重大损坏之前检测到错误的代码，并且没有人可以破坏您的产品，因为提升未被批准或由于某些个人问题。
如果您的公司丢失了错误，即使YPU跟随设置过程，那么它对您有好处。因为迟早或后来的公司将停止存在。他们在软件业务中并不严重。
回答 5 我的部门负责人曾经掀起了一个重大的软件发布 - 这失败了 - 他做了一个辉煌的后验尸，从而改变了我们做了事情的方式 - 令人惊叹的工作 - 以及明显改善我们如何做事
人们因失败而学习 - 实际上你的推动越难，你的失败越多 - 并学习
一般来说，错误的发布是流程，规划和测试的失败 - 管理他们的开发人员的糟糕工作的经理 - 未能实施强大的进程 - 是负责任的
回答 6 启动可能。他们的早期版本通常比较大的企业参与者更重要和重要。当你是一个在主要投资者演示中工作的10人之一，因为你失败了 - 你可能会被解雇。但不是因为它失败了，但因为你的公司无法筹集另一轮来支付你。
回答 7 错误释放不是，或者至少不应该是，单个开发人员的故障甚至是两三个。专用测试仪应始终对软件进行独立测试。在团队中（即不是独立的）测试人员也可能有用。
因此，如果一个严重的错误使其通过发布，任何人都可以预见到问题（罕见）或开发/测试/发布过程被破坏。在这种情况下，故障与中间管理 - 高于开发和测试的级别。不知何故，开发和测试进程尚未正确同步，因此误差仍然是差距。
回答 8 从一开始：
很多公司推动出门的东西，以便获得市场，只要代码的质量明显低软件开发人员就不会失去工作。它的假设是许多公司，他们的代码会有缺陷，并且它们将成为错误修复，并找到其产品错误的解决方法。
在正确的软件中，我们骄傲的东西之一是我们的产品将达到我们的公司名称。如果您是我们的客户，您可以放心，如果您希望能够与某人使用某些人的代码，您的信任很好。你可以相信这个关键代码不会回来咬你。如果您是客户，有些人最初认为无法判定的计划是正确的。我们告诉人们，我们昂贵，花了更多的时间来完成工作，因为我们致力于提供他们可以信任的质量结果。我们跨越绝望的人，只因为他们认为他们真的没有许多选择。当我们完成证明代码在源级别正确时，我们也做了我们可以证明对象代码也是正确的。客户可以信任我们，接受我们的劳动的结果，胆怯地运行代码&amp;mdash;&amp;ndash;并令人满意地发现他们为每一分钱支付的代码。我们会根据不具备不合情的协议做这项工作，以防止任何客户竞争对手发现我们的客户所做的一切。我们从来没有是大的时间，伙计们，很多人都认为我们正在制定被认为是不可能的，直到他们使用我们的结果。当他们使用我们的产品时，他们就会成为真正的信徒。我们是正确的软件&amp;mdash;-无虫替代（TM）。
回答 9 不。</description>
    </item>
    
    <item>
      <title>攻击时发现最令人不安的是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-is-the-most-disturbing-thing-you-found-when-hacking/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:10 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-the-most-disturbing-thing-you-found-when-hacking/</guid>
      <description>攻击时发现最令人不安的是什么？ 回答 1 我的父亲在我的第17岁生日之后不久就过了。别人，对别的？当然，我的妈妈和我的奶奶和我的财产有关，所以我的妈妈可以在她妈妈们之后通过他们“D有一些时间来悲伤和收集自己。出乎意料。出乎意料。任何典型的53岁的人可能有任何典型的53岁的人。当我开始通过我们的PC的文件时，真正的震惊。我甚至都不知道他们&amp;rsquo;D存在直到我偶然发现他们大约2周后2周完成了他们的财产。一个简单的文件隐藏在我父亲的个人文件过去税收信息中，一些他从家谱网站上收集的东西，另一件事.A桃花心。我的生命，我的父亲是一个贪婪的读者。你可能不会指望一位艰难的老退伍军人街警察是文学类型，但他每周至少读一本书 - 每周至少读一本书 - 每周至少读一本书，总是，只要我永远曾经活着，可能很久。他最喜欢的作者是斯蒂芬·王，阿加莎·克里斯蒂，我Saac Asimov，Ray Bradbury，A. Conan Doyle，以及我称之为SCI-Fi的三个首字母：HGWELLS，HPLOVECRAFT和JGBALLARD.I从读我父亲的个人图书馆中的每本书 - 我认为大约1,200人，我认为，我了解到，通过阅读他或她最喜欢的书籍来发现一个人的怪癖，欲望，梦想，兴趣，甚至恐惧。它是一种理解的一种方式，更好地了解一个人通过了最佳方式。然后回到枪手。请啊，我的父亲不喜欢作为一个警察。他总是说他从来没有真正想做的那样。在高中毕业后，他拿了鞋子职员工作，而且显然这一点Al Bundy-Esque位置并不是太令人满意，因为他在适合PF传单和女性的梳妆台的一年后接受了警察考试。他被爱告诉我们的孩子，做任何事情，但永远不会是骗子。你太聪明了。我猜测退休绘图在附近，他想要更多的生活而不是追逐一个小白球佛罗里达高尔夫球场或在花园周围打击。我看到了标题页。稿件有权：法律双方的生活。现在，我的父亲从未在大学课堂内踏上了脚。他从未坐过写作课程。我从来没有听过他表达任何成为作者的任何愿望。那个从未见过他在我所有的生命中那样写作。诚实地，我没想到这一点来自这个业余的枪手。它带走了我两个月来聚集勇气越过标题页。我是，面对我爸爸的鬼魂。他的个人生活。他的声音。他是令人恐惧的 - 真正的恐怖。当听到他的恐惧是令人恐惧的没有人知道的秘密文件。最后一个星期五晚上回家后，从我的疲惫和排出的工作到终端生病，我用寒冷的六包Heineken和我的邦德安顿下来，决心在爸爸身上沉闷无论多么糟糕或晃动，都可以填写它无聊它可能是。我不知道他在这个手稿上工作了多长时间，但它大约是350页的双链页面，在快递脚本中键入，整齐地分手和有组织。他有一个寒冷的格式化。我不得不给他那么多。所以我开始了。我读了，我读了。然后我读了一些更多。我在地下室花了大约5个小时，熄灯，在那个发光的白色屏幕前，让我的眼睛疼。我读了我的眼睛爸爸的书。这是flippin&amp;rsquo;amazing.i无法相信它的质量。一边是由专业手的致命化。用人写得如此优雅地写得如此优雅，如此庞大，具有这种关注和微妙和风格。缺乏悲伤的流行对话陈词滥调。可靠的预示着。一个爱情故事的子图，它破坏了所有预期的规范，如此整齐地绑在主剧中，就像故事就像没有它的故事一样 - 并且它可能不会。没有抨击的发音。很少有形容词。即使我没有看到即将到来的扭曲结束 - 我一直在阅读以来，从3岁时没有说h这本书是一些奇迹 - 远离它。当然，它需要触及，重新加工，以及编辑过程的好处。所有早期的草稿都是为了他来写下这样一个手稿，几乎没有学术训练只是令人惊讶。我在那些时间比我想象的那些时间里学到了我父亲的内心生命和秘密自我。超过17年甚至接近教我。
回答 2 当我在我早期的青少年时，我宁可进入安全。这是在90年代中期，互联网处于起步阶段，我们在线上网的方式是通过拨号进入shell帐户。
它看起来像这样：
从本质上讲，您可以在UNIX系统上支付一个远程账户，其中许多其他人也需要获得远程账户。您在远程计算机上有自己的文件夹和某种驱动器使用配额，您可以运行IRC，Lynx（文本模式Web浏览器）等应用程序。
我的ISP当时，这是在加利福尼亚州，显然没有特别关注安全性，而且公共密码哈希并非盐。我用字典攻击破裂了一堆他们，有时候我会围绕着其他人的账户窥探。完全非法，但没有特别强制执行。
有一天，我遇到了一个名叫Bobg的用户。这是实际的帐户名称，我仍然记得20年以上。他在他的家庭目录中看起来像一封电子邮件转储，其中包括一些奇怪的电子邮件：它看起来喜欢对即将访问泰国的对话，对女孩的一些引用，以及一些谈论他应该转账的帐户。
变得更加好奇，我开始窥探更多，并找到了一个包含数百个儿童色情图像的文件夹。
我和我的澳大利亚朋友谈过，谁建议我应该提示当局。主要困难是我不想在这个过程中被捕，因为我遇到的任何一个都不完全合法。
我有一些匿名的贝壳账户，我不是，让我们说，为没有美国而不是美国的国家支付，我的朋友给了我几个人。我复制了电子邮件转储，围绕shell帐户反弹，直到我和美国之间有五个国家，并将转储到FBI，以及Bobg的登录信息，并快速解释他们即将看到的内容。
我从未听过，但此后不久，宇会的帐户停止了所有活动，然后一年后完全消失了。
我喜欢认为我帮助雪橇走了一段时间，以及他在和谁交谈的人。
编辑：对于所有众多人告诉我，我应该去匿名或者我是一个坏人：这是20多年前，我是一个少年，我对我可能已经帮助停止的事实感到乐意掠夺者。我相信我完全从道德视角完全清楚，而且鉴于法律角度，鉴于局限性的法规。
回答 3 匿名，因为我不知道计算机犯罪的局限性。
我是动手学习SQL注射，并PWNED网站的数据库服务器销售。使用该XP_CMDShell的荣耀我能够创建一个管理帐户并翻转RDP。
跳跃跳过和跳跃稍后，我通过RDP在痛苦的缓慢连接中通过RDP浏览Web服务器/数据库服务器。本身不是非常出色的。数据库中有几百个身份和信用卡号，但我不关心那些。我没有必要/欲望/能力将它们转换为收入。真的是关于我是否能做的挑战。
不幸的是，我不是饼干罐中的第一件手。有一个加载的ftp服务器，被绑架色情加载。他妈的。我宁愿没有看到那个。
这是一种道德困境。报告将触发调查，这可以可以想象回馈给我。我知道我的opsec很紧张，但我的联邦政府对他们的工作非常擅长。
我开车到另一个州，停在一个州公路的一侧，穿着连帽衫朝下走向加油站的汽台，将其报告给联邦调查局的主要犯罪罪。然后我擦了公用电话，走回车，用肾上腺素摇晃着家。
然后我让自己忘记一切。直到今天，我从来没有谈过它，它已经多年了。我希望这是一个好兆头。
回答 4 很久以前，当第一个高速互联网开始在我的地区部署时，我从我的提供商那里得到了它。
介意你，我们正在谈论几兆，但它在我以前的56KB调制解调器上突飞猛进。
当时，没有人使用路由器。您的计算机直接连接到互联网，它有一个公共地址。你必须自己保护它。个人防火墙程序很受欢迎。
但是，正如预期的那样，许多人不会打扰。
为了娱乐，我开始在我知道的地址范围内运行扫描，以便在寻找开放端口。
真的，只是在寻找Netbios Por
很久以前，当第一个高速互联网开始在我的地区部署时，我从我的提供商那里得到了它。
介意你，我们正在谈论几兆，但它在我以前的56KB调制解调器上突飞猛进。
当时，没有人使用路由器。您的计算机直接连接到互联网，它有一个公共地址。你必须自己保护它。个人防火墙程序很受欢迎。
但是，正如预期的那样，许多人不会打扰。
为了娱乐，我开始在我知道的地址范围内运行扫描，以便在寻找开放端口。
真的，只是寻找NetBIOS港口139，这将让我在没有任何努力的情况下仔细阅读他们的目录。
每次钓鱼探险都会找到一对夫妇&amp;hellip;&amp;hellip;
所以，我会环顾四周。有时我会发现一些我想要的音乐，并将其复制到我的电脑上。看着图片，如果有的话，因为有趣的事情，我会看到一些敏感的文件并摇动我的头，以便搞砸他们的东西。
一旦我意识到我就在一台会计师计算机上。很多敏感的信息。他们有一个名为todo.xls的Excel文件。我猜他们每天都会打开它。所以，我打开它，在前面添加了一个页面，并写道，他们完全开放，脆弱，签署了友好的黑客。
我希望他们修复它。
无论如何，我永远不会弄乱或毁掉他们的数据。从来没有恶意意图。这是一个发现你可以用这项技术做的时间。
但是，一旦，我最终在一台机器上，如果不是数千个jpg文件，我可以看到数百个。现在，在不寻常的时候。数码相机并不像普遍存在。
我开始打开它们来查看图片。
我不是一个典故，色情不会让我感到困惑。但我看到的是非常令人作呕的。我不记得了确切的东西，但至少我没有看到孩子猥亵，或者我会采取不同的方法;但仍然不好。
所以，我ran删除* .jpg命令。</description>
    </item>
    
    <item>
      <title>程序员真的必须知道如何为他们的程序计算大o吗？</title>
      <link>https://xiangqingw.github.io/posts/do-programmers-really-have-to-know-how-to-calculate-the-big-o-for-their-programs/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:10 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/do-programmers-really-have-to-know-how-to-calculate-the-big-o-for-their-programs/</guid>
      <description>程序员真的必须知道如何为他们的程序计算大o吗？ 回答 1 Matt Laine的答案是完全正确的 - 软件工程师应该能够评估他们的计划的表现并相应行动，或者否则可能会发生坏事。
例如，我的一个同事曾一旦写过一种通过反复删除第一元素来处理C＃列表的算法。他没有意识到这是一个O（n）的操作，这使得总时间复杂度o（n ^ 2）。
不幸的是，它没有足够的效果来抓住测试，但它确实对生产中的一些重要客户产生了问题&amp;hellip;&amp;hellip;
回答 2 发生了什么是队列有点备份。这不是一个问题，除了检查队列中的成员资格是o（n）的问题，我们达到了队列足够长的地方，以便检查我们是否已经有SIMILA
您无需了解有关校样和类似的信息的详细信息。你只需要一个想法，事情将会失控。
这是一个例子：在生产系统中，等待处理的工作短队员。在向队列添加条目之前，完成了检查以确保该项目尚未在队列中。相当简单，对吧？
发生了什么是队列有点备份。除了检查队列中的成员资格是o（n），我们达到了一个问题，我们达到了足够长的时间，检查我们是否已经在队列中有类似的条目需要时间超过时间。系统也无法从队列中删除条目。换句话说，队列只能运行，只要它少于X条目即可，它在大部分时间和测试期间都会进行。
这是您必须了解的时间和空间复杂程度。我唯一一次听说实际上和正式使用Bigg o符号的时间是在20世纪80年代中期回到了大学时，​​他们试图将计算机科学成为实际科学。
回答 3 不，不准确地说。但暴露于概念是好的。
如果他们做任何最终有一些规模的事情，他们应该有一些相似的操作规模。如果描述这一点，符号是一种形式化的方式。如果它开始处理一些可敬的数据并学习如何避免问题，他们应该识别出荒谬的时间。例如：
回答 4 能够为整个节目产生准确的大o计算复杂性很少必要，但是在使用非琐碎的数据大小并且相当容易时，在算法中具有直觉既非常有价值。让我们来看看它。
假设我们在随机顺序中有5个随机数列表。
[23,14,76,12,99]
想象一下，我们编写一个软件功能来回答问题计算特定数量X中出现的次数，通过循环整个列表并将每个数字与x进行比较，递增计数器。该计划需要考虑的5个数字中有多少？答案是5，列表的长度。
现在，如果我们制作任意大小列表，请说n个数字，这些数字中有多少个数字需要查看？答案是n，列表的长度。这称为程序的计算复杂性。
我们将此写为O（n），每次执行函数时都意味着它会扫描n个数字，其中n是列表大小。这被称为Big-O表示法，因为我们在写它时使用一个大o。用英语，我们读到了这一点。
考虑计算复杂性有两种主要原因。
（1）在我们上面的简单示例中，如果我们的全部目标是回答关于一套数量的次数有多少次的问题，我们将要问这个问题真正大量的次数，我们可以做太多比O（n）好。
理想的哈希表是O（1），因为我们采取了一个关键，基本上直接查找值。因此，如果我们将数据存储更改为哈希表，其中每个键是数字，每个值都是它发生了多少时间，然后我们可以使用这种新的数据结构来回答我们在O（1）时间内的问题（说明作为1次）。 o（1）当n = 5时并不多得多，但是当n = 10亿时，这是速度的10亿倍。
（2）如果算法是O（n ^ 2）或更差，则在具有大n的数据集上运行它非常慢。可能无法在合理的时间内完成o（n ^ n）的算法。这个概念在很大程度上是加密学基于的。制作一个加密的Cypher，即使在最大的超级计算机上也需要100年的时间，并且可能足够安全，以保护数据长度比它更有用。 真的只有一个人需要了解一个，然后我们已经完成了。
BIG-O计算复杂性不是整个故事。故事的另一部分是每个工作单位所采取的时间。在上面的情况下，我们正在谈论使用平等运算符进行比较列表中的数量。计算机真的非常快，因此比较个别数字真的非常快，大约是微秒的顺序。
但是，如果我们的算法中的每个工作单元正在做一些更慢的东西（例如寻求旋转磁盘，写入闪存，或通过网络谈话），则每个工作单元都需要毫秒。同样，我们可以谈论某种硬件传感，相机或采集任务的算法可能需要几秒钟甚至几分钟。
这里的重要课程是，当您的工作单元更长（例如，秒）和您的n大，那么算法的大o复杂性就会变得更加重要。
就是这样。如果您了解所有这些，那么您知道计算复杂性的基础知识，您所缺少的所有内容都是常见算法计算复杂性的一系列经验和了解。
回答 5 是的，因为你必须要识别你是否曾经做过某种东西，因为几乎没有任何程序要求将容忍，除非不可能做得更好。有时甚至下限都太慢了。
这并不意味着你实际上必须在写它的规划意义上除了你的头脑中的任何地方。您有程序，您可以在代表性工作负载上运行它，您不需要计算限制时计算运行时间，当您可以在确切的情况下测量它们。在事实上，它几乎总是更好地测量运行时间而不是计算它，因为您的计算几乎与首先写入程序一样复杂。
当您拥有最严重的要求时，实时实时，您不会做任何计算。您必须以特定方式编写代码，具体的工具将确保您获得所需的性能。 （好的，你不必，但它真的非常好主意，如果你不这样做，那么它就会更加艰难）大多数东西是最糟糕的，但是，像服务器和操作系统和视频游戏一样软。只要你几乎一直生产出来的输出很快，那就好了，它足够好。很难实时是你有什么东西可以完全x毫秒来计算答案，做的事情或火车会崩溃，人们会死的，因为你可能猜到，确切的运行时间是重要的，而不是极限的近似值（AKA大o）
回答 6 因此，为什么在处理器/计算机上运行您的程序/应用程序是必要的
韩国表演初创公司，强调了对分析算法的需要。现场基本上是，打破了2个程序的领带，而它们基本上锁定在精度上的虚拟死热量。虽然该程序具有略高的精度，但在针对劣质计算机的同时略有较高的速度，但主角被声明了获胜者，以便能够提供一个系统，同时在Threadbare系统上运行时保持其一致性。
那么，为什么在几十年前在计算中有进步时，在处理器/计算机/手机上有必要在处理器/计算机/手机上运行？
CPU已经使电脑有高效。虽然单核处理器已经处于Moore Law的限制，但Muti核心和MUTI线程处理器已经更快地计算并使得可以在各种应用中无缝多任务。
GPU使得可以拥有图形和FPS（每秒帧）。 GPU已经让您在笔记本电脑上观看4K电影，并在众多游戏中找到人类反应的理论限制（抽搐射手，平台，打架游戏）。虽然GPU被销售为一个爱好者的努力，但他们通过高艺术，采矿和云计算为全世界的经济促销。
张量加工单位已彻底改变了人工智能实施的方式。 TPU使您可以在手机上具有自然语言处理的服务器缩放处理，并为每个用户提供了使用翻译功能和文本的能力，以便在您的声音方便的方便。 TPU使得可以运行计算机愿景来在您的特斯拉斯上运行，并使其可以检测其他汽车，具有无可挑剔的准确性
虽然计算的进步一直是必不可少的，并且影响了超级计算机的创建，量子计算机，虚拟和增强现实，但系统仍然设计与普通客户的普遍客户。像口袋妖怪的游戏，彻底改变了手持游戏，并带有数百万人进入一个经常被降级的生态系统（电话游戏），经常被降级到运行图形无能为力的生活SIM卡。虽然游戏仍然只有加强现实的初步实施，但它仍然努力处理全球所有客户。
抛出钱和资源问题从来都不是世界上最大的媒体特许经营的关注。虽然niantiac（由任天堂，口袋妖怪公司和谷歌支持）能够解决这个问题，但并非每个开发商都休闲在该规模上进行实验，而且大o表示法有助于开发设计的时间和空间所施加的理论限制要求解决问题。
回答 7 这是缺点，</description>
    </item>
    
    <item>
      <title>Ai可以为你做什么？</title>
      <link>https://xiangqingw.github.io/posts/what-can-ai-do-for-you/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:09 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-can-ai-do-for-you/</guid>
      <description>Ai可以为你做什么？ 回答 1 AI不是为您完成的，它是通过您和对象完成的。
例如，算法可以使用文本分析，手动工人和比较分类故事，然后为您提供各种故事。随着时间的推移，您的选择就像一个人格库存测试，他们基本上已经完成了没有您的知识或同意的MMPI。
这是今天页面上的一些头条新闻。
她对这些孩子做了什么是不可原谅的
Bodycam显示时刻警察Seargent Grabs Seflow
等等。您可以服务的故事类型可以分类和他们的兴趣
AI不是为您完成的，它是通过您和对象完成的。
例如，算法可以使用文本分析，手动工人和比较分类故事，然后为您提供各种故事。随着时间的推移，您的选择就像一个人格库存测试，他们基本上已经完成了没有您的知识或同意的MMPI。
这是今天页面上的一些头条新闻。
她对这些孩子做了什么是不可原谅的
Bodycam显示时刻警察Seargent Grabs Seflow
等等，您可以服务的故事类型可以分为类别，并且在收集并分类某人几个月甚至几年的情况下，他们的兴趣超过了大多数人。
例如，他们读了101个故事，说特朗普吮吸和一个有利于特朗普的故事。 （假设有一个那种东西。
他们可以与您的杂货储蓄卡相匹配，（这告诉他们您购买哪些产品），如果您曾签约过预付信用卡，那么更多的是因为这些的精致印刷品即将到来允许您的隐私。
AI不是你的朋友，而不是它是如何被使用的。
回答 2 AI是一种机器展示人类的能力，如推理，学习，规划和创造力。
AI使技术系统能够察觉到他们的环境，处理他们所感知，解决问题并采取行动，以实现特定目标。计算机接收数据 - 已通过其自己的传感器（如摄像机）进行准备或收集 - 处理它并响应。
AI系统能够通过分析先前行动的影响和自主工作的效果来将其行为适应一定程度。
为什么ai重要？
一些AI Technolog
AI是一种机器展示人类的能力，如推理，学习，规划和创造力。
AI使技术系统能够察觉到他们的环境，处理他们所感知，解决问题并采取行动，以实现特定目标。计算机接收数据 - 已通过其自己的传感器（如摄像机）进行准备或收集 - 处理它并响应。
AI系统能够通过分析先前行动的影响和自主工作的效果来将其行为适应一定程度。
为什么ai重要？
一些AI技术已经存在超过50年，但计算能力的进步，巨大数量的数据和新算法的可用性导致了近年来的主要AI突破。
人工智能被视为社会数字转型的核心，它已成为欧盟的优先事项。
预计未来的申请将带来巨大的变化，但AI已经存在于日常生活中。
回答 3 让我给你一个免费的AI如何工作的代码榜样以及如何与自己播放！首先，了解AI可能是很多东西很重要。然而，尽管如此，人们可能会指的是更先进的ai等神经网络。据说是重要的，因为内心网络可以是很多东西，这里提供的网络只是一个简单的训练有素的网络，可以让你一个想法是如何工作的.below你将看到从Excel试图预测28x28网格中的手写数字的图片。所有单元格变成0到1之间的范围，表示数字的灰度。您认为这是96％的信件，这个数字是一个8 .CO如何让Excel猜测这个号码是什么？可能有几种方法..您使用= SUM（）函数来获取所有单元格的总和，并告诉它它是8的概率越高更多像素是着色的，因为8通常覆盖很多像素..你会使用梳子进入= if（）函数，要告诉它，如果某些区域包含值，我们将猜测x number.Maybe您对此玩耍，获得和准确性相当高（随机猜测为10％）。但是，始终如一地获得高于90％的准确性需要高级方法 - 其中一个可以是神经网络。如果您已经熟悉神经网络，则可能在之前（NB：以下示例在隐藏层中使用n = 30） [1]：
[1] 我们所看到的是，它只是一些初始化的参数，并且在末尾提供了基于给定的输入的输出。这正是我们的Excel文件所做的！Excel文件包含3张：&amp;lsquo;Model&amp;rsquo;，&amp;lsquo;参数&amp;rsquo;， &amp;lsquo;数字&amp;rsquo;.Let的看法&amp;rsquo;参数&#39;。Wee Wee Pee是权重的矩阵（范围从重量_1_1到重量_1_30），其尺寸为28x28.so用于的所有这些数字是什么？它用于我们在单元格中的公式如果我们转向我们的神经网络之前的例证，我们看到每个输入都有一个重量到隐藏的层中的新神经元。所以这基本上是在这里发生的事情！位于细胞中的第一个隐藏的神经元AD2简单地具有28x28输入像素乘以权重矩阵中的每个权重，然后添加“偏置”（偏置在参数表中进一步偏置）。然后将其挤压为SIGMOID函数。所以让我们快速查看Cell AD2中的公式：
z =x⋅w+ bz =x⋅w+ b
AD2 = 11 + E-ZAD2 = 11 + E-Z.</description>
    </item>
    
    <item>
      <title>为什么企业更喜欢Python为项目的Web开发？</title>
      <link>https://xiangqingw.github.io/posts/why-should-businesses-prefer-python-for-their-web-development-for-projects/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:09 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-should-businesses-prefer-python-for-their-web-development-for-projects/</guid>
      <description>为什么企业更喜欢Python为项目的Web开发？ 回答 1 企业不需要浪费时间聚焦，用于建立其产品和网站的语言 - 将此留给专门编写代码的程序员。
对于网站，应用程序或在线服务，业务确实需要尽早从客户开始反馈，最好首先使用小型可信客户组 - 然后继续基于此反馈优化其产品。
任何业务也需要确保其产品可访问，可用且易于导航 - 再次，只要它具有足够的程序员，以及一个很好的社区，编程语​​言就是无关紧要的。
要求的非编程管理人员 - 例如 - React开发人员实际上需要前端JavaScript开发人员，并且对于Python开发人员阅读有经验的程序员。除非您在特定框架或图书馆中编写的遗留系统。将代码留给编码器和管理到经理！
回答 2 他们不应该，除非：
Python是一个糟糕的选择完整的严肃的网络应用程序，其他人已经陷入了陷阱，不要重复他们的错误。对于系统的灯光部分，实际零件是用更有能力的实现编写的，就像YouTube所做的那样。
但是，如果您坚持，请随时证明并加入上面提到的那些。
回答 3 这真的依赖于他们正在建造的应用类型。Python是一种像其他任何其他人一样的语言，并且有一个越来越多的窗口，而不是另一个，但选择适用于您正在建设的应用程序的东西。Python非常多样化，在编程中的大量区域工作。也很容易学习和发展。
回答 4 商业关注成本和上市时间，所以有两个优惠他们将选择更便宜的交付，这更可能是基于Java的Python，这也是为什么Python在初创公司中非常流行。
回答 5 真正有趣的问题，并在Dropbox的工程总监答案应该真的被认为有点明确。
话虽如此，让我探索问题一点点，因为它进入了超级尺度应用程序的核心。
超级应用程序是为数百万用户提供服务的应用程序。
要问的问题是：峰值计算周期的计算周期方面的单个用户成本是多少？
和继承人的不正当答：不是很多。事实上，如果你做数学，它可能会出于分数的便士。在Zynga，我们在2011年和D做了数学
真正有趣的问题，并在Dropbox的工程总监答案应该真的被认为有点明确。
话虽如此，让我探索问题一点点，因为它进入了超级尺度应用程序的核心。
超级应用程序是为数百万用户提供服务的应用程序。
要问的问题是：峰值计算周期的计算周期方面的单个用户成本是多少？
和继承人的不正当答：不是很多。事实上，如果你做数学，它可能会出于分数的便士。在Zynga，我们在2011年做了数学，发现每用户成本小于0.1美分。如果另一个供应商分享他们的数据，我会感到惊讶和高兴，但我怀疑任何人都会。
令人惊讶的结果。
这意味着什么？
这意味着单个用户的单个线程的CPU成本很小;费用仅在规模上。如果他们只在规模上，那么问题就会成为如何支付规模的？
最佳和最乐观的答案是最终用户将足够支付以支付成本。我假设Dropbox已经解决了这个问题:-)
事实证明，少数用户必须支付少量以支付基础设施的成本。
如果是这种情况，那么Python的性能成本只是增加必须支付的用户数量以满足基础设施的成本。如果必须支付休息的用户甚至从纯基础设施的角度来看，那么你已经有足够了，那么这不是一个有趣的优化。
让我们做一些算术，以使最后一段更清楚：
cost_per_user = $ 0.001total_users = 1000infra_cost = $ 1
单个用户必须支付多少费用以满足Infra_costs？ 1美元
因此，只要一个人支付1美元，那么你就不要在纯粹的成本角度来看python缓慢。您有足够的现金运行基础架构。
现在，显然这是一个简单的例子，它假设货币化模型非常差。像Dropbox这样的公司可能拥有超过0.1％的用户支付存储，因此他们产生的收入远远超过基础设施的成本。
这让我带来了余量。事实证明，由于它们影响您的业务模式，因此仅费用。假设Dropbox是一个经营良好的业务 - 感觉合理:-) - 我预计与销售，营销和工程相比，他们的基础设施的成本是微小的。而你制作基础设施的更便宜，您可以花费更多的钱在其他活动中。
这是其中一个潮流的情况。
让我们做一些算术来制作我的观点
假设总收入= $ 100工程成本= $ 30.</description>
    </item>
    
    <item>
      <title>如何在Python列表中打印最大值？</title>
      <link>https://xiangqingw.github.io/posts/how-do-you-print-the-max-value-in-a-list-in-python/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:09 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-you-print-the-max-value-in-a-list-in-python/</guid>
      <description>如何在Python列表中打印最大值？ 回答 1 使用max（）函数
例子</description>
    </item>
    
    <item>
      <title>如何将表格中的按钮收集输入，并将我链接到另一个HTML页面，用户输入呈现在UI上？</title>
      <link>https://xiangqingw.github.io/posts/how-can-i-make-a-button-in-a-form-both-collect-input-and-also-link-me-to-another-html-page-with-the-user-input-rendered-on-the-ui/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:09 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-can-i-make-a-button-in-a-form-both-collect-input-and-also-link-me-to-another-html-page-with-the-user-input-rendered-on-the-ui/</guid>
      <description>如何将表格中的按钮收集输入，并将我链接到另一个HTML页面，用户输入呈现在UI上？ 回答 1 嗯，理想情况下，提交的表格将带您到一个页面，该页面使用您可以在表单上使用的操作值来显示此用户输入。</description>
    </item>
    
    <item>
      <title>如果Java是这样一种平庸的编程语言，为什么谷歌完全重写了C / C &#43;&#43;中的所有Android，使其更快？</title>
      <link>https://xiangqingw.github.io/posts/if-java-is-such-a-mediocre-programming-language-why-doesnt-google-completely-rewrite-all-android-in-c-c-to-make-it-much-faster/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:09 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/if-java-is-such-a-mediocre-programming-language-why-doesnt-google-completely-rewrite-all-android-in-c-c-to-make-it-much-faster/</guid>
      <description>如果Java是这样一种平庸的编程语言，为什么谷歌完全重写了C / C ++中的所有Android，使其更快？ 回答 1 这是一个很好的拇指，用于表单的所有问题，如果那么为什么不只是：答案是您的前提是错误的。
JVM比Native C ++慢得多（我认为1.5×是典型的），但这种情况下的性能可以在便携性上提高了一个主要的提升。随着vladislav zorov已经提到，Android在包括土豆的所有内容上运行。为每个架构编写应用程序将超出大多数开发人员的功能。 JVM¹从中隔离您。您只使用一个虚拟架构，将其映射到实际的底层硬件的痛苦留给JVM¹Devs来处理。
此外，对于您使用的95％的应用程序，性能根本没有意义。例如，Quora²应用程序非常完全I / O绑定。它将在C ++中写入，服务器响应不会越快地到您的手机，也不会更快地打字。
¹ - jesse pollard正确指出，Android技术上不使用JVM，它运行在Android运行时（ART），在某些重要方面存在不同，最后，它将Java字节码到Native ELF可执行文件中。
² - 遵守一些评论者，谁用Quora发出问题是一个特别非常令人难以置信的写作的应用程序（虽然它完全无关紧要），这里有二十多个应用程序，也不会在最轻微的中受益，以便在C ++中重写。他们的表现受I / O的约束：
Instagram，Facebook，WhatsApp，Messengergmail，Google搜索，谷歌翻译，Google Docstwitter，WebToon，9Gag，亚马逊Shoppingduolingo，Audible，Booking.com，Viberplugshare，Waze，Google地图，Sygic导航
答案绝对没有，但我希望你们都快乐。
回答 2 很少有误区，我会解决它们：
1.注意所有Android操作系统都是用Java编写的
您还记得Windows Phone是否有很多在C＃中写入的组件和应用程序，比您今天可以找到的最便宜的Android，它是一个不可行的电话操作系统？有人会说： DirectX，Windows NT内核和许多组件都将写入C中，因此只需要一层薄层来快速制作应用程序。相似，在Android中的C ++（或C）编写了大量逻辑，也许它们是作为性能的大多数关键零件是关注：驱动程序（如视频驱动程序），许多库（Skia绘图库也在C ++中写入），依此类推，假设80％的应用程序大多数显示简单数据，即使Java将显示简单数据在Android上缓慢，它不会影响最终的用户性能
今天最多的应用程序不是表现束缚
这可能听起来很傻，但是Android用32位约0.5 GHz（或500 MHz）的手机发射，一切都慢（包括java实施，这是一个翻译），它们是可用的手机。我不能说我会喜欢现在与他们一起工作，但在Java的时候，java正在运行，只有在解释器下运行，所有工作的事情（如地图，电话，议程，日历，天气）完美无瑕.3.java没有解释，如果不是很快，那就很快就会很快与今天的C ++相比，我们拥有完全编译的Java（或Dalvik）字节码到本机实现，归功于ART.在Dalvik的字节码内完成了在您的设备中删除之前完成的程序优化。此级别（未在C ++编译器上设置命名的LTO - 链路时间优化，除了您特别做。这意味着在背后发生一些虚拟化和内联，无法使用C ++代码的框中出现。这是尤其是虚拟CAL l /调度往往避免。如果您在c ++中拥有非常oop应用程序，您必须使用相当多的技巧来实现相同的优化
4.Java是比C ++更流行的语言，也是一个更简单和更安全的语言
这个因素也是关键的：您可以使用java为您的Android应用程序以及您的后端服务在线.Imagine用C ++执行此操作。Java不仅仅是处理一个按钮后面处理逻辑的语言，但很可能您将希望从Apis.imagine获取一些外部数据也是现实生活：您有一个崩溃。你知道，默认情况下，C ++没有堆栈跟踪的信息在异常中？因为Java做了它。它有帮助很多，你不这么认为吗？或者你只写异常的免费代码？如果你这样做，你如何让所有软件都有异常？5.java比c ++慢得多，但有时是（很多）fastereven java仇恨通常同意Java是快速的，如果不是最快的语言，则可以代码某种类型的应用程序.LEALLLY，尝试一个非琐碎的基准：如果它有一个序列，请尝试检查一些大DNA数据集，并将其与C ++实现进行比较。您可能会看到Java可以赢得胜利。有些人测试真实生活DNA序列处理，发现Java是最快的，但使用大多数内存。我确实测试了自己的Java声明，我发现Java未优化，并且代码至少可以更快地制作2倍，并且使用少于5倍的内存。所以，我提取了图片以简化查看：Java可以在少于7分钟的大型数据集中处理：
而且我对Java算法的改进确实带来了以下数字：
请注意，我使用了一个较小的数据集，但原理仍然存在：Java可以从2分钟（原始，意味着在第一图中的中间列中的原始列）优化到少于半分钟。但是Java更快在所有其他指标中：开发速度更快，找到一个错误（如内存泄漏）更快，重建更快，更快，执行一些企业准备模式的代码等依赖性注入速度更快.6.java是一个平台，当C ++没有，你在C ++中访问一个文件吗？使用可能。在下载的东西有什么样的东西？你是否使用卷曲？您如何为当今的手机和所有后代部署如何？你会静态链接卷曲吗？为什么不更好地使用拥有所有内容的Java。如果要启动一个简单的Web服务器，则为什么？
回答 3 问题是应用程序，而不是那么多的Android本身（这肯定是由C ++编写的，我怀疑他们使用Java进行任何性能关键部分）。由于Android设备附带各种CPU，因此用C或C ++的语言编写应用程序意味着每个开发人员都需要单独编译Android运行的可能CPU架构的版本，并确保其代码没有未定义行为，是便携式和东西，这是很多工作。
也就是说，我认为您可以在C ++中编写模块，并通过JNI将它们链接到Android应用程序中。但是，你有上面列出的所有问题。</description>
    </item>
    
    <item>
      <title>康宁官员订购正确的标准舵。标准数量是多少？</title>
      <link>https://xiangqingw.github.io/posts/the-conning-officer-orders-right-standard-rudder-how-many-degrees-is-standard/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:09 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/the-conning-officer-orders-right-standard-rudder-how-many-degrees-is-standard/</guid>
      <description>康宁官员订购正确的标准舵。标准数量是多少？ 回答 1 标准舵是将船舶转向其标准战术直径所需的舵角。这种角度因船型而异。舵手和绑定人员会知道角度是什么以及所得直径是什么。
回答 2 &amp;lt;右&amp;gt;或&amp;lt;左&amp;gt;标准舵：不同的船舶（通常为15°舵）而异。它是指定数量的舵角，导致船舶在规定的距离内转动称为标准战术直径。您必须了解您的船上的标准舵。
回答 3 我在驱逐舰（DD827）和载体（CV62）标准舵上不同。我相信它是基于个别船的尺寸和转弯半径。
回答 4 感谢A2A.Surabhi Surendra，一个年轻的IAS官员的妻子，已经给出了这个问题的美丽和诚实的答案。苏里亚Kulshreshtha，Kunal Mehra，et et的其他一些好的答案。我想到了我的一些灰色细胞进一步详细阐述并补充所有这些答案。在IAS的漫长岁月中，我居住在第16宫，我的执行记录表显示，我在我的第28次任务。该职位包括现场分配，国家的职位秘书处和印度政府，每个都有不同的工作，津贴和设施。包括有效的性质和可用的自然，包括在处理的任务上取决于三类：
Surabhi Surnedra的答案广泛地涵盖了现场分配。对于真诚和忠诚的官员，实地作业可能非常苛刻。日子通常在晚上/晚上开始清晨和结束。DM，我的工作时间通常在上午9点开始，办公时间主要是在满足公众，处理官方会议，法院工作，等待我可以遵循我的日常生活的日子，我会在晚上休息约2个小时，参观健身房，有一段时间家庭和早期晚餐。小型工作通常只能在晚上8点起到晚上8点，并且可以高达11 pm.tourings，em.puring夏天，将于早晨开始。工作时间表延长了16-18 hours.I put in a max of about 36 hours of continuous work during a crisis situation.Many of my colleagues might have put in even more.Till about 15 years back, when the polling in elections was through ballot papers, counting of votes usually继续24-48侯卢比和所有工作人员（是的，不仅DM / IAS官员）涉及计数，一旦进入计数大厅，就可以在落后才会离开。国家秘书处/董事会的职位通常不是那种挑战，也不是设施如此之好。工作的生态取决于部门，也涉及该部门的工作分配。逃号对各州的工作变化很大。通常，与DM / DM的房屋SP / DFO和其他字段职业函数GET.Telephone账单通常只会报销一定限制;没有报销电费;房屋通常不提供。在罗契秘书处发布，我和许多其他官员在租赁住宿中留在租赁住宿，许多人支付高于我们的HRA权利。印度政府的工作通常比国家秘书处更苛刻但少于现场分配。中央部门提供了更广泛的帆布和处理国家和国际问题的曝光。对于IAS的年轻同事，我的强烈建议将成为所有三种作业的组合。在印度，与国家首都相比，房屋更加谦虚，如果你在同一级别的资历比较。苏里亚·库尔希尔斯的照片是新的Moti Bagh殖民地，现在只有25次+多年的服务可能期望在那里进行分配。电动向量报销限于约2200卢比（包括固定电话，移动和宽带），具体取决于您的等级;没有报销电费;没有家具;除了私人秘书对部长的职位外，通常没有车辆，如果有人决定在董事级别或以下董事级别，即，在IAS的前17-18岁期间，他需要安排自己的运输。这就是我所做的。2005年，经过13年的服务，我申请了中央代表团，并被张贴在辩护书中。购买一辆新车的人士将更多的时间，我借了我岳父的车，一个Maruti 800 DX，并在我接触到的一初天，在朋友家送到德里的德里，在我接触到..我在2005年6月27日凌晨9点登陆凌晨9点航班。我直奔我朋友的房子，拿起车，把它带到了邦达的国家，这是我接下来的几天的临时庇护所，梳理到南块。我驾驶葡萄干山但没有找一个停车的地方。</description>
    </item>
    
    <item>
      <title>软件工程师/开发人员惹恼了高级工程师/开发人员？</title>
      <link>https://xiangqingw.github.io/posts/what-kinds-of-software-engineers-developers-annoys-a-senior-engineer-developer/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:09 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-kinds-of-software-engineers-developers-annoys-a-senior-engineer-developer/</guid>
      <description>软件工程师/开发人员惹恼了高级工程师/开发人员？ 回答 1 整体非常好的问题和非常好的答案。
有点独特的体验，我面临几个月内。
软件开发人员和工程师是非常有影响力的。他是来自印度的同一个国家，来自我的高级老板。随时我曾经为他提供过反馈嘿，它可以以更好的方式完成 - 我曾经从我的高级人员获得一些责骂电子邮件。我做了这个设计，这个软件开发人员/工程师确实在整个设计中询问了大约50多个问题。在不到一周的情况下，我的压力很大，因为项目安装已经在没有任何估计的情况下已经承诺。我曾经为他提供了所有的解释。如果他会试图成为争论 - 我会问他实施的替代方案&amp;hellip;&amp;hellip;相信我在那之后没有任何用过。他会说它会起作用，但我没有尝试过&amp;hellip;&amp;hellip;最后，我把他带出去吃午饭了，告诉他，我们有一个紧张的截止日期 - 请完成发展，否则每个人都会面临后果。我也介入开发的关键模块，他曾经陷入困境。我有3个其他模块在未来2周内完成设计。
这个软件开发人员/工程师如此卑鄙，他在我的回到我的上级时，我要求他在每一系列中写下评论，即使我发表了至少在课程级别的评论的编码指南，也是如此功能级别。由于这个项目涉及与4个其他团队的整合 - 他意识到截止日期的那一刻 - 他开始下降编码。以某种方式将项目截止日期推到另外3周。我开发了一些有关大部分问题和问题的模块。在设计中进行了一些变化，而这次则而不是说服他 - 我自己编码了这些模块。
与这些软件工程师/开发人员一起工作没有乐于乐于乐于乐于乐于乐于乐于涉及政治的软件工程师/开发者，因为他们知道人们而不是整体知识。
回答 2 有很多非常伟大的答案，我觉得大多数情况都掩饰了。
因此，我只需分享个人经验，而不是直接回答问题。
当我只是学习基础知识的JR开发时，我有（MIS）的财富是一个非常有能力，知识和迂腐的工程师团队。他们有高标准，因为技术领先的码头非常肛门。他将基于空格，变量名称甚至我们代码评论的内容/语法拒绝提交。
高级领导人认为我们的铅可以走在水面上，因为没有人可以回忆在他的手表上滚动一个臭虫。在发布之前，他会亲自倾注每一行代码，并将其发送回报无数次。
所以在这里，我是一支高水平，熟练和沮丧的工程师的JR开发者，像一个强壮的完美主义者一样挤压了每个人在显微镜下工作的痴迷者。甚至在第一个拉出请求中传递了一个简单的提交时，我诚实不记得一次。
在我的职业生涯中只有12个月，现在是我的世界。
不用说，我没有机会在这种环境中建立很多信心。我能够持续一整整一年，但我最终放手了。它只是觉得我无法做到任何事情，从来没有任何任何支持或津贴的缺乏。对我的期望与团队中的任何人都没有什么不同。而团队中的其他人都太担心了自己的充足性，以便打扰指导或帮助我。
我没有以笑话的方式取笑。我只是用眼花或讽刺的刺戳解雇：哎呀，他再次做到了，或者你现在在打破什么？从队友那里听到的是不常见的事情。当我有一个即将到来的代码审查时，它几乎感觉到了射击队的日期。有时我的手实际上会在我拿着鼠标时颤抖。
无论如何友好或流利的工程师，当他们被压迫或严厉地判断，他们会圈出他们的社交货车，专注于他们的工作，几乎没有考虑他们的同事的需求。他们还将以同样的方式对待他们的小辈。
当我离开那个地方并降落我的下一份工作时，我真的是一个非常坚实的开发人员。我带来了很多艰难，高水平的技能和习惯以及细致的细节和一个非常多样化的工具箱技巧。像写作编译器优化提示/代码中的陈述的东西似乎对我来说相当普通，但我真的很惊讶地找到我现在工作的高级伙计们，甚至听说过这一点。
我的新任务不到一个月，我们的SR.Devs正在向我带来帮助。我的代码审查现在就像午餐者 - 学习Devs可以坐在哪里，了解我使用的语言或框架的一些新方面，或者在优化上提取一些提示或技巧。对我来说，从一个极端到另一个极端，这是一个如此奇怪的过渡，我不知道如何处理它。
当我成了导师时，我发誓永远不要让任何JR Dev感受到我所觉得作为一个JR的方式。即使是我所学到的技能，允许我在我的职业生涯后才能茁壮成长，这不值得沉溺于毫无价值和自我的感觉 - 我忍受了解他们。
到所有的Jr.散发出来的人嘲笑或让感觉愚蠢，我提供这个建议：不要放弃。永远不要错过学习的机会。努力工作，注意，并知道总有人比你更多。
回答 3 这些是我遇到的五个。
回答 4 Newbie Fanboy程序员：
回答 5 好的，过去4年我在我的主要任务修复错误的公司中工作;
这是一件好事，我必须以有效的方式分析和修复每一个错误。它需要快速且完全相点，因为当我纠正一个时，我无法生成新的错误。
这些错误直接用于在我们的客户（生产）上运行的产品。所以我们曾经有很多紧迫性。
由于我的主要任务是纠正错误，我可以看到那家公司中每个人编写的代码，我可以意识到谁是最好的和最糟糕的开发人员。
有些事情是
好的，过去4年我在我的主要任务修复错误的公司中工作;
这是一件好事，我必须以有效的方式分析和修复每一个错误。它需要快速且完全相点，因为当我纠正一个时，我无法生成新的错误。
这些错误直接用于在我们的客户（生产）上运行的产品。所以我们曾经有很多紧迫性。
由于我的主要任务是纠正错误，我可以看到那家公司中每个人编写的代码，我可以意识到谁是最好的和最糟糕的开发人员。
一些恼火我的东西是：
回答 6 经验丰富的开发人员容易被初级开发人员惹恼真正需要呼吸并记住这是技术。当然，很多这些新技术都只是新技术的新技术和改进版本，但诚实地&amp;hellip;&amp;hellip;这是技术。当他们没有比较基础时粉丝只会惹恼我（例如，只有在Nodejs宣誓将其他一切都浪费时间）。我的意思是，如果你像我一样，并且已经用几种语言和堆栈建立了东西，你可能还会有你的选择武器（对我来说，这是一般的C＃和.NET堆栈），但你是更好地了解为工作选择合适的语言/堆栈是为了让您成为专业的东西。
对我来说，全部睁大眼睛和充满希望和渴望的新开发商并没有惹恼我。事实上，如果你不准确地杀死他们的精神，那些就是那些将改变行业的人。是的，他们可能有点跟上你需要观看它们，以便他们不会烧掉你的房子，但你应该被指导，而不是羞辱。教则，不是这就是你的方式。他们有很多学习，但这并不意味着你没有任何东西可以从他们那里学到。他们进入了在现代发展中发展的新实践 - 换句话说，站在巨人的肩膀上。这就是你的发展方式，人！如果你对学习任何新的东西不感兴趣，那么那就是你，而不是他们。
所以真的，唯一会惹恼我关于初级开发人员的唯一态度是你陈旧的态度，你所做的一切都过时了。老实说，它甚至没有那种情绪会让我烦恼（特别是如果它是真的）。什么会让我感到烦恼，而不是比较的基础和你老的态度，所以你没有什么可以教我的。是的，这会让我烦恼。我相信很多退伍军人在这里都会说，这是最年轻的开发者这些日子，但我争辩说，我们只能看到我们那些太陷入了甚至将大脑（IRONIC）搞得其实评估它的说法。
如果他们没有提出问题或试图了解他们所知道的或我想要教导他们的想法，那么少年开发会惹恼我。我永远不会在一个年轻人和天真的开发人员身上拇指拇指，以便确信。我不确定我甚至拇指拇指在他们身上，因为他们的个性有所了解，这将使他们在他们的驴子或他们自己的骄傲中是我的屁股或他们自己的自豪感被殴打。为什么？因为这导致成为摇滚乐。我并不介意鸡茸的年轻开发商 - 当他们表现出潜力时。我不介意挑战我的设计或实现的年轻开发人员，因为它通常会让我解释它们，让我自己理解它更好。那个，我必须承认这是一对夫妇（最近），我有一个摇滚实心设计，并有一个Poc工作，1年的开发商问我为什么只使用新筋交的东西Bobber XYZ？我的第一次反应看起来是孩子，我知道我是什么&amp;hellip;&amp;hellip;然后我的客观的思想踢了，嗯。等&amp;hellip;&amp;hellip;那是什么？然后我看看它，它确实确实是我想要的，但它会拯救我们的工作时间。呵呵。甚至不知道那里都在那里。好的。</description>
    </item>
    
    <item>
      <title>Windows客户端如何查找最近的域控制器？</title>
      <link>https://xiangqingw.github.io/posts/how-does-a-windows-client-find-the-closest-domain-controller/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:08 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-does-a-windows-client-find-the-closest-domain-controller/</guid>
      <description>Windows客户端如何查找最近的域控制器？ 回答 1 我不知道它是否有更好的，但几年前，我不得不在登录中编写一个例程.bat文件，强制客户端将文件上最近的域控制器上的文件使用，因为大多数时间都会找到域控制器在另一个位置。所以，那时的答案并不是很好。我不再为那家公司工作了，多年已经过去了，所以我现在不能说。
回答 2 在Active Directory中，存在一个名为S站点的构造，客户端用于最初找到最近的可写域控制器到所述客户端。这些网站通常由位置定义，该位置又将其绑定到本地子网。无论如何，在正确配置的广告域中&amp;hellip;&amp;hellip;
因此，客户将首先去那里，如果它找不到运作的DC，那么通常设置的是一个组策略对象，指示客户端尝试下一个壁橱网站。现在，如果没有定义，它将使用Site-Link成本，也可以根据网络拓扑定义。较低的站点链接成本获胜。所以你可以说，我在一个地方的一个dc，网络连接不良，除非绝对必要，否则您更喜欢复制和身份验证事件。您可以将该站点分配高链路成本，例如100（默认），以及其他DCS的链路成本为50.这样的方式较低的链路成本DC将始终在那个具有100的成本之前处理广告操作。
回答 3 尝试从GitHub Terminus（与其他终端不同）的终端。这一个是免费的，开源并配有很多功能和插件。由热情开发人员支持，较新版本的发布周期是合理的。社区致力于考虑我们通过GitHub培养的问题和新功能请求。
试一下。你会喜欢它！！！
回答 4 Windows域控制器的Linux等效项是什么？
LDAP，DNS，Kerberos
毕竟，广告只不过是LDAP，DNS和Kerberos的修改组合。
回答 5 实际上Windows域只能替换为Windows Server AD服务。但是，轴突广告支持常用的Active Directory功能，例如用户帐户，组成员资格，域加入Windows和Linux，基于Kerberos的身份验证和组策略。这使得管理运行Synology DSM，Linux，Windows和部署Windows应用程序的计算机和设备更容易。
Synology Ad Server由Samba提供支持Google，谷歌可以使用它是什么以及无法使用什么
回答 6 ZOC是最好的SSH终端程序。Emtec有Windows和Mac版本。请务必使用选项选项卡。数据文件夹在云上工作。
回答 7 当然。根据定义，服务器旨在为多个客户提供服务。您很少找到一个客户端的一个环境。它只是实际上没有意义。
另外，由于您专门询问Windows版本，只需查看：有Windows Server 2008相同的市场到达Windows 7？绝对不。Windows客户端是每个个人或家庭的。服务器建立在一次以支持Tens，数百个客户的时间。
回答 8  您必须对Windows服务器进行两件事以将其转换为域控制器？
实际上，你只有一件事要做。
您必须将服务器推广到域控制器。
旧程序是DCPROMO，但今天大多数人都使用ServerManager。
在该过程中添加了角色，您将被问到您是否希望设置也需要的DNS，但由于它是默认和自动，您真的不必这样做。
 回答 9 据我所知，这种类型的反向映射是不可能的，而不具有DNS服务器。DNS服务器需要具有PTR（指针）记录。
因此，如果您想将192.168.1.100的IP地址映射到Somename.local，则需要添加此记录：
100.1.168.192.in-addr.arpa。在ptr somename.local。
请注意IP地址和末尾的八位字节的逆转。
回答 10 我假设你的意思是窗户承包商。如果是这样，这是关于我的简短摘要以及如何运行我的业务。
Creative Exteriors Inc.在芝加哥伊利尔的业务。近40年的同名，与更好的商业局的A +评级，没有投诉。我销售的窗户提供了一个涵盖劳动力以及材料的非比例的终身保修，因此如果由于制造或安装过程需要修复某些东西，房主就没有成本。窗户也在本地制造，交货通常在大约3周内，无需存款，直到作业完成直到工作。
而不是发出销售人员，我看到每个人的家人自己，这确保了我给出了我能够并降低我在客户的开销的最佳服务。我公司是伊利诺伊州国家公司，已自1980年4月以来，我们携带工人的赔偿和价值200万美元的一般责任保险，我的安装人员也完全被投保，我们是一个认证承包商。
我的演示和估计是非常有用的，大约需要20分钟。我每周7天，即使在一些假期也是如此。如果您决定雇用我，那么我所需要的一切都是在安装Windows后的合同和付款的签名。如果您还没有准备就绪，那么我就留下了我的名片，并要求您在离开后有任何进一步的问题。
我提供整个芝加哥大都市区，包括N.W.的部分。印度人。所有主要信用卡都被接受以及个人和银行支票。没有最低订单，这样您就可以替换您的窗户，就像您负担得起一样。为了获得免费估计，请在我的办公室致电我，如果我不回答留言，我可以与您联系的电话号码，我会尽快给您回电。
哈罗德菲斯彻
Creative Exteriors Inc.
www.creativeexteriorsil.com.</description>
    </item>
    
    <item>
      <title>你如何在jupyter笔记本中发表一块代码？</title>
      <link>https://xiangqingw.github.io/posts/how-do-you-comment-a-block-of-code-in-jupyter-notebook/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:08 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-you-comment-a-block-of-code-in-jupyter-notebook/</guid>
      <description>你如何在jupyter笔记本中发表一块代码？ 回答 1 首先突出显示代码块。在按住Ctrl键并按/。如果成功，则会出现在每个突出显示的代码之前的符号。
取消注释，突出显示评论的代码块。在按住Ctrl键并按/。如果成功，＃符号将从每个突出显示的代码中消失。
希望这可以帮助！
回答 2 考虑到所有木星笔记本电脑的例子都充满了评论，并且在文档中也非常明确说明。
这么少几分钟阅读文档并查看示例将是一个很好的开端
回答 3 Jupyter笔记本（Julie，Python，R）是基于Web的开源软件，用于创建和共享文档，包含实时代码。
Jupyter有助于创建环境，以支持科学计算和可视化交互数据。
以下是使用JN成为可能的交互式数据可视化的示例之一：
jupyter笔记本允许：
1）。代码编辑;
2）。代码;
3）。丰富的文本编辑（使用Markdown Markup语言）;
4）。计算结果使用富媒体表示（.svg，.png，html，latex）。
Jupyter笔记本的组件：
Jupyter笔记本（Julie，Python，R）是基于Web的开源软件，用于创建和共享文档，包含实时代码。
Jupyter有助于创建环境，以支持科学计算和可视化交互数据。
以下是使用JN成为可能的交互式数据可视化的示例之一：
jupyter笔记本允许：
1）。代码编辑;
2）。代码;
3）。丰富的文本编辑（使用Markdown Markup语言）;
4）。计算结果使用富媒体表示（.svg，.png，html，latex）。
Jupyter笔记本的组件：
这就是运行Jupyter笔记本的过程的样子：
Jupyter以几十个编程语言为内核提供，可以在飞行中改变。
Jupyter笔记本上的合作：
协作似乎是Jupyter笔记本的基本功能之一。以下是用于在JN上进行协作的一些工具： - Google的Colaboratory项目与Google Interface.- Kaggle探索和运行机器学习代码.&amp;ndash;用于将GIT存储库转换为交互式笔记本的机器学习代码。 - 服务器托管（内部服务器，数字海洋等）允许实时协作。
Jupyter Notebook可以在需要基于提供的数据的多个可视化的每个项目中使用。
该工具将是其中一个案例中的一个很好的选择，还有更多：
积分：
jupyter.org [官方]
为什么在项目中使用Jupyter Notebook
回答 4 Jupyter不仅限于Python。有许多内核为其他编程语言添加了支持，包括似乎为java 9添加支持的支持。
查看：jupyter核
回答 5 笔记本用于摆弄或创建小演示。 Pycharm是一种IDE，其意味着它用于编写实际代码。笔记本是用于交互式设置。它们是对Python shell的改进，因为它使Rerun命令更容易并在一个地方保存图形。没有遗憾的是过度使用笔记本电脑。一些初级数据科学家们在他们的头脑中得到它，他们应该用作举行真正代码的媒介，甚至讨论生产笔记本电脑。喘气！数据科学家需要学习专业的软件开发实践，如模块化设计，单位测试，CI / CD等，以便他们需要放下笔记本，获取IDE并从真实软件开发人员获得一些培训。
回答 6 首先，确保您已经安装了Jupyter和R已安装。
现在，要在Jupyter笔记本中运行任何编程的语言，您需要安装它的内核并将内核与Jupyter注册。对于r，你有irkernel。安装它的步骤可用：
回答 7 Jupyter [1]笔记本电脑主要是Python用户中的流行（即使存在其他内核）。它们适合使用可以适合内存的数据。</description>
    </item>
    
    <item>
      <title>使用Group By（MySQL，Database，Order By，Inner Join，Developing）对MySQL查询对MySQL查询进行排序吗？</title>
      <link>https://xiangqingw.github.io/posts/how-do-you-sort-mysql-query-with-inner-join-using-group-by-mysql-database-order-by-inner-join-development/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:08 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-you-sort-mysql-query-with-inner-join-using-group-by-mysql-database-order-by-inner-join-development/</guid>
      <description>使用Group By（MySQL，Database，Order By，Inner Join，Developing）对MySQL查询对MySQL查询进行排序吗？ 回答 1 将Order By子句添加到SQL语句。
由于你没有打扰发布你的SQL，我不能更具体。
回答 2 答案很简单 - 因为它是一种使用多个表的方式。 SQL Join将允许您将来自两个或多个表中的数据组合在一个SQL查询中。
没有SQL加入，您无法在SQL中做得很多。这是您需要使用语法SQL舒适的基本事物之一，并使用其巨大的潜力。
它只是一个你需要知道的话题，如果你想成为数据科学家，工程师或数据科学。这些是SQL的基础知识，我们需要它们能够编写更好的报告和编译，并将数据与许多SQL查询中的许多来源组合。
此外，在仅使用一个表时，SQL连接有时有用。什么时候？查看本文：
你想掌握SQL Joins吗？前段时间，我的朋友描述了如何有效学习和练习加入的一些有用提示。值得检查它！
最后，看看这个SQL加入作弊表。将其打印出来或将其保存到您的浏览器中的收藏夹中。它真的值得拥有它。
https://learnsql.com/blog/sql-join-cheat-sheet/joins-cheat-sheet-a4.pdf.
我希望我帮助了。如果您找到了答案有趣或有帮助的答案，请单击网上！
回答 3 只需使用MySQL或Postgres。为什么？如果整个_active set_适合单个机器主存储器（可以高达128GB +与现代商品机器），则您没有水平可扩展性问题：即，您绝对没有理由进行分区（碎片）您的数据库和放弃关系。
如果您的活动数据集适合内存
大多数具有索引的任何正确调谐的数据库都将足够好，以使数据库本身变为l &amp;hellip;
回答 4 来源：SQL连接的视觉表示
回答 5 与您优化任何其他查询的方式相同。您可以从避免标准代码气味开始：
然后，使用Explate命令以了解优化器所做的选择。有一系列关于如何使用的教程。在核心，确保您有良好的数据结构，在适当的位置，参考完整性，以及您避免上面列出的常见问题。
对未链接的在线建议并引用源材料（如上面链接的文档）是谨慎的。请记住，查询是一个查询，所以将查询放入一个语句，它仍然只是一个查询。将查询移动到视图中，它仍然只是一个查询。没有任何关于将查询从一种形式更改为另一个表单，而不会对查询结构本身的根本修改，这将导致性能增强。
要求回答
回答 6 从部门D左jo选择d.dept_name，e.employee_name_name
这不是MySQL的特定，但对于这些天没有所有的SQL味道，大多数是最常的。基于它们在一个或多个列中具有共同的值连接两个表。
从部门D中选择d.dept_name，e.employee_name加入d.dept_id = e.dept_id
这是一个内连接，它只返回从DEPT_ID列匹配的两个表中的那些记录。所以，如果有一个没有员工的部门，它不会列出结果。如果没有任何没有部门的员工，则不会上市。
从部门D左键加入D.Dept_id = e.dept_id
左连接将返回左表（部门）的所有记录，即使没有匹配的员工，员工也没有相同的dept_id。由此示例的结果与第一个相同，只是它将包括任何没有员工的部门。在该记录中，employee_name字段将是空白的。左侧加入仍然不会在部门表中显示没有匹配部门的员工。为此，您需要一个完整的外部连接：
从部门D Full Outher Jource e上选择d.dept_name，e.employee_name on d.dept_id = e.dept_id
此语句将在两个表中检索每个记录。在dept_id上有匹配的匹配，epturity_name和employee_name将显示在结果中。对于任何没有员工匹配的部门，员工_Name字段将是空白的。对于在DEPT_ID上没有部门匹配的任何员工，DEPARTM_NAME字段将为空白。
请注意，在所有版本的SQL中，语法可能不完全相同，尽管它们应该非常相似。可能并非所有SQL版本都支持全外连接。
回答 7 您在“选择”列表中使用“汇聚函数”列的序数次数以在ORDER BY子句中指定它
e g。</description>
    </item>
    
    <item>
      <title>在2022年，人们如何建立更好的技术生活？</title>
      <link>https://xiangqingw.github.io/posts/how-does-one-build-a-better-technological-life-in-2022/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:08 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-does-one-build-a-better-technological-life-in-2022/</guid>
      <description>在2022年，人们如何建立更好的技术生活？ 回答 1 一旦可用即可安装其他智能：更新所有软件和应用程序。购买更快的刷新率。把你想在网上看到的科技：
回答 2 你可能不会太熟悉疯狂的富含硬币
目前，比特币和以外人仍然是存放钱最可靠的加密。尽管如此，如果他们不符合您的投资目标，他们仍然有机会为您提供最适合您的选择。在2024/2015年，将有另一个牛市为加密。比特币减半将导致它再次出现时间和时间。在下一个熊市中会让你有钱的加密电力，并且可能是2022年到2023年的月球。以下是在熊市期间购买的顶级硬币。
您可能对疯狂丰富的硬币可能不是太熟悉，因为它是一个新的硬币，但我仍然把它放在这个列表中，因为它是真正的潜力。 $ CRC令牌是ERC20令牌。疯狂富含硬币正在建立一个房地产Metaverse，可以在市场上填补这个无效，允许千禧年和Zs购买物业。这是我当然的，是最逼真的，具有明确的目标，愿景和目标。
回答 3 生活什么时候变得更好？
生病与你如何让生活更美好，但你可能会喜欢它。它在这里分享了一些艰难的爱。
好的，这里是。
当您实际选择更好时，生活实际上变得更好。这意味着您必须在您体验中进行一些变化。
我告诉过你，你不喜欢它。
现在，你在生活中采取简单的方式。你是识别作为受害者。事情发生在你身上。你不喜欢他们，你觉得你可以做到这一点。
这种思维方式是懒惰的，因为你已经放弃了自己献身
生活什么时候变得更好？
生病与你如何让生活更美好，但你可能会喜欢它。它在这里分享了一些艰难的爱。
好的，这里是。
当您实际选择更好时，生活实际上变得更好。这意味着您必须在您体验中进行一些变化。
我告诉过你，你不喜欢它。
现在，你在生活中采取简单的方式。你是识别作为受害者。事情发生在你身上。你不喜欢他们，你觉得你可以做到这一点。
这种思维方式是懒惰的，因为你通过为你的生活责任造成任何责任。懒惰的巨大缺点是事实上，失去权力实际上感觉很糟糕。
对此的解决方案是收回控制和责任。起初需要一些工作和决心，但它真的不太糟糕。一旦你养成这种方式的习惯，它会变得更加容易。加上，你会感觉好多了。
因此，如果您仍然和我在一起，生病分享了一个相当简单的方法，以便在你的生活中负责。
人们是制造机器的意思。在我们选择提供意义之前，我们遇到的任何内容都没有任何概述的含义。这是对的，你生活中的所有含义都被你分配了。所以所有这些判断你都在发生在你身上的事情，如此，我不喜欢这个，这很糟糕是你做出的选择。你决定生活不是你希望的。但是你有选择的事实是摆脱受害者的关键。
您所要做的就是有意识地，有意地选择要分配给您的经历的更好意义。选择赋予必要变更的含义。然后使这些变化是因为您是负责任和赋权的个人，而不是受害者。
每个人都有不可取的事情发生在他们身上。但是，选择负责你的感受和对这些经历的感受和反应的强大方式是什么，这是在等待生活的人之间的区别，越来越好，生活已经更好的人。
这是你的选择。
回答 4 没有人可以在我们日常生活中逃脱技术的直接需求。我们所有人都是如此受到我们无法在没有它们的情况下管理的。从PC开始保持适合，我们需要在每次进展中的技术。技术协助我们与远离我们的个人接触。我们利用手机和PC与他们交谈，甚至看到它们。我们的日常办公室工作同样是基于技术的。目前没有个人使用笔和纸来完成他们的工作。我们通过去运动中心保持幸福。运动中心有机器，帮助我们减少重量并保持形状。技术利用使我们的生活令人愉快。我们无法想到生活SANS技术。我们可以在一点点小工具中保留大量信息，并在我们喜欢时使用它。随着技术的利用，车辆同样变得更好。沿着这些线，在我们的生活中可以验证技术。
技术是我们无法逃脱的平坦需求，它在我们生命的许多部分中起着一个特别庞大的部分。它会回答大部分人类问题。技术已经前进了数百多年来。技术的意义旨在以其在哪种结构中的利用稳定。它通常在生活中易于坐标。例如，采用便携式技术。世界上越快才能搬迁;令人愉快的结束越多，元素被宣传。 PC变得更薄，更适度。事实证明，始终如一地更小，并提供更多的能力和顶级执行。它应该以更紧凑的形状堆叠一大吨的东西。这是需要的。个人不留意努力考虑在企业中被收购的内容显示南方州，因为现在一切都在PC中录制，另外用于手机。他们应该可以选择随时随地传达，从而激发了研究人员制作PDA。
更重要的是，它变得更加适度，更适所可多。之后，它有更多的组件，更多的游戏，更高的娱乐，并目前提供更多专家，就像在口袋里有一个PC一样。后来，从荒谬，它更便宜，更好，更快，结果更加坚固。技术在我们的日常处物中的重要性启发了研究人员偶尔通过他们发明的仪器和小工具来使我们利用更简单地利用我们的生活。一般来说，我们一般会让前进。技术可以帮助现在以及近似到来的东西。它可以确定可能的福利和不幸。此外，鉴于这些，我们可以为我们亲属的最终命运制定计划和破平的脚步。
回答 5 我假设你要求投资到2022年或者1年。
它的2021年和市场开始从第2次Covid-19开始恢复，
我今天在我今天的分析中列出了少量库存，这可以使您的投资在1年内左右几乎翻了一番..
看看，我不相信投资10年，20年投资，甚至5年我很少建议。我相信你应该什么时候投资于特定的股票
答案是 - 当它开始获得Moventum时，当它开始将其档位转移到1到4时，当它开始横跨其整合阶段并寻找BR时
我假设你要求投资到2022年或者1年。
它的2021年和市场开始从第2次Covid-19开始恢复，
我今天在我今天的分析中列出了少量库存，这可以使您的投资在1年内左右几乎翻了一番..
看看，我不相信投资10年，20年投资，甚至5年我很少建议。我相信你应该什么时候投资于特定的股票
答案是 - 当它开始获得Moventum时，当它开始将其档位转移到1到4时，当它开始跨越其整合阶段并寻找突破！
Becoz如果分析密切关注任何多功率股票让我们依赖，它需要一个好的5-10甚至20年甚至20年的整合，那么只有一个多功能才能越来越多的整合时间越高，它会在突破之后走高。
[审核您必须在做出决定之前看到多个不同的方面，但是对于多倍股来说，YA是一个关键因素之一。]
在低于图像的帮助下，你将理解更好 -
在上面你可以看到我在绿色*中突出显示的阶段，这与上面描述的相同阶段称为动量增加阶段
这是大笔或聪明金钱让他的entey的时间！
如果您的进入时间正确正确，那么在几年内可能有2倍，3倍.Only条件是完全分析和完善的进入
当你变老以获得投资成果时，不需要等到10 - 20年。是的，还有规划和股票也瞄准旧阶段称为高股息支付股票
基于上面的解释了我列出了几只库存，你现在只能投资一年
它会得到荷兰！
h
在右手边下方，您可以看到良好的体积，确保人们以大量购买！
购买近220-260（部分50-50％）</description>
    </item>
    
    <item>
      <title>如何向人们发送大文件？</title>
      <link>https://xiangqingw.github.io/posts/how-do-i-send-large-files-to-people/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:08 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-i-send-large-files-to-people/</guid>
      <description>如何向人们发送大文件？ 回答 1 最好的方法是使用sendbig .com在哪里可以免费向人们发送高达30gb的大文件，或通过电子邮件或通过共享生成的链接。
此外，SendBig免费提供了很多令人敬畏的功能。
回答 2 Shreya Mehta：
回答 3 zoi视频 - t
通过乘以视频的比特率，持续时间和压缩比来计算视频文件大小。虽然比特率是这里最有影响力的因素，但你真正要记住的只是解决方案越高，视频的越来越少，文件越大。按照以下方法分享您的视频。
Wesend IT - 我们推荐的最佳服务之一，只需上传您的文件，您可以立即通过电子邮件或获取可共享链接，它们允许50GB的空间免费
Dropbox - 文件存储和共享系统，宽敞的平台才能立即托管并分享文件。
ZOI视频 - 存储，保存和分享您的视频文件的最佳方式显然是Zoi视频，当您与我们一起注册Zoi TV或Zoi视频时，您可以获得自己的无限，安全和可扩展，易于使用平台分享和保存所有视频文件。
WeTransfer - WeTransfer是一个方便的文件传输服务。您可以免费发送2GB下的视频文件，或者将付费版本置于上传最多200 GB的文件
回答 4 最简单的方法是使用sendbig .com，它允许您免费发送高达30GB的大文件。
使用SendBig，您可以发送无限制的文件和传输。它也有很多有用的功能。
回答 5 我推荐SendBig .com，它允许我免费将最多30GB的大文件从电话或任何其他设备发送。
此外，SendBig还提供了很多惊人的功能
回答 6 您可以在网站上上传您的文件，然后分享它，我个人使用在sendbig .com上上传我的文件，并与提供的链接共享。
回答 7 您可以使用sendbig .com将大文件免费发送给朋友或任何您想要的人。
使用SendBig，您可以免费将最多30GB发送文件，并且它具有很多可用的功能。
回答 8 好吧，它很容易，他们可以使用SendBig .com并免费分享5GB的文件，甚至没有制作帐户。
回答 9 SendBig .com允许您免费发送和接收大文件，并且每次传输最多30GB的无限数量转移。
只需选择要共享的文件，然后在上载完成时，可以通过电子邮件共享传输或通过共享自动生成的链接来共享传输。
回答 10 Transfernow是一个安全的平台，用于发送和分享您的照片，您的假期视频，您最喜欢的音乐以及您的个人和专业文件。
随身携带您的文件，您可以随时随地与您的朋友，同事和家庭一起分享它们，这样您就可以快速访问相同的信息！
Transfernow可在所有设备上获得：笔记本电脑，平板电脑和智能手机。只需点击几下即可快速发送和共享大文件，获取直接发送到您的联系人的下载链接，或者快速获取自定义链接并分享它，但是您喜欢论坛和社交媒体。
它提供了两个传输工具：您可以将小文件和大文件发送到一个或多个联系人或获取可共享和可自定义的链接。要使用强大的文件传输工具，您需要选择要发送的文档或文件夹，然后填充与所选择的设备匹配的表单。
单击“开始”选择要发送或拖放的文件和文档直接在接口上丢弃它们。
将文件发送到您的联系人或获取可自定义的共享链接。根据您的需求，我们的工具提供了不同的功能。
填写表单后，单击“发送”以确认您的文件传输。
回答 11 有很多方法可以发送，但最简单的方法是将这个大文件制作到多个小文件中，并在这种情况下以这种方式发送。您可以使用像7-zip这样的拉链软件，该软件将为多个较小的文件创建一个大文件（您可以选择大小限制）。</description>
    </item>
    
    <item>
      <title>如何增加学习能力？</title>
      <link>https://xiangqingw.github.io/posts/how-does-one-increase-ones-learning-capacity/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:08 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-does-one-increase-ones-learning-capacity/</guid>
      <description>如何增加学习能力？ 回答 1 我很幸运（读过
有一个原因，我看起来像这张照片中最累了的家伙。
我左边的2个家伙在九吉岛比我更加成就。中间的那个人是黑带世界冠军。
每隔几周/个月，我谨慎努力寻找一个我认识的培训伙伴，这是一个事实比我更好。当我是九吉湖的初学者时，我必须做的就是找到更多有经验的从业者，而是追溯到我当地的健身房，但多年来，随着我越来越多的时间，我必须进一步旅行进一步距离寻找我的殴打。
我很幸运的是，丹特（在这里阅读他的成就）距离我有4小时车程，甚至幸运的是他总是带着像Keith这样的人（阅读他这里的成就）进行培训。
如果金钱没有对象，我的身体总是健康，我每隔一周都像这样旅行和训练，因为它对我的技能发展做了很多。
当您在您的工艺中最好的最佳曝光时，您的缺陷会暴露。
如果您可以放弃自我并接受这将发生这种情况，您将达到新的增长阈值，以帮助您达到潜在的潜力。
每一次偶尔，你必须故意寻求失败。你无法知道你不知道的东西，有时你需要有人向你展示。
这是你追求的任何技能都是如此。
想要成为一个更好的作家？尝试在更大的出版物中发布。有比你看工作更好的作家。寻求失败。
想要变得更强大？在健身房测试你的力量。跳上上拉栏，尽可能多地下载，直到你失败。寻求失败。
想要变得更聪明吗？拿起一本高于阅读水平的书。通过它的页面慢慢奋斗。阅读它，直到您需要休息才能消除您学到的信息。寻求失败。
寻求失败。
提高学习能力的最佳方式是承认您不知道的很多。
对这个想法感到满意，有时候，不断增长的意味着感觉像白痴。
每个人都说他们想要变得更好，但是，大多数人不愿意穿过他们的自我，并通过留下舒适区的令人不快的经历。
我不认识你，但我知道如果你像大多数人一样，你的自我可能会以某种方式阻挡你。
过去你自己的胡说八道将为你开辟一个全新的世界。
回答 2 持续学习是提升一个人学习级别的秘密之一。我们的大脑具有大的存储容量。但是，将所有信息保存为立即内存是一个艰巨的任务。例如，当我们读书时，在某个时期之后，我们会难以记住特定书的内容。因此，学习与您正在做的事情相关的东西至关重要。
今天，每个组织都需要一个特定于域的技能的候选人。通过持续学习，您可以保持更新。那将帮助您有效地执行您的工作和角色。持续学习是每个成功故事中的共同元素之一。它激发了许多人每天学习。所以，记住学习和成功之间存在比例关系。
此外，尝试弄清楚阻止您的学习能力的限制。让他们考虑。并努力为您占用最好。
为了建立和发展您的职业生涯，您需要学习新的技能和知识。如果你愿意学习&amp;rsquo;metvy学习&#39;，那么让你的学习旅程更加丰硕。它提供30天的商业，研究，设计，AI Bootcamp和咨询，通过连接您与不同的顶级工业专家联系起来升级您的技能。
点击此处可利用更多机会。
我希望我的答案帮助你。谢谢您阅读此篇。
让我知道您提高评论部分中的学习能力的方法。
跟我来寻找更多这样的内容。
回答 3 当我是德克萨斯州A＆M大学的年轻本科工程学生（1972-1977）时，我首先挣扎，几乎没有达到C平均值。但是，我逐渐倾向于什么作用，而且很快就成为了一名学生。事实上，对于我的二等程度，这是一个M.S.在计算机科学中，我的课程是一个。以下是我这样做的一些提示：
做上面的所有事情，你站在那个课堂上的稳固机会。
回答 4 两步方法。
这是它的工作原理。
让我们说你想了解统计的两个核心分支是什么。
您可以创建一个框并写下推理，然后创建一个名为描述性的第二个框。
接下来，拿起一个标记，并假装你的教导给某人。它没有重要的是没有人在那里。这是Feynman的方法。
第二天，拿起一支笔并用两种统计数据创建两个盒子。第二天是间隔重复。
使用这种方法，你可以获得
两步方法。
这是它的工作原理。
让我们说你想了解统计的两个核心分支是什么。
您可以创建一个框并写下推理，然后创建一个名为描述性的第二个框。
接下来，拿起一个标记，并假装你的教导给某人。它没有重要的是没有人在那里。这是Feynman的方法。
第二天，拿起一支笔并用两种统计数据创建两个盒子。第二天是间隔重复。
使用这种方法，您可以学习任何内容。
我也用这种方法使用了概念还原派。这意味着我分解了我学习它最基本的概念。
回答 5 学习技巧！
非常简单，始终是学习者，愿望，欲望，终于找到自己的激情，因为激情给我们一个坚实的理由来学习新事物。
目前我们必须为我们做出的强制性，并将专注于目标。
不要吓到生活中的新事物，准备好改变。
想象一下，这个新的学习，学习新事物后会发生变化。
始终致力于您的个性，以便为专业的生活进行梳理。
将您的任务划分为子部分，并逐个执行，没有任何问题任务必须完成。
不要等待导师或培训师，这将来到你的支持
学习技巧！
非常简单，始终是学习者，愿望，欲望，终于找到自己的激情，因为激情给我们一个坚实的理由来学习新事物。
目前我们必须为我们做出的强制性，并将专注于目标。
不要吓到生活中的新事物，准备好改变。
想象一下，这个新的学习，学习新事物后会发生变化。
始终致力于您的个性，以便为专业的生活进行梳理。</description>
    </item>
    
    <item>
      <title>如何通知前端JavaScript的最佳方法以后端信息（在后端使用C＃）？</title>
      <link>https://xiangqingw.github.io/posts/whats-the-best-way-to-notify-front-end-javascript-of-changes-to-backend-info-using-c-in-the-backend/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:08 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/whats-the-best-way-to-notify-front-end-javascript-of-changes-to-backend-info-using-c-in-the-backend/</guid>
      <description>如何通知前端JavaScript的最佳方法以后端信息（在后端使用C＃）？ 回答 1 要么轮询后端，它会每隔几秒钟制作Ajax呼叫，以检查是否有一些通知。
或者更优雅的解决方案 - 建立一个Web套接字连接，以通知前端从后端。
回答 2 使用具有回退方法的信号量如浏览器支持Web套接字，那么它将使用它用于轮询其他明智之举，它将用于Ajax轮询或隐藏帧等。
回答 3 这些天，WebSocket是处理这些类型的交互的最佳方式。如果您有一个基于事件的后端，这使得它变得更加容易。特别是如果您例如有CQRS后端。
回答 4 这件事情可以通过多种方式处理，这是建议：
回答 5 如果它是您需要的单向通信，则SSE（服务器侧事件）可能是足够的，但对每个浏览器IIRC有5个选项卡。如果它是双边的，请使用WebSockets，可能需要使用STOMP协议的实现，与Sock.js等客户端库，或检查NPM模块，它适用于：https://stomp-js.github.io/api-docs。
回答 6 SQL＆Oracle.
回答 7 它更像不同的职业。这是一个数学家还是艺术家难道？如果你想擅长它，这两种时候都需要一个巨大的时间。我在两者中有初级背景，我发现困难。
后端发展就像是数学家一样。您大多要提出需要大量焦点和调试的逻辑功能。你真的不关心结果的样子，但它需要返回正确的值。您必须确定，您使用正确的数据，函数和循环。否则，即使您使用简单的公式s =（（a * b）/ 2）s =（（a * b）/ 2），您的代码也会很慢。 。
前端发展更像是艺术家。或者至少是一个非常好的乐高建设者。它需要视觉想象的某项技巧。你必须是创意的，并经历一个铁艺的Powccess，可以扔掉你的5小时工作，因为需要在另一个地方。您还必须使用A / B测试您的新想法和线框，并了解您的最终客户不会获得您的想法，您需要重新思考整个概念。它还需要一些社交技能，因为您必须遇到您的用户和开发人员。最后alfa和omega编码 - 响应设计。您将为许多不同的分辨率有代码，并确保它至少在4/5广泛使用的浏览器中看起来不错（即减少，Yay！）。
优点：
后端开发：
前端开发：
他们都没有更难，它们只是不同的。
回答 8 在初始初始化的快速移动方案中，它应该只是并行发生。如果要实现新功能，我们有一个头脑风暴会话。它涉及4个缔约方最小 - 设计师，前端开发人员，后端开发人员和商务人士。
这些要求由商界人士拼写出来。设计师绘制一些不同可能的UI候选的草图。这些可以在板上或纸上绘制。前端工程师和后端工程师然后根据可用时帧中实现的可行性接受或排列它们。
一旦决定每个人都可以接受的妥协UI，设计师和后端开发人员首先开始工作。设计人员通常首先将模拟转换为可交付 - HTML和CSS。反向端开发人员必须同时实现将支持功能的API。当两者都准备好时，前端开发人员接管并使UI与后端API通信。 UI和API均通常在此阶段和发布后都经过几个迭代（取决于客户反馈）
TL; DR：UI设计与API设计并行发生。 UI开发可能会稍后开始。
回答 9 程序员使用来源
JavaScript是一种高级解释语言，由所有现代Web浏览器和大多数网站都支持。
目前可以使用许多JavaScript例程库。具有全堆栈功能和其他属性的JavaScript库可以被分类为框架。软件工程师进一步将JavaScript框架分类为前端和后端解决方案。流行的前端JavaScript框架包括AngularJS，ReactJs和Ember.js，而常见的后端框架包括Meteor.js，Phantom JS，Node JS和Express.js。
前端JavaScript框架
程序员使用前端JavaScript框架来使Web应用程序交互。这些框架对于提高单页应用的功能尤其有用。
一些流行的前端框架是
后端JavaScript框架的主要功能是提供RESTful API服务。此要求通常包括大多数应用程序的非UI功能，例如数据库修改，图像存储和访问身份验证。
一些流行的后端框架是</description>
    </item>
    
    <item>
      <title>如果有人可以自由阅读开源软件的代码，如何开源软件从未被黑客攻击？</title>
      <link>https://xiangqingw.github.io/posts/if-anyone-can-freely-read-the-code-of-an-open-source-software-how-come-open-source-software-never-gets-hacked/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:08 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/if-anyone-can-freely-read-the-code-of-an-open-source-software-how-come-open-source-software-never-gets-hacked/</guid>
      <description>如果有人可以自由阅读开源软件的代码，如何开源软件从未被黑客攻击？ 回答 1 这是最着名的之一：Heartbleed Bug
回答 2 如果有人可以自由阅读开源软件的代码，如何开源软件从未被黑客攻击？
哦，正如亚历山大莱曼都说的那样，它确实被黑了。
但是，有10个人的读取开源有9个，以便向作者报告错误和漏洞。
因此，开源代码稳步悄悄地提高，如果您想破解它，您需要在门关闭之前找到自己的方式。并且平均比封闭来源产品更快。
回答 3 它确实经常被黑客攻击，一些开源托管服务被黑了攻击，并且可以改变源或编译下载的内容。
在开源工具中经常漏洞，其中一些在较长的时间内被滥用，因为某些安装未更新，或者在公共公共中未知漏洞。
一个非常好的例子是WordPress和WordPress插件，当这些具有安全问题时，有人会注意到迟早并写入漏洞，以便扫描Internet安装并攻击它们。
回答 4 有许多地方可以了解Pin-Tumbler锁定工作的工作：
来源：锁定如何工作？
那么如果它很容易学习他们的工作，那么锁定如何安全？
答案是，这不是他们如何工作，使他们能够安全。这是让他们安全的关键。锁定以某种方式设计，要求用户按住正确的键打开该锁定，因为每个锁都不同。如果您没有正确的钥匙，了解别针和翻转者如何工作的一般原则无济于事。
（嗯，它有助于如果您知道如何使用LockPicks将引脚操纵到位，但我的类比达到
有许多地方可以了解Pin-Tumbler锁定工作的工作：
来源：锁定如何工作？
那么如果它很容易学习他们的工作，那么锁定如何安全？
答案是，这不是他们如何工作，使他们能够安全。这是让他们安全的关键。锁定以某种方式设计，要求用户按住正确的键打开该锁定，因为每个锁都不同。如果您没有正确的钥匙，了解别针和翻转者如何工作的一般原则无济于事。
（嗯，如果您知道如何使用Lockpick将引脚操纵到位，但我的类比将在此处达到其限制。）
关键是有些方法可以设计软件代码，以便即使攻击者知道代码，软件也是安全的，因为代码不是访问系统所需的代码。
相当于软件世界中的一个密钥有时是密码，并且您之前无疑是使用密码。
还有更强大的软件密钥。这些时间太长，可以方便地键入，因此我们将它们保留在受信任的计算机上的受保护的位置，当您想登录时，它们将发送到软件系统。一个很好的例子是一个ssh键。
当您想建立一个安全登录到某些系统时，您会生成一个唯一的随机SSH密钥，它会产生两个文件：私钥和公钥。这些具有数学关系，所以可以用来验证另一个。如果SSH软件具有其中一个键，它可以识别另一个匹配。
因此，将公钥上传到要登录的远程系统，可以在那里保存。它被称为公钥，因为您可以在您不信任的网站上分享它是安全的，因为它自行对攻击者没用。
然后，您将匹配的私钥保留在计算机上，并不与任何人分享。这就是为什么它被称为私人。使用私钥配置SSH客户端，它将将该键发送到要登录的系统。然后两者匹配，SSH软件允许您登录。
如果您曾经将计算机被盗，则怀疑某人有私钥，您可以通过删除服务器上的公钥来重新关键系统，然后用新的唯一公钥替换它，您可以在任何地方生成。
SSH的所有代码都是开源，所以算法是广泛的已知的。但它是每个用户的唯一密钥对，使其安全。
回答 5 举个例子：
一开始，只有商业操作系统。他们肯定的是，他们看起来很漂亮（那个时间），但是，他们还包含了许多错误和安全问题。这些何时会处理？如果有人知道，请问f * ck。当有时间处理他们时，在提出新版本时。
这里的问题是，虽然他们在行业中的大本名字工作，但有一个限制人力（毕竟，如果你支付薪水中的一切，就没有大的利润），有截止日期（我们想要一个两年内的新发布与所有新功能），考虑编码比现在更难以困难，而且他们在瀑布工作&amp;hellip;&amp;hellip;他们真的需要时间来创建这些新功能/功能。
当然，他们现在可以修复一个错误或两个，但同时介绍了一个整个新的。该软件变得很大，有点失控，内存消耗很远。没有时间重构，没有时间使整体（很多）更有效。
快进一段时间到（然后）未来。计算机变得越来越闻名，而且相当于一些年轻人对他们着迷，并在较年轻的时代发现编码。在这一代中，一些非常有才华的编码人员出生。其中之一
所以，他为一个新的操作系统建立了一个内核，他称之为&amp;rsquo;linuxkernel&#39;。当然，他本可以兑现。他本可以归功于它。相反，他决定在GPL（普通公共许可证）下免费释放代码。每个开发人员都可以在内核上建立自己的操作系统，或者可以为内核或操作系统提供错误修正。
如果在过去，如果你注意到操作系统中的错误，你可以提交它并希望有一天，在一个遥远的未来，现在将解决这个问题，如果你注意到一个错误，你刚刚修复它，并上传修复程序所以所有人都可以立即受益（取决于您设法修复的速度）。
同样一个重要说明：开源和自由软件并不一定意味着同样的事情：自由软件运动正在寻找可免费提供的软件，而OpenSource运动是关于使软件更好，更高效和可靠。这意味着，即只是因为软件被开发为openSource，这并不意味着释放的版本可以商业地销售。
回答 6 开源的开放部分意味着是的，您可以做到这一点，我们鼓励您做到这一点。
人们有不同的需求，他们的需求随着时间的推移而变化，人们拥有明亮的想法等。开源允许人们为他们的需求定制软件或修改它以使他们的亮丽思想为生命带来明亮的主意。
是的，我想原始作者可以改变事物并使某人的应用程序不可行或不兼容，但在这一点上，您可以自由地使用旧代码或修复新的代码，或者为自己抱怨某人以获得救济。一个修复程序通常在开源社区中快速提供，因为许多人可以解决问题，而作者自己希望取悦用户。
专有代码 - 你没有选择。要么接受，要么离开它。如果您是付费客户，您可能会在抱怨中，您可能不会抱怨。这可能与专有的操作系​​统一直发生在他们的更新中突破人们需要的东西。根据客户群的Clout（$$$），修复可能快或缓慢。您可能需要购买修复，可能会免费提供，您可能不运气。这都是播放的支付。
这些日子的大多数项目都是密切监测的更改，更好的是测试的回归，以便在打破现有程序时提供最大限度地确定，并且很快就会发现一个糟糕的演员贡献者并被禁止，并且他们的代码被恢复到一个好的版本。因此，令人难以置信的错误代码，要么意外（几乎总是）或故意进入代码基础（非常罕见）。
回答 7 最好的方法是开始是通过使用该软件。了解一般功能以及一切如何从用户的角度工作。如果软件具有配置文件，请尝试所有不同类型的设置等。
下一步是要了解内部工作，请参阅您正在处理的软件的体系结构上的文章，专门为复杂项目等复杂项目，如Apache Server和LLVM编译工具链。随着Linux内核需要您需要您的东西，可能会引用一本书，以便有时用于内部工作并获得域的良好掌握域（一般操作系统）。
然后尝试编译软件并通过调试器运行它。这是弄清楚程序开始执行的最佳方法以及控制流程如何。在各个地方添加打印语句并重新运行代码，这只是为了让您舒服地修改代码。
下一步是真正将架构映射到您看到的代码库。此时只需向邮件列表发送邮件或留言IRC要求帮助，具体是您已经完成的工作以及您想要的帮助。这将简化您的任务，并将日期带到仅限几个小时的互动工作。
最后一步是弄清楚您对您感兴趣的子模块以及如何撰写如何贡献，首先阅读项目贡献指南并继续与IRC频道的成员交谈，很可能您将被引导到维护的人员具体模块。只需继续与他们进一步讨论，具体对您的要求，他们的时间对他们来说非常有价值。 （如果他们有时不太友好，不要感到惊讶，他们只是人类，往往是令人毛骨悚然的）。
我相信这些步骤将适用于大多数情况，尽管总是基于项目的例外情况。使用个人自由裁量权。如果你真的被困在某些时候，并且普通建议这样做没有帮助，那么最好咨询项目的高级成员。
回答 8 所有这些都认为，对于那个母体的人们编辑代码或二进制文件的问题大多是用两个不同的问题解决</description>
    </item>
    
    <item>
      <title>是否值得制作基于浏览器的游戏，或者我应该查看其他平台吗？</title>
      <link>https://xiangqingw.github.io/posts/is-it-worth-it-to-make-a-browser-based-game-or-should-i-look-at-other-platforms/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:08 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-it-worth-it-to-make-a-browser-based-game-or-should-i-look-at-other-platforms/</guid>
      <description>是否值得制作基于浏览器的游戏，或者我应该查看其他平台吗？ 回答 1 我阅读了Reddit向Web游戏网站销售许可证的策略以举办游戏。我忘记了他有多少钱，但它是一个可行的策略，因为他向多个网站销售许可证并让游戏非常小。
基于Web的游戏更容易易于分发。越来越多的人就能看到你的比赛。因此，如果您的目标是拥有尽可能多的人，因为您可以尝试您的游戏而不担心赚取大量资金，这就是去的方式。
至于Google Play和iOS，通过他们的流程在他们的平台上发布的过程是一种痛苦，您可能会获得很少的用户甚至尝试您的应用程序。 Apple每年支付100美元，Google Play是25美元的一次性费（据我所知）。随着这些平台必须遵守大量隐私法规，有很多限制，这可能会限制您仅向美国发布游戏。如果您想拥有应用程序内购买，还有更多的箍跳跃。
蒸汽似乎与新的好游戏过度拥挤，很难脱颖而出。
一切都是学习过程，行业总是改变，我会选择一个方向并获得反馈。
回答 2 您需要进行研究，了解您想要进入哪些市场以及为什么。没有理由一场比赛取决于您对市场和消费者的理解。
也没有理由从浏览器开始，测试游戏和市场。获取反馈，而不是将其端口到其他平台。
回答 3 让您在另一个平台上的游戏的最大原因是如果它过于苛刻。浏览器游戏只能处理这么多。如果您正在进行一个相当轻的游戏，我会说浏览器是您最佳选择。浏览器游戏可以在大多数设备上运行。
回答 4 Samuel Hain拥有核心问题 - 您需要在良好的货币化战略中建立一个伟大的游戏和广泛的受众。
全球浏览器游戏市场于2019年达到近7,01290万美元的价值，自2015年以来的复合年增长率（CAGR）增加了10.3％。预计市场将在2023年以近9,285.0百万美元的复合年增长率增长7.3％ 。预计市场预计将于2025年达到111086百万美元，2030年的17,09220万美元。
这笔钱就在那里。关键问题是，如果您可以生产出色，市场，并保留支付球员。
您可能希望查看像Kongregate这样的群组：
Kongregate提供了很多课程，并且（因为标题可能表示）其中一些课程是警示。他们中的主要可能是不使用闪存。
一个更好的例子可能是AdventureQuest的Artix Entertainment，他们已经将他们的长期成功的浏览器游戏改编为自定义发射器和蒸汽等平台。我不确定，但我认为他们的发射游戏仍然是闪光。
有很多研究可以做到。游戏业务研究的最佳场所之一是游戏开发者的网站（以前的Gamastura）。
你会在那里找到更多的人，而不是你在Quora上找到的经验。
回答 5 基于浏览器的游戏，无论是JavaScript还是webassembly都应该很好地工作，那里有很多人。由于Flash Died，有些游戏适合使用WebasseMbly，而是适用于一些游戏
回答 6 基于浏览器的游戏可从任何地方访问。他们是如此简单而有趣。我知道他们不能像那些追踪百万美元的比赛，但它们是独一无二的，这就是我喜欢的。独立游戏有这种独特性，其他大型标题没有。好吧，不要让我错了，那些大型冠军很有趣，但他们会随着时间的流逝而变得无聊，这就是独立游戏来的地方。他们是基于更多的想象力。如果您的游戏很小，那么基于浏览器，随着您不需要为每个平台构建它们的每一次。如果它太大，那么请考虑别的东西。
回答 7 这将是值得的，因为您创建的游戏可能获得足够的人气。我想获得受欢迎程度可能是艰难的部分。
作为学习经历，它将最低限制。这里的诀窍在于，当您将其用作学习体验时，如果需要，学习如何将其他平台移植到其他平台。如果有的话，那个最终最终会在你的腰带下是一个很好的额外。
回答 8 好吧，这取决于你。如果您是一个新的独立程序员，我会更倾向于制作电话应用程序。
回答 9 如果它是您的第一个游戏，那么就基于浏览器，那么每个人都可以玩，无论他们的平台如何
回答 10 值得吗？你在寻求财务成功吗？你在寻求情感刺激吗？你在寻找同行验证吗？你只是试图满足个人需求吗？
所有这些都有利弊，但是关于这个问题的一件事保持不变;只有你知道你的动机是什么。如果不知道你的期望，那么如果它是值得的，没有人能告诉你。
回答 11 大多是因为它是如此主观的，总是很难说。
例如，我真的很喜欢Cyber​​punk。我希望我能做到这一点，但我喜欢这个游戏的地狱。我认为开放世界是我见过的最令人印象深刻的开放世界，我认为战斗是多样的，很棒，我认为这个故事在各种各样的方面是特殊的。我很少玩一场比赛，我享受每一秒。
当我们谈论最好的游戏，这意味着我们需要接近完美。 Fallout New Vegas是惊人的 - 但战斗是Jank。红死救赎2和1是太棒的，但战斗很简单，使命设计缺乏。
我认为最好的游戏必须是群发效果2。
质量效果2没有坏部分。没有什么是亚par或低于平均水平。
质量效应2没有任何糟糕。
我想另一个接近的是我们最初的最后一个。
回答 12 你绝对可以这样做，但你的目标很可能不会很快完成。游戏开发是一个艰难的领域。人们在没有创造他们的梦幻游戏的情况下变得多年。为您完成此操作，您将需要耐心和决心来实现最终目标。</description>
    </item>
    
    <item>
      <title>作为一个软件工程师，你看到的最巧妙的代码线是什么？</title>
      <link>https://xiangqingw.github.io/posts/as-a-software-engineer-whats-the-most-ingenious-line-of-code-youve-seen/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:07 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/as-a-software-engineer-whats-the-most-ingenious-line-of-code-youve-seen/</guid>
      <description>作为一个软件工程师，你看到的最巧妙的代码线是什么？ 回答 1 A2A by Josh Knight [https://www.quora.com/profile/josh-knight-19]。我正在回答这个问题作为软件工程师，开发人员和/或程序员;您在Codebase中见过的最野蛮评论是什么？
您的问题导致我记得收购由公司源代码中的单一评论保存的软件公司。不是你想到的，而是一个有趣的战争故事。
1986年末，我对r &amp;hellip;的电子表格计划的源代码进行了困扰
回答 2 到目前为止，这是第10行：</description>
    </item>
    
    <item>
      <title>作为软件工程师，您是否有难以满足所有截止日期的时间？</title>
      <link>https://xiangqingw.github.io/posts/as-a-software-engineer-do-you-have-a-hard-time-meeting-all-your-deadlines-on-time/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:07 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/as-a-software-engineer-do-you-have-a-hard-time-meeting-all-your-deadlines-on-time/</guid>
      <description>作为软件工程师，您是否有难以满足所有截止日期的时间？ 回答 1 我们对此并不糟糕，实际上大部分时间都非常擅长它，只要我们被要求在我们给你的时间范围内留下来。你看，开发人员知道它有多长带他们做特定的任务，或者创建特定的代码。只要有
a）对该位的代码或任务没有变化
b）没有任何意外的庄稼（如未知的边缘案例）
c）要求完成任务的人是100％，具体清楚他们想要做什么
然后99.9％的时间我们将重新进入或非常接近目标。不幸的是，它永远不会发生
我们对此并不糟糕，实际上大部分时间都非常擅长它，只要我们被要求在我们给你的时间范围内留下来。你看，开发人员知道它有多长带他们做特定的任务，或者创建特定的代码。只要有
a）对该位的代码或任务没有变化
b）没有任何意外的庄稼（如未知的边缘案例）
c）要求完成任务的人是100％，具体清楚他们想要做什么
然后99.9％的时间我们会回来或非常接近目标。不幸的是，它永远不会发生这种方式&amp;hellip;&amp;hellip;
它通常发生如下所示：
BOSS：你能建造一个应用程序来做应用程序吗？
dev：什么样的应用程序东西？老板：嗯，你知道，这些应用程序每个人都使用这些天的东西做了吗？dev：你的意思是像web-apps？boss：是的，其中一个，请建立一个网络应用程序.dev：什么样的Web应用程序？BOSS：一个Web-app stuff.dev :( sighs）确定，我会建立一个web-app.boss：great，它需要多长时间？一会儿后来，在圈子里绕过圈子试图得到同一问题的答案
dev :(叹气）它会花几个月
老板：我们可以让它需要一个月
DEV：如果我完全了解它必须做的事情.BOSS：伟大的，一个月，它是那个月份的一个月&amp;hellip;&amp;hellip; BOSS：我们需要将一些本机应用程序功能添加到Web-App您的making.dev：什么样的本机应用程序功能？老板：你的开发人员，你知道，本地人
dev：是的，但这种本土人应该做的事情是什么
老板：与其他原生apps.oh和顺便说一句，iv&amp;rsquo;e一直在看你所做的网站应用程序，我们可以让一切都是天空蓝粉色请，我听说每个人都在买天蓝色粉红色的东西目前这是最新的摇摇欲坠不是100％清除你要我做的事情，也许额外的2周，我们已经离开了2周的额外额外的2周.boss：很棒，如果你可以在2周内完成它，这意味着我们有了这个应用程序，和额外的时间相同&amp;hellip;&amp;hellip;
2周后&amp;hellip;&amp;hellip;boss：你是什么意思是它没有准备好，我告诉营销4周前它会上周准备好，他们一直像热蛋糕一样卖。我确实试着解释你在哪里要求非常含糊，IV&amp;rsquo;e不得不思考很多东西并猜测更多&amp;hellip;&amp;hellip;
老板：我不在乎你的想法，无论如何你都可以工作&amp;hellip;&amp;hellip;
更多的几天&amp;hellip;&amp;hellip;dev：你走了，这是我在给出的时间里可以做的最好的事情
BOSS：这堆栈的垃圾是什么，我不会把它卖给一个slup，我以为你应该是一个伟大的开发人员，这是什么颜色的屏幕上有色，它真的很可怕.dev：那种颜色是你问的天蓝色粉红色.boss：我不记得曾经要求那种颜色。它是一个需要改变的一切的列表&amp;hellip;&amp;hellip;
所以它继续，一遍又一遍地重复自己。你经常看到，人们要求你为他们开发软件或解决方案，并不真正知道他们想要什么。他们通常可以在他们的头上映射它并且了解尝试自动化的过程，他们只是不知道如何有效地沟通到试图为它们建立解决方案的人。所以他们进入全经经理模式，并用他们的眼睛思考，而不是他们的大脑。任何了解关于写作软件的任何了解的人都会告诉你，你在表面上看到的只是谎言下面的一小部分。Web编程已经像它一样快地爆炸的原因是因为网络是非常的视觉媒体。因为它相对容易画出东西，使其看起来很好，许多老板和股权持有人现在认为，这就是写作软件的一切。这一事实进一步复杂了许多企业主期望你知道的事实他们如何思考，并运行t继承人的生意，以及他们的业务的确切性质是什么，因此你可以更好地了解他们的问题，但是当你试图向他们解释它，以便向他们展示为什么某些特定的东西是不可能的，你的品牌作为无聊和不屑一顾，没有能做态度。
回答 2 回来的路上，我在那里没有严格截止日期的地方工作，只是一个模糊的感觉，我们应该在第三季度发货，也许是第四季度，或者在明年至少初。
大多数工作人员都有能力，更接近他们的目标。但是我们有一些不称职的人，只是旋转他们的轮子无处可去。他们看起来很忙，所以损坏并不明显。
它最终影响了运费。而我的老板不是一个技术人士，发誓永远不会被无能的人脱轨，所以截止日期变得严格。随着时间的推移，每个人都养成了为各个阶段进行临时截止日期的习惯，直到今天我们有一个和两周的冲刺。
当然，当然，使能称情的人看起来很糟糕，因为一切都是，他们正在花时间，并且无法预测软件生产的长时间。所以现在我们处于这种奇怪的位置，管理者认为，当真理实际上相反时，他们的大量开发人员都是无能的 - 截止日期太僵硬而且毫无意义。
如果您想要令人难以置信的生产力，雇用好人，将一般截止日期设置为几个月或一年，让他们只是代码。如果您在团队中有一些Bozos，只需安排定期审查即可抵消雪貂。
错过短期截止日期的开发者可能并非无能。
几乎肯定会错过长期截止日期的开发者。
回答 3 你只是说没有。
您是专业的软件开发人员，还是您是一个没有经验的代码猴子？专业人士不承诺他们不能做的事情。他们不做他们没有承诺的事情。
您所描述的情况是必然会失败的情况。无论发生什么事，你都会出现短暂，必须为自己辩护。不要把自己放在那种情况下。说不，解释你的原因，并解释你需要改变的是什么，说是什么。没有比赛。
如果你总是说是的，你不会被视为专业人士。你将被视为代码猴子。这取决于你来决定你是什么。
回答 4 继续前进，用水管工狗屎
我嘲笑他们。他们不会持续很长时间 - 无论是坚持持有他们的白痴，也会向我发射，或者他们被击中自己是无能的。
考虑这一点的最佳方式是考虑自己是承包商，而顾客是你的老板。客户为您提供了一份工作列表和一个完成它的时间表，并且还为您提供价格（因为工资时间[（40小时的时间时间线）加上所需的加班]等价）。
你嘲笑他们，你远离工作，你为另一个客户工作，因为他们是十几个的一角。
继续，尝试用水管工狗屎。
荒谬的。
你是一个训练有素，高技能的专业人士。工作机会非常无限。我们根本不必处理那个废话。
回答 5 我的管理人员几乎所有都通过寻找处理问题的方法来反应。软件管理器的工作的主要元素正在解决这种问题。
这个问题有两个关键参数。首先，对公司的重要性是项目及其截止日期？第二，经理何时了解到截止日期是危险的？
它的管理者的工作，以及管理截止日期。内部项目的截止日期通常比宣布的产品发布日期更灵活。因此，获取内部截止日期，因此比移动产品发布日期更容易。然而，有时甚至内部项目甚至是公司的艰难和快速截止日期。这些也对公司更为关键。
无论如何，经理将不得不与他们的管理（以及可能是客户/客户）进行协商来解决问题。这可能意味着更多资源或扩展软件开发人员的截止日期或许多深夜。在我自己的30年职业生涯中，我有三个真正的死亡3月项目，需要广泛的加班工作。它的一部分，但不应该是一个常见的事件。
通知管理管理是我们软件开发人员可以控制的参数。它的一部分，让管理层了解进展和问题。
几乎每个我曾经想过的经理更快地了解问题而不是稍后。如果开发人员一直说话，我不会责怪经理受到沮丧，但仍然错过了船舶日期。不要那个人。
但是，如果经理通常对坏消息做出反应，如果您将经理完全了解您的团队的进度，则生气或责备信使，以便为您的恢复开始，并开始购物新工作。你正在为白痴工作。我为一名董事工作了，他们有一个糟糕的声誉，但设法通过早期浮出水面来避免他的感叹。
Pro提示：当您发现问题或阻碍时，需要一些时间来分析它并提供建议的纠正措施。由于许多不同的原因，您的经理可能不会接受您的建议，但通常会欣赏您在考虑它，而不仅仅是在您真正理解问题之前宣传和呼吁帮助。
A2A：当软件工程师未能通过到期截止日期无法提供时，如何应对工程经理？</description>
    </item>
    
    <item>
      <title>你需要多少比特币？</title>
      <link>https://xiangqingw.github.io/posts/what-amount-of-bitcoins-do-you-need/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:07 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-amount-of-bitcoins-do-you-need/</guid>
      <description>你需要多少比特币？ 回答 1 你的问题不具体。
你需要什么比特币？
如果这只是所有权问题，你需要尽可能多地提供。</description>
    </item>
    
    <item>
      <title>如何使用db创建和部署.NET全堆栈Web应用程序？</title>
      <link>https://xiangqingw.github.io/posts/how-can-i-create-and-deploy-a-net-fullstack-web-app-with-db/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:07 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-can-i-create-and-deploy-a-net-fullstack-web-app-with-db/</guid>
      <description>如何使用db创建和部署.NET全堆栈Web应用程序？ 回答 1 您可以将其连接到任何DB并在支持.NET和您选择的DB的任何托管上发布它，或者它支持Docker。
Azure是最方便的选择，可以节省大量工作，但如果您只需要定期托管，云通常很贵。
回答 2 这是一些技能t
Full Stack Developer是一家熟悉前端开发（客户端）和后端开发（服务器端）的软件专家。全堆栈开发人员熟悉用于创建软件产品的技术堆栈的每层。他们知道每个级别如何工作，更重要的是，它们可以操纵任何内部结构。全堆叠开发人员具有广泛的技能和广泛的知识库。因此，需要多年的软件开发体验来获得完整的堆栈标题。一旦实现，他们就会受到大公司的高度重视。
以下是全堆栈Web开发人员应该具有的一些技能：
所有开发人员都听说过Git。它是一个开源分布式版本控制系统，可以满足您的所有开发需求。它保证了小型和大型项目的速度和效率。开发人员可以轻松管理与软件/应用程序开发相关的应用程序，代码，网站，文档和其他信息的所有更改。专业开发人员通常具有GitHub配置文件，这对于团队合作至关重要。
由于您已涵盖前端开发HTML，CSS，JavaScript，现在是时候到达后端技术的时间，首先是您必须选择一些语言。
完整堆栈开发人员必须至少知道这些后端语言中的一些：
以下是根据您所选择的编程语言使用的一些框架：
完整堆栈开发人员是软件开发的主人。您将拥有与前端开发和后端开发相关的各种技能。完整堆栈开发人员需要了解Web架构的所有复杂性。因为您的主要责任是从头开始构建复杂的软件应用程序。您需要知道如何构建代码，对文件，构建数据库中的数据，以及执行必要的数学操作。
HTTP和REST都有两个唯一用途：HTTP是一种用于促进与客户端通信的协议，REST是使用HTTP协议收集数据或执行各种操作（以各种格式执行各种操作的系统之间的通信。最重要的是转换器在前端和服务器之间。由于全堆栈开发需要HTTP和REST，Full-Stack Developers必须掌握两者。
所有Web应用程序都需要一个数据库来存储所有数据。这允许开发人员稍后访问数据。数据库存储需要经验丰富的培训和训练有素的全堆员开发人员，他们从内部了解关系数据库和数据库存储。完整堆栈开发人员需要成为数据库管理的专家 - 他们需要能够设计，理解和操作数据库查询。您还需要知道如何使用XML和JSON。
以下是完整堆栈Web开发人员应该了解数据库的一些事情：
NPM是一个专门为Node.js开发的包管理器。它有助于安装各种软件包。它还为各种依赖性提供相关解决方案。使用NPM，开发人员可以最佳地放置模块，以便节点可以找到它们并相应地管理依赖关系。 NPM是高度可定制的，因此高度可定制。它可以用于许多应用程序，包括开发，发布，发现和主机程序的安装。
我希望这可以帮助你
回答 3 DOT NET Full Stack Developer将成为一个完全了解构建全功能点网应用所需的前端和后端的人员。
所需技能：
如果您想成为Microsoft完整堆栈开发人员。很少有技能将被添加到列表中
回答 4 它完全取决于个体开发网站。.NET提供丰富的库，易于使用。有一个强大的IDE。但是我也符合Jesse Reitsma Node.js是一个很好的选择。
回答 5 术语全堆刀意味着舒适地使用后端和前端技术的开发人员。
更具体地说，这意味着开发人员可以使用数据库，PHP，HTML，CSS，JavaScript和介于之间的所有内容，也可以在将Photoshop设计转换为前端代码。
一个全堆叠的开发人员不需要掌握所需的所有领域和技术，因为这只是使它几乎不可能，他只需要与这些技术合作，这也很多。
2000年的全堆栈意味着它的意思是什么？
200.
术语全堆刀意味着舒适地使用后端和前端技术的开发人员。
更具体地说，这意味着开发人员可以使用数据库，PHP，HTML，CSS，JavaScript和介于之间的所有内容，也可以在将Photoshop设计转换为前端代码。
一个全堆叠的开发人员不需要掌握所需的所有领域和技术，因为这只是使它几乎不可能，他只需要与这些技术合作，这也很多。
2000年的全堆栈意味着它的意思是什么？
2000年是很久以前的，那年度，PHP 4.0被释放了。是，4.0。然后，一位良好的Web开发人员知道一点HTML，CSS和一些程序PHP，因为甚至没有适当的OOP，直到5.0版。
灯（Linux - Apache - MySQL - Perl / PHP）堆栈是这些年来的所有愤怒，很少或根本没有替代。在2000年代初，如果某人使用版本控制，他们被认为是技术意义或巫师。今天，这是闻所未闻，而不是使用一个。
因此，让我们试着分解今天全堆叠开发人员所需的主要技术堆栈：
系统管理：
Linux为大多数互联网供电，它是Web开发中的一个事实上的操作系统（不要解雇.NET）。此外，全堆栈开发人员应该知道云托管如何工作，亚马逊/ Rackspace或其他提供商及其API。
搜索是大多数网站的一个组成部分 - 开发人员应该知道如何设置和使用Sphinx或Elasticsearch等搜索服务器。
缓存也是重要的，清漆，反向代理，MEMCACHED和OPCODE缓存。他需要知道这些中的每一个以及如何使用它。</description>
    </item>
    
    <item>
      <title>如果我要以随机间隔单击的自动咔哒声，可以将自动咔哒声探测器检测到我使用的自动咔哒声吗？</title>
      <link>https://xiangqingw.github.io/posts/if-i-were-to-create-an-auto-clicker-that-clicks-at-random-intervals-would-an-auto-clicker-detecter-detect-that-i-am-using-an-auto-clicker/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:07 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/if-i-were-to-create-an-auto-clicker-that-clicks-at-random-intervals-would-an-auto-clicker-detecter-detect-that-i-am-using-an-auto-clicker/</guid>
      <description>如果我要以随机间隔单击的自动咔哒声，可以将自动咔哒声探测器检测到我使用的自动咔哒声吗？ 回答 1 在更复杂的系统中监视它，是的。
通过接合指数来衡量网络开发中的人类互动。此索引是您所做的所有互动的平均综合指标。
滚动时间，保留时间，查看时间，点击，导航热映射。
如果您只需进行自动咔哒声，则这是一个随机的单击者非常明显 - 因为人类的交互不会像那样制定。
如果您在Clicker Games中或其他方式中的意思 - 则存在符合此操作的空闲定时器。
所以一些游戏或程序会发现它 - 但大多数低级系统都不会 - 因为为那种东西做一个检测系统 - 需要大量的工作，并没有给予很多工作。
通常，实际用户参与的不稳态发现来自综合度量 - 而不仅仅点击。
谢谢你的A2A。</description>
    </item>
    
    <item>
      <title>您在编程语言中为您的大学学位支付了多少钱，您在哪一年毕业？</title>
      <link>https://xiangqingw.github.io/posts/how-much-did-you-pay-for-your-colleges-degree-in-programming-language-and-in-what-year-did-you-graduate/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:07 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-much-did-you-pay-for-your-colleges-degree-in-programming-language-and-in-what-year-did-you-graduate/</guid>
      <description>您在编程语言中为您的大学学位支付了多少钱，您在哪一年毕业？ 回答 1 您在编程语言中为您的大学学位支付了多少钱，您在哪一年毕业？
是否有一些第三世界学院在编程语言中提供学位???
这对高中班或6周的技术学院更适合。
几个星期，我总是在工作中学习了新的语言。我想如果有限智力的人需要一个课程来教导它们可能会花费多达600美元的教练的时间和耐心。
回答 2 我在计算机科学中获得了学位，包括广泛的技能来包括各种编程语言。
我的教育通过军队通过GI比尔计划获得100％，我在空军首先在空军4年内换取教育福利。在CCAF下的军事培训方面的可转让学分援助，我在我积极和综合CLEP考试的同时，我能够在1997年转入4岁的大学后毕业只有2年。
如果 &amp;hellip;
回答 3 但从我理解的是，学分的费用目前为1,105美元
我不在经济援助中工作。至少作为本科生，我拿了C ++和Visual Basic，而我在数学和次要信息系统中获得了一定程度。从那以后，我一直在尝试自己学习C＃，Java和Unity。
我必须弄清楚每次学分为我在2001年毕业的大学占据大学的费用。至少当时，我认为每学分为700美元至700美元。当我参加大学时，它确实有助于我获得一些奖学金和补助金。
但是，由于学费增加，目前，信贷时间的费用为每学期为1,105美元或15,900美元。
请记住额外的学校努力赢得教师认证，我能够教授计算机动画和图形设计两年。所以，至少对我来说，我觉得大学是值得的。
回答 4 大多数大学都不会在计算机编程中提供学位。我当然没有。它通常不是关于编程。它关于了解如何解决问题。
回答 5 我主修计算机科学。我没有编程语言的学位。我确实研究了编程语言的原则作为课程所需部分。
成本取决于您是否去私人或公立大学。在密歇根州，该州的最佳大学为父母每年少于70,000的人提供免费学费。但由于该大学拥有世界上最好的计算机科学部门之一，因此非常困难。
国家的其他大学具有不同的学费率。咨询他们获取更多信息。
回答 6 取决于您如何查看它。有两个维度：您是否为您的个人研究付出代价，并且在有编程语言中有学位。
在第一维度中，我住在瑞典，在那里通过税金支付教育，这意味着我什么都没有为，例如学费。当我追求我的博士学位时，我通过就业。再次，我什么都没有支付。警告是，在我的初步研究中，我借了贷款（尽可能多的其他人做过），在这种感觉上，我付了钱。此外，存在潜在的损失W.R.T.退休资金;这取决于您实现的薪水以及许多其他因素。此外，我在瑞典缴纳税，因此，我参加并支付瑞典的每个人的教育（在高等教育，学费，工资等）。
在第二维中，编程语言没有学位。您学习计算机科学，软件工程，数据科学，信息学，计算机工程等，涉及编程语言（请注意复数！）。您学习编程，不同的范式，设计，测试，要求工程。
我于1987年完成了电气工程学位，是M.SC.在1988年的AI和软件工程中，博士学位在2004年计算机科学（我做了这份时间）。在我的学习期间，我遇到了大约20个编程语言和研究/教育，我遇到了20多个。我在5-6个编程语言中保持知识和技能，从我的角度来看，这与众不同。
回答 7 我20年前赢得了计算机科学理学学士学位。学习编程语言是课程的一部分。那时，我参加的学院学习成本约为5000美元。所以，四年大学费用40,000美元。
当我获得职业生涯的时候，我的喜好和每年比投资更多的投资，就是值得的。
回答 8 我的工程学位+管理期权平均仅需4500亿美元，仅限5年。董事会在城市中便宜，我每月均在大约300美元上学。我于2003年毕业，因为DOTCOM泡沫完成了崩溃。
回答 9 哦，杰瑞，这个答案可能对所有方面有点苦涩。
我不仅学习编程，计算机硬件，数字电子产品和数码控制的数量，而且私人学院约为400美元/年。总共约1600美元。没有生命改变一张纸张的贷款，证明我曾经学习过的东西，这是一辆汽车的新颖性。
现在，令人惊讶的部分是，当时这对我来说这实际上是非常重要的（2006年开始），但我买得起，我也可以同时工作全职工作。质量虽然整体得多，但不会假装否则。
如果你有兴趣，教师非常愿意帮助你学习东西，并且在每门课程中，大约有2岁甚至3人在大约10个通常的书呆子的池中感兴趣。在我一年中最多约80人的休息时间主要是为了易于获得的程度。
然而，在没有上下文的情况下，学院的教育部分是不完整的。所有罗马尼亚人的1/3都被移民了，他们在欧洲，中东，澳大利亚和新西兰都有所拥有的就业机会所说，他们的需求很高。居住在罗马尼亚一般就像生活在半后的神秘世界中。这在过去的三十年中，这更令人作呕，但几个世纪以来就是这样。这次列车甚至是最顽固的罗马人，高于平均水平的机智和获取信息的速度，并了解如何工作。罗马尼亚人的巨大比例是工程师，作为国外各个领域的工程师，或作为罗马尼亚的驾驶室司机和商店卖家的工程师。仍然坚持罗马尼亚的软件工程师，并通过外国公司倾注大规模专门寻求这些角色的罗马尼亚，但即使它们倾向于为更环保的牧场留下，主要是在西欧。
回答 10 大约17,000美元，我的单身汉大致总是毕业于2015年，经过多年的兼职学生。在转移之前，我在社区大学上举办了一半的课程。
回答 11 每年收取1至2万卢比的大学作为费用，你很可能会支付超过那样的费用。除了学费外，这是大学中的一些其他费用和收费的原因。其中一些包括但不限于混乱费，住房费，图书馆费用，实验室费用等。如果您加入2022年，您将在2022年加入2022年的工程学位是4年。
回答 12 更多的教育学生的成本已经前往学生和家庭，以前是大型的
您希望本文。文章引用：自1980年以来，KU的学费每年增加约8.8％，而通货膨胀每年则增加约3.5％。据劳动统计的通胀计算器局称，如果1980年1980年的学费与通货膨胀相比成比例地增加，今天只会为学年支付1,613.62美元，而2013-2014美元的通胀计算器相比为8,396美元。这意味着学生在30年前为同等教育支付更多。
Martin表示，更多的教育学生教育学生的成本已经前往学生和家庭，以前，大多数人通过堪萨斯州堪萨斯州的纳税人支付。
梅尔文表示，该州在20世纪80年代之后改变了教育的立场。最初，教育被视为有益于社会 - 不仅仅是个人 - 通过刺激经济和发展更大的税基。因此，国家通过资金和补助得到了高等教育。然而，到了20世纪90年代，有完整的班次;个人被视为受益于教育，而不是整体社会。
回答 13 首先让我们了解常春藤联盟是什么：正如MasterSportal.com解释的那样，美国的常春藤联盟大学始于八大竞争力的运动学院集团协会。由于他们的运动队开始吸引更多的资金并获得受欢迎程度，学生表现和入学标准变得越来越苛刻和严谨。通常很难进入常春藤联盟机构，因为他们收到了很多应用程序，并且在注册学生时非常有选择。例如，根据Datausa.io，2019年，哈佛大学的本科验收率为4.64％，从43.3千克申请达到2k次招生！与此同时，这些机构往往是世界上最昂贵的学校和大学，学费极高（平均超过50万美元）。
这些机构荣幸地为他们的学生提供了与其他成功毕业生的网络机会，世界上最好的一些成功的毕业生。此外，由于更多的研究拨款，这些大学的教授通常在他们的领域经验更加经验，因为更多的研究拨款针对这些大学。但是，重要的是要注意，如果您的资金有限或者如果您无法录取常春藤联盟学校，还有其他选择追求它们。</description>
    </item>
    
    <item>
      <title>您对作为软件工程师的厌恶是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-do-you-dislike-about-being-a-software-engineer/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:07 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-do-you-dislike-about-being-a-software-engineer/</guid>
      <description>您对作为软件工程师的厌恶是什么？ 回答 1 我喜欢成为一名软件工程师，但我看到太靠近电脑可以让自己在非工程人群的其余部分中有点奇怪。
你看，任何工程职业（我都不会谈论医学，法律或其他采取类似路径的研究，因为我不知道，虽然我相信它类似于你的学年到职业道路要求您深深潜入该主题。这意味着，在学校，虽然其他人在周五和周六晚上去参加党，但您必须花费额外的时间来花在您的实验室和工程项目上。其他非工程人员不一定会理解这一点。即使他们这样做，你也会有更少的时间与其他党的人群进行聚会。无论是与派对人群一起闲逛是好还是坏，那就是我没有答案的东西。然而，你可能会感到自己在大多数其他人之间有点奇怪。
毕业后，这种模式可以继续。你喜欢编码，你认为这很棒。而且你看到了你可以学习，建造的无限的东西，并制作每个人都可以使用和欣赏的东西。而且你做了一个不错的生活，你的工作有很好的津贴，灵活的时间表和一个酷的办公室。然而，当你去社交场景时，你会感到尴尬。你不是那么聊天，小事，以及花费不富有成效的花费。你想知道，我有什么不同吗？然后，您将自己与非在工程领域的大多数人的剩余部分远离。有些人就像你一样，但感觉你与其他人不同。
这并不一定会阻止您在工作中交朋友。实际上，你有更容易在工作中交朋友的时候，他们经常成为持续长时间的最好的朋友。但是你去咖啡馆或一些公共场所学习Java，C ++，云技术，或者它是什么，你认为这是非常富有成效的，给你一个快乐。你喜欢成就感，你觉得这很棒。然而，其他人不一定会这样做，并花费很长时间与电脑让你在非工程人群周围尴尬。
总之，因为成为软件工程师是一个非常终身的过程，路径需要持续的学习和单独工作，所以你花的时间是你不能在哪里度过的地方 - 与朋友和现实世界更少的时间。所以，虽然它是完全可以平衡你的生活，但与人们一起度过更多的时间和聊天，但它需要你的工作之间的持续平衡以及你在工作之外所做的事情。你的生活方式没有正确或错误的答案。但是我想要解释的是，软件工程师的工作本身可以成为大部分时间感到孤独的漫长旅程。
回答 2 我讨厌如何让别人过多的钱。
我会用我知道的人使用真实的生活榜样。该人在入门级开发人员加入了一家公司，并致力于高级。他的薪酬上升每年左右3％，促销率约为5-7％（其中两项）。
此时，加入后4 - 5年，他在他所在地区的高级开发人员薪水的情况下迈出了。最终，他采访了另一家公司的朋友团队，并提供了40％的增加。四零。疯狂的。
公司所做的事情对我来说是困惑的。
他的老板说他们可能是wi
我讨厌如何让别人过多的钱。
我会用我知道的人使用真实的生活榜样。该人在入门级开发人员加入了一家公司，并致力于高级。他的薪酬上升每年左右3％，促销率约为5-7％（其中两项）。
此时，加入后4 - 5年，他在他所在地区的高级开发人员薪水的情况下迈出了。最终，他采访了另一家公司的朋友团队，并提供了40％的增加。四零。疯狂的。
公司所做的事情对我来说是困惑的。
他的老板说他们可能愿意增加5％，但他们甚至无法与其他公司提供的东西匹配，更不用说击败它。在新公司的好处更好，但他将留下原来的工资比赛。
所以他离开了&amp;hellip;&amp;hellip;
但原来的公司做了什么？聘请新的高级开发人员在新的开发人员在新的一款中，然后丢失了大约6个月的开发者由于超级复杂的代码基础，而新的开发人员则结果不如那么少他们只是放手。
所以wtf？这是公司的一部分愚蠢的愚蠢。某种骄傲或其他东西。
他们宁愿让别人走出门，知道它的成本就是更换它们，加上倾斜时间数万美元的数千美元，他们赌博获得了一个有能力的开发人员而不是一个已知的，证明，忠诚的开发人员。
值得庆幸的是，年轻的科技公司了解这一点，许多薪酬适合水平和人才，无论他们在进行到那个水平之前都在制作。
回答 3 我讨厌软件工程的一件事必须学习和使用其他软件工程师创建的不必要的复杂系统软件，以便编写我的软件，例如720个编程语言。
我不是在开玩笑。有720个官方认可的编程语言，所有这些语言都这样做了5件事，所以我们为什么需要720个？
＃1将数据移动到变量和数据结构中并读取它们。
＃2执行添加，减去，多个，划分等计算，例如，逻辑。
＃3执行流控制逻辑，例如，for，for，with。
＃4定义和使用程序。
＃5定义和
我讨厌软件工程的一件事必须学习和使用其他软件工程师创建的不必要的复杂系统软件，以便编写我的软件，例如720个编程语言。
我不是在开玩笑。有720个官方认可的编程语言，所有这些语言都这样做了5件事，所以我们为什么需要720个？
＃1将数据移动到变量和数据结构中并读取它们。
＃2执行添加，减去，多个，划分等计算，例如，逻辑。
＃3执行流控制逻辑，例如，for，for，with。
＃4定义和使用程序。
＃5定义和使用对象。
在微处理器的第一天，我开发了一个实时，事件驱动的多任务操作系统，包括窗口系统，然后我为嵌入式系统使用它的OEM为OEM定制它。它甚至可以将MS-DOS运行为自己的可调整大小的窗口中的任务以及OEM的其他运行任务。我教过OEM的程序员如何在大约30分钟内使用它。当微软的Win32稍后开发时，我很昏昏欲睡。如何创造这样一个可怕的复杂，复杂的东西？我仍然讨厌win32。
我们的编程行业接受了不必要的复杂性，尽可能完全可以，并且不教授学生或鼓励系统软件工程师使其软件和系统易于使用。
要使用Microsoft，Amazon等云，程序员可能会花几个月学习如何使用它们。当您掌握不必要的复杂性时，它们甚至自豪地给您证明。他们真的是羞耻的证书。
如果程序员希望使用Apache和WordPress或IIS和ASP.NET编写网站，程序员可能会过年学习如何充分使用它们。
研究表明，许多软件工程师在一个典型的工作周内常规花费5天，而不是编程，而是如何做出他们想要做的事情，但无法弄清楚如何使用它们使用的系统软件。
当程序员遇到问题时，可能需要数天的时间来弄清楚你错过或错过的愚蠢。
所有软件技能和主题软件工程师在大学中学都很少使用，因为软件工程师花费大部分时间弄清楚如何使用他们需要开发计算机程序所需的所有不必要的复杂的人造系统。
对我来说，除了学习和使用我需要编程所需的其他人创建的不必要的复杂系统软件，所有内容都很简单而有趣。
美国软件工程师的好消息是，我们的行业雇用了两倍的我们易于使用的系统软件。尽管如此，我讨厌学习，并使用其他人创建的不必要的复杂系统软件，我必须用于创建我的软件。
回答 4 观看其他软件开发人员不偿还!!!
我自己是一个软件开发人员，我讨厌忘记我们忘记了我们的社区。
虽然我明白每个人都可以自由地完成他们的东西，但在道德上讲，软件开发商应该考虑帮助更多人寻求帮助。
回答 5 好吧，我可以写101件我喜欢我的工作作为高级软件工程师，有2件事紧张我的神经 -
休息在世界上拥有最聪明的技术，我没有面临任何问题（至少到目前为止）。
回答 6 大多数人都不明白我的工作真的是什么样的。哎呀，甚至许多软件工程师都不完全得到它！软件工程不是关于很酷的新框架，新的编程语言或疯狂代码优化。它不是关于编写代码。它是关于编写为客户创造业务价值的软件，通过一组工具，包括不仅仅是仅编程语言。知道编程语言是最简单的部分。我举个例子：我考虑将Python添加到我的列表中。它看起来互联网只关注它易于学习，简明扼要的事实，简明扼要，而不是括号，我是否想首先在生产中提出Python Web应用程序，最常用的应用程序服务器是什么，如何为所述Application Server设置负载均衡器，如何支持某些数据交换格式，如何从应用程序代码和依此类推分离属性。如果答案是不，不，也许，不是很好，对不起我们没有这些东西，缩进的事情是对我无关紧要的，因为这意味着这种编程语言不是我工作的客户那种融合的工具为了解决我努力解决的问题。</description>
    </item>
    
    <item>
      <title>您建议深化我对Python的了解什么书？我正在做一个在线课程，我想用一本书补充它。</title>
      <link>https://xiangqingw.github.io/posts/what-books-do-you-recommend-to-deepen-my-knowledge-of-python-i-am-doing-an-online-course-and-i-would-like-to-complement-it-with-a-book/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:07 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-books-do-you-recommend-to-deepen-my-knowledge-of-python-i-am-doing-an-online-course-and-i-would-like-to-complement-it-with-a-book/</guid>
      <description>您建议深化我对Python的了解什么书？我正在做一个在线课程，我想用一本书补充它。 回答 1 这几乎绝不是一种语言的书。
但是，如果你想学习一种语言 - 你需要弄清楚如何思考它。
在这种情况下
作品。
回答 2 ID喜欢推荐Al Sweigart的小型Python项目的大书。据姓名暗示，它是故意编写Python项目的。它适用于熟悉编程基础知识的人。实践是一种有效的学习方式。
您还可以查看本书;使用Python自动化无聊的东西。它确保用户与编程的基本面相处得出。从那里，您可以学习，超出Python的基本内容。两本书都是由上述作者写的。
回答 3 您应该了解超出任何单一语言的计算和编程。它是一本书，它从基本上到高级和复杂的程序开发。IAN JOYNER &amp;lt;/ SPAN&amp;gt;
在实际语言设计和编译写作。&amp;lt;/ span&amp;gt;
&amp;lsquo;触摸课程：学习与对象和合同良好的编程（TOC）是一个很好的书来阅读。它没有教导埃菲尔，实际上艾菲尔的功能很少，但用作原则的例子解释说明。这是为了与书的意图保持一致，因为迈耶所说的是倒课程。这不是从自下而上的底层教导整个细节，它从顶部解释，给出整个画面，为什么事情已经完成，然后到了它们的详细信息.Meyer也称之为&amp;hellip;&amp;hellip;你可以立即看到整体，然后解释细节。这就是如何使用广泛的概念，而不是狭义实施细节.. Meyer是一个非常明确的作家，但也非常完整的解释和理由。但这确实给出了为什么事情是他们所处的方式，无论好坏。一个例子，第5章只是足够的逻辑，解释了大量的布尔逻辑在大多数程序员时，需要知道有用（无需成为专门从事Boolean代数的数学家）。在整个章节中，有一个表映射eiffel关键字（也是许多其他语言中的关键字）到数学符号。例如或者到v，以及^。注意我如何为数学符号键入v和carat ^，因为这些符号并不容易键入，甚至是ASCII字符（字符集过去有Bent语言，BCPL使用$（和$ ）而不是{和}自MIT的IBM键盘和字符没有{和}）。但是埃菲尔也使用=平等，所以靠近数学，其中它计算（其他语言具有劫持=分配的语言不是布尔运营商，而是成为副作用运算符，与数学简单的相反）。在该章中，几个盒子突出了划分，以说明概念。eiffel是一种非常清晰的语言，最小的语法噪音（正如他们所说的高信号噪音比是一种很好的语言表达衡量标准）。其他优点是TOC在计算和信贷中给予那些对某些发展思想至关重要的人的背景。这可以形成一个整体计算的平衡视图.Readers将了解这些重要人士的名字，甚至看到他们的照片.TOC在计算中提供了良好的做法。这些人经常在行业中被视为“老穆迪夫斯的教条”，他们想要限制你的Freedom.toc是不是教条，但明确了为什么这种做法将导致质量软件（这解释了TOC的长度）.toc是非常语言灯，虽然它确实在C ++，Java和C＃上有整个附录它涵盖了基本概念的整个范围，以在Lambda微积分（代理）和大规模的软件开发（&amp;lsquo;工程&amp;rsquo;）中。唯一的缺点是在近900页的较长读数，但至少它们是900个屁股清晰度的届是在正确的级别，对大多数程序员的正确深度的正确主题是对这本书的最模糊的东西是标题中的双关语，其中&amp;rsquo;类&amp;rsquo;可以参考OO课程，或大学课程，哪种模糊的猛犸象工作在书店中的书店（网站）中的浏览器，可能不会欣赏本书的广度，深度和质量。它确实有直接字幕学习与对象很好地编程和合同。当TOC以学生和新人编写的编写编程，它仍然是所有从业者的一本优秀的书籍。但是现有的从业者也应该阅读，或者首先阅读：
OOSC还使用埃菲尔来说明概念，但揭示埃菲尔州，它将侧阶段带到主题.Acain oosc是关于生产质量软件的大规模复杂性的背景和如何驯服。如果一个真的需要学习，那么如何驯服。如果真的需要学习，那么。如果一个真的需要学习，那么就是如何驯服埃菲尔，然后&amp;rsquo;埃菲尔：语言&amp;rsquo;应该阅读。当然，一个不应该从一个来源学习整个主题，我推荐其他经典，如Abelson和Sussman的“计算机程序的结构和解释”欢迎来到SICP网站是一个更具挑战性的阅读，但没有这么多的行业背景，因为它具有较窄的专注于功能规划.Toc是由计算中最清晰的思想家之一和最佳作家之一，谁也是基于设计的在一种实用的语言中，也涉及大型复杂软件开发的许多领域，除了仅仅是一个编程语言之外。因此，eiffel是一种用于说明解释的原理的优秀语言C。
回答 4 作为初学者，如果你想学习如何编程 - 意味着能力，然后
＃如果要探索功能;
回答 5 嘘
这很难回答，不知道你正在做的哪个在线课程。其中一些非常简单，所以需要初学者读取更多细节。
我选择了来自我的图书馆的以下3本书。所有这些都是Python上的普通书籍，至少在书的开头涵盖了Python的基础知识。
书1是我教导自己python的书。我专门为此目的使用这本书。
Book 2非常好，并更详细地处理Python。
我理解，这本书3被一些大学用于第一年教导学生进行编程。
所有这些都是非常好的书籍。
回答 6 问题不是这本书。问题是向宗教代码代码所有练习，并使所有这些计划都在工作。
回答 7 阅读和练习3.10.2文档的Python教程
练习延伸和嵌入。
学会使用所有库并知道Python安装可用的内容。
通过实施功能或文档，问题列表 - Python Tracker列表来帮助缓解问题
阅读PEPS以了解设计人员在添加功能时记住的内容。
研究算法并学习何时应用它们。LeetCode非常好。
练习写作软件。
学习另一种编程语言或两个。
回答 8 Python具有根本，整洁，简单的郎
Python是一种着名的语言，为技术劳动提供了巨大的职业机会。 Python职业前景一直是全球持续发展的迹象。 Python是地球上最普遍的编程语言。因此，为了坚持在这个联合国世界，必须与高等教育最有价值的新语言保持最新。专业程序员能够使用Python更简单。此外，新程序员可以有效地学习Python。
Python具有基本，整洁和简单的语言。它的语法，而不是各种不同的计算语言，相对令人明确地逮捕，因为它传达了日常生活中的一部分。使用Python，您不需要与问题语法进行交互。
Jeetech Academy的在线Python编程课程起源于支持Python候选人的覆盖范围，以世界级的培训技术。他们支持学生在这职业中成为他们的实际培训。与任何不同的培训研究所相比，他们以极为廉价的价格展示了最好的Python编程在线课程。</description>
    </item>
    
    <item>
      <title>什么类型的语言是机器语言（即，结构化，面向对象等）？</title>
      <link>https://xiangqingw.github.io/posts/what-type-of-language-is-machine-language-i-e-structured-object-oriented-etc/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:06 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-type-of-language-is-machine-language-i-e-structured-object-oriented-etc/</guid>
      <description>什么类型的语言是机器语言（即，结构化，面向对象等）？ 回答 1 这不是那些。已经开发出所有后续语言类型，以避免机器语言编程的难度。
首先，机器语言几乎没有被人类写成，因为它只是数字。
例如，在旧ZX频谱上，基于Z80微处理器，该程序将打印一个空间：
62,32,215,201。
并不意味着太多了吗？
在这里它是汇编语言 - 这只是一种使用助记符而不是数字写作机器语言的简写方式：
LD A，20
RST 10.
托
汇编语言（且机器语言）没有变量。它只是记忆和r
这不是那些。已经开发出所有后续语言类型，以避免机器语言编程的难度。
首先，机器语言几乎没有被人类写成，因为它只是数字。
例如，在旧ZX频谱上，基于Z80微处理器，该程序将打印一个空间：
62,32,215,201。
并不意味着太多了吗？
在这里它是汇编语言 - 这只是一种使用助记符而不是数字写作机器语言的简写方式：
LD A，20
RST 10.
托
汇编语言（且机器语言）没有变量。它只是具有内存和寄存器（CPU本身内的快速位存储器）。它没有参数的函数，而是必须设置寄存器并跳转到函数地址，推动您在堆栈上的位置，以便您可以返回到那里（幸运的是，机器有呼叫/ RET指令）。
这既是非常简单的语言，也是一个非常坚硬的语言，因为它非常简单。
因此，如果您在理解它时进行编程，并带走类似程序，函数，局部变量，对象，结构的东西&amp;hellip;&amp;hellip;然后您最终有点像汇编语言。带走指令和注册的有用的英语名称，并用数字替换它们，并最终使用机器语言。
回答 2 机器语言都不是这些。它只是表示CPU指令的字节序列。没有一个高级语言编程范例应用于机器语言。在此级别，没有变量，控制结构，数据结构，对象，类，方法/函数等。所有这些概念都由高级语言提供，但最终将机器语言转换为内存位置，条件和无条件的跳跃指令，呼叫/ retu &amp;hellip;</description>
    </item>
    
    <item>
      <title>你如何下行线路代码？</title>
      <link>https://xiangqingw.github.io/posts/how-do-you-move-down-a-line-code/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:06 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-you-move-down-a-line-code/</guid>
      <description>你如何下行线路代码？ 回答 1 如果你的意思是在编辑器中？大多数编辑器都支持键盘上的箭头键，或者如果编辑器处理鼠标输入，那么点击下一行也会有效。
你的意思是在调试器中吗？它在不同的调试器之间不同，但可能有一个“下一个”或“步骤”命令来执行下一行。
根据您是否要执行任何函数调用，可能还有一个“跨越”和“踏入”变体，而无需逐步通过该功能。
如果您不在调试器中，则程序将始终自动执行下一行（或它的等效）。
回答 2 我曾经在一家公司的非技术经理提出过这个天才的想法：发展缓慢，所以他试图激励开发人员通过承诺编写大量代码的奖金来促使开发人员更快地工作日。
我们当然同意了。这是最好的赚钱的方法，对吗？
我们立即开始向代码添加ASCII-ART注释。像这样：ascii艺术生成器（Taag）的文字
此外，而不是这样的代码：</description>
    </item>
    
    <item>
      <title>你想开发自己的NFT网站吗？</title>
      <link>https://xiangqingw.github.io/posts/do-you-want-to-develop-your-own-nft-website/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:06 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/do-you-want-to-develop-your-own-nft-website/</guid>
      <description>你想开发自己的NFT网站吗？ 回答 1 创建自己的NFT市场网站的基础知识
NFT市场网站与其他类型的电子商务网站不同，如何运作。数字艺术品和其他NFT代币是出售，带来和拍卖。我们需要看看基本元素应该是什么，以建造一个成功的NFT市场网站。让我们看看其中一些。
回答 2 重点是什么？如果要点是赚钱，那么与你的时间有很多更高效和繁荣的事情。
NFT是一种产品，就像任何其他产品一样，如果您没有买家，您没有任何东西。您可以构建一个NFT网站，但这只是其中的一半。实际技能是您在您的网站和建立客户的方式。
Hth.</description>
    </item>
    
    <item>
      <title>如何安全地删除计算机中的文件？</title>
      <link>https://xiangqingw.github.io/posts/how-do-i-safely-delete-files-from-a-computer/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:06 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-i-safely-delete-files-from-a-computer/</guid>
      <description>如何安全地删除计算机中的文件？ 回答 1 这取决于您的威胁模型：
希望这能回答你的问题。
请参阅以下文章以获取更多高级方法以从Microsoft Office文档中删除隐藏的数据，个人信息和元数据。
回答 2 这是什么意思？该文件不再是可读的b
关于删除文件的常见误解是它们完全从硬盘驱动器中删除。当您永久删除计算机或回收站被清空垃圾箱。在正常术语中，文件将从计算机中删除，因为它不可见，但情况并非如此。
它只是意味着删除了对文件的引用或指针。
此指针或引用被分配给帮助计算机找到并读取它的文件和数据。随着删除文件占据的空间以及可用空间。
这是什么意思？计算机不再可读该文件。但是，该文件在硬盘驱动器上保持，直到另一个文件或另一个文件保存到同一位置。
因为技术上文件仍然存在，它是使用数据恢复软件来恢复的，以重建文件头，允许计算机再次查看文件。但是，如果未覆盖新数据，软件仅适用。
回答 3 顾名思义，临时文件包含在Windows系统上运行时由不同的程序和应用程序创建的临时存储的数据。
他们将存储某些信息和应用程序的详细信息，以提高其工作并使IT流程更快。因此，临时文件主要存储在Windows驱动器（C :)或已安装应用程序的位置。
要检查这些临时文件的位置，可以转到Windows驱动器&amp;gt; AppData&amp;gt;本地文件夹。在这里，您可以看到一个临时文件夹，其中这些文件将存储.tmp扩展名。或者，您也可以转到Explorer，打开任何分区，并查找.tmp文件，以检查其确切位置。
您能从Windows计算机中删除临时文件吗？
是的，您可以，它可以完全安全地从计算机中删除临时文件。
为什么删除临时文件？
现在是删除计算机的临时文件是个好主意。临时文件占用空间并最终减慢您的计算机并使其难以工作。如果您遇到计算机慢下来，最好删除临时文件。
如何删除临时文件Windows 10？
删除Windows临时文件的最简单方法是访问文件的存储位置并手动删除它们。但是，Windows 10还为我们提供了其他几种解决方案来删除其中的临时文件。
以下是删除Windows Temp内容的两个最流行和最聪明的方法：
方法1：从Windows 10设置
使用更新的Windows 10接口，大部分选项都在其设置中提供。因此，如果您不想转到各个位置，那么只需删除来自多个来源的临时文件。
步骤1：首先，转到“开始”菜单并从那里访问Windows 10设置。从侧边栏中，您可以访问存储设置。
步骤2：在此处，您可以看到存储器如何由不同类型的数据占用。在Windows（C :)驱动器部分下，访问临时文件选项。
步骤3：这将在其存储详细信息中显示Windows 10上的所有临时存储的数据。只需选择要删除的数据类型（或选择全部），然后单击“删除”按钮。
第4步：如果您使用的是旧版本的Windows 10，则需要在存储设置下访问释放空间部分以获取此选项。
步骤5：Windows 10还提供了一个无声的解决方案，可以自动删除临时文件。只需在存储设置中启用存储索感选项，以在30天内自动从休眠应用程序中删除临时文件。
方法2：通过磁盘清理删除Temp文件
如您所见，Windows 10提供了这样一个无声的解决方案，可将TEMP文件删除在一起。除此之外，您还可以在本机磁盘清理功能的帮助下删除特定驱动器/分区的临时文件。要通过磁盘清理删除Temp文件夹，请按照下列步骤操作。
第1步：启动Windows资源管理器并转到“计算机/此PC”部分。选择存储临时文件的驱动器（大部分C：驱动器）。
第2步：右键单击磁盘图标并转到其属性&amp;gt;常规&amp;gt;磁盘清理。
步骤3：这将在系统上打开一个专用的磁盘清理弹出窗口。从这里，只需选择TEMP文件选项，然后单击“确定”按钮以从驱动器中删除所有已保存的临时数据。
谢谢！
这是Wondershare Rescupit的官方Quora账户！
回答 4 让我们看看系统还原的定义是什么
（图片信用：谷歌）
不，我没有运行Windows 8
（图片信用：我自己）
它说系统更改，因此您的文件将是安全的，但您可能需要重新安装的程序。第二张图片解释说更好。它相当冗长的过程，所以如果你可以尝试避免它，除非你真的没有选择。
回答 5 创建文件时，将空格分配在硬盘驱动器上为它。一旦删除，文件引用或分配就会被删除，并且计算机无法再看到它，因为它不再占用空间。它只是占据硬盘上的不同空间，通常是回收站或类似的空间，具体取决于您的操作系统，这必须定期手动清空。这篇文章讨论了删除数据发生的情况，如何管理空间在我们的计算机上，如果可以恢复已删除的数据，如果可以恢复删除的数据。首先，文件将发送到回收站或垃圾桶
除非我们的操作系统在删除文件时执行安全擦除（使用Shift + Delete删除文件），否则删除的所有数据都会首先转到回收站或垃圾。这些分配仍然是我们硬盘驱动器上的空格被分配给我们选择从我们的硬盘驱动器中删除的文件。唯一的区别是在回收站或垃圾箱中不允许在回收站或垃圾箱中执行或修改这些文件。当您尝试打开回收站中的文件时，它不允许您打开它，直到您首次恢复基本上意味着您正在更改其引用和文件可以再次查看的文件。从计算机中删除文件时，将指针更改为回收站的指针这意味着空间没有变化，但是读取的文件的方式被改变。该文件已恢复，指针再次更改为repseable一个可读的文件。将所有分区更改，回收站和垃圾有一个预先配置的大小限制。文件是d ELETED在我们的计算机上，在某些时候，将达到大小限制。在此之后，将删除回收站上的最旧的文件以使空间用于更多已删除的文件。当从回收站中删除那个旧文件时，它可以“要恢复t的意思是，最旧的文件是好的。要查找回收站的大小是右键单击图标回收站，然后从下拉列表中选择属性。这显示了每个分区的文件大小您的硬盘。在上面的图片中为驱动器C显示大小。也可以根据同一字段中的需要更改大小。从回收站中删除该文件的文件</description>
    </item>
    
    <item>
      <title>如何编写Python程序以在1到100之间打印5的所有倍数（包括1和100）？</title>
      <link>https://xiangqingw.github.io/posts/how-do-i-write-a-python-program-to-print-all-multiples-of-5-between-1-and-100-including-both-1-and100/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:06 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-i-write-a-python-program-to-print-all-multiples-of-5-between-1-and-100-including-both-1-and100/</guid>
      <description>如何编写Python程序以在1到100之间打印5的所有倍数（包括1和100）？ 回答 1 如何编写Python程序以在1到100之间打印5的所有倍数（包括1和100）？
我认为包含1是错误的提到的
五个倍数应该从五倍开始;-)
继承人在Python中打印它们的一种可能方法</description>
    </item>
    
    <item>
      <title>我们如何在IF条件内使用递归函数？</title>
      <link>https://xiangqingw.github.io/posts/how-can-we-use-the-recursive-function-inside-the-if-condition/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:06 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-can-we-use-the-recursive-function-inside-the-if-condition/</guid>
      <description>我们如何在IF条件内使用递归函数？ 回答 1 一个例子可能是：开始
你几乎不得不。在任何类型的递归中，你必须有一种方法来逃避。如果你不这样递归永远不会结束，这很容易告诉，因为你的电脑会用完内存。
您对IF语句的操作是检查条件是否为真或假的检查。如果True会递归，如果没有您完成此迭代，请返回上一个迭代。最终你会回到第一次迭代，你已经完成了。还有其他方法可以检查失败吗？当然，但如果声明可能会是最常用的。
一个示例可能是：从C驱动器开始，检查子目录。如果有任何（true）采取您获得的第一个，并提出完全相同的检查（重复）。如果您没有找到任何（false），请返回上一个实例并检查下一个实例。
回答 2 你的意思是这样的东西吗？</description>
    </item>
    
    <item>
      <title>是一个自动柜员机（ATM）连接到数据库吗？</title>
      <link>https://xiangqingw.github.io/posts/is-an-automatic-teller-machine-atm-connected-to-a-database/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:06 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-an-automatic-teller-machine-atm-connected-to-a-database/</guid>
      <description>是一个自动柜员机（ATM）连接到数据库吗？ 回答 1 ATM机是一种硬件，在嵌入式系统编程下的编程方面。C / C ++语言在这里非常有用。它适用于访问银行提供的Web服务作为ATMC。
ATMC中使用的编码是PRO * C.Banks维护一个名为ATMC（ATM控制器）的模块，作为服务器，以响应ATM发送的请求。
Pro * C / C ++编程工具使您可以在C或C ++程序中嵌入结构化查询语言（SQL）语句。Pro * C / C ++预编译&amp;hellip;
回答 2 ATM连接到数据中心
让我们只是说，这些数据中心的复杂性是Quora的能力和您的理解。当然有数据库。
我在一个负责管理200个自动支持所有其他服务器的支持功能的人团队上工作。这些是监视，常规升级和故障排除的根本原因每秒数千个Allrms。
ATM，Web访问和电话访问，它们都通过不同的网络和用户界面访问相同的数据库。但是有许多数据库，重复，日志，用户和帐户选项，保险，股票期权等等等等。
我曾经工作过的银行，每天递减数十亿交易。不是$$$，交易。处理此类负载需要原始的主动支持和自动化活动。
回答 3 在现金的情况下，计数更容易。不
几年前，我不小心关键在ATM上的支票中的错误价值（$ 470.00而不是430.00美元）。我在邮件中收到了一周的通知，后来告诉我，由于我的输入错误，他们借用了我的帐户40美元。所以，有人审计了它。
在现代时代，我认为审计越来越受到自动计数器和检查图像识别的驱动。例如，最近我有170美元的支票加入为110美元。看着支票上的可怕的笔迹，我可以看到读者在哪里出错。快速呼吁银行固定。
在现金的情况下，计数更容易。毫无疑问，有一些自动化的过程来检查索赔金额的实际金额。现代ATM（在美国）使用没有信封，并将直接阅读美元图像来计算它们。我假设加拿大金钱存在类似的设备（谷歌在几秒钟内在Costco找到了一家加拿大银行柜台柜台）。
由于使用人员审计可以变得昂贵，因此假设加拿大的ATM逐渐转向自由的系统。新的聚合物加拿大钞票可能非常适合自动处理。
回答 4 是的，他们与他们的一部分和从那里到达互联网的任何银行和任何人的银行相关联。银行使用各种数据库来保存客户信息。</description>
    </item>
    
    <item>
      <title>是否可以在PEGA应用程序中重写.NET代码？希望看到它们是否可以在PEGA中重写（.NET代码）的可行性？如果是，请告诉我如何？或任何有用的来源。</title>
      <link>https://xiangqingw.github.io/posts/is-it-possible-to-rewrite-the-net-code-in-the-pega-application-want-to-see-the-feasibility-of-whether-they-can-be-rewritten-net-code-in-pega-or-not-if-yes-please-let-me-know-how-or-any-source-that-would-be-helpful/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:06 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-it-possible-to-rewrite-the-net-code-in-the-pega-application-want-to-see-the-feasibility-of-whether-they-can-be-rewritten-net-code-in-pega-or-not-if-yes-please-let-me-know-how-or-any-source-that-would-be-helpful/</guid>
      <description>是否可以在PEGA应用程序中重写.NET代码？希望看到它们是否可以在PEGA中重写（.NET代码）的可行性？如果是，请告诉我如何？或任何有用的来源。 回答 1 是的，您可以在C＃（或许多其他语言）中重新实现PEGA中的代码。没有人会有一个可行性研究，它将是一个大规模的承诺，需要对PEGA应用程序表面进行详细分析，或者访问他们的源代码。您应该想要了解您需要的功能，那么它们是否以更好的形式提供仍然是现成的，否则要坚持差异化的发展，而不是重新恢复事物。
回答 2 不，必须在谷歌的南达·普利比南达·普利有超过1000多个程序员。这就是大多数科技公司的情况。
是的，大多数人都可以编写代码，但这不是他们被雇用的原因。 PICHAI没有聘用编程技能，而是为了产品管理技能。在大多数科技公司，产品经理升到顶峰。
Sundar Pichai的薪水是多少（谷歌）？
为什么产品管理技能比程序员如此高？
程序员编写代码，有数百万人可以编写良好的代码。但最好的代码并不意味着成功的产品。钍
不，必须在谷歌的南达·普利比南达·普利有超过1000多个程序员。这就是大多数科技公司的情况。
是的，大多数人都可以编写代码，但这不是他们被雇用的原因。 PICHAI没有聘用编程技能，而是为了产品管理技能。在大多数科技公司，产品经理升到顶峰。
Sundar Pichai的薪水是多少（谷歌）？
为什么产品管理技能比程序员如此高？
程序员编写代码，有数百万人可以编写良好的代码。但最好的代码并不意味着成功的产品。技术产品的成功需要更多的东西而不是代码。
另一方面，产品经理为该产品提供了更多的领导作用。它需要远远超过技术技能。它需要业务，市场，以及最终用户对产品的理解。它们符合产品的人力和技术元素。
所以，简而言之，这几天很容易编码，考虑到了数百万的程序员，但要知道代码是一个挑战，只有很少的人真的很擅长。</description>
    </item>
    
    <item>
      <title>Delphi编程语言在2021年是多次流行的？</title>
      <link>https://xiangqingw.github.io/posts/how-popular-is-the-delphi-programming-language-in-2021/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:05 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-popular-is-the-delphi-programming-language-in-2021/</guid>
      <description>Delphi编程语言在2021年是多次流行的？ 回答 1 然后
我是一个古老的德尔福编码器，永远不会与c＃和平联系。关于它的事情总是错误的方式摩擦了我。
所以我的答案。 C＃，通过一个长射击，但如果你真的想要帕斯卡，请使用拉撒路而不是德尔福。
Embarcadero持续的Borlands遗留了可怕的价格过高的软件，通过将其放出学生的范围来锁定新编码器。启动需要在很长一段时间内保持的新项目是不负责任的。慢慢地Delphis开发人员基地正在出于行业而衰老，没有千禧年或ZS正在接受培训。它只是不再安全赌注了。
这是一个真正的耻辱。我喜欢Delphis语言，虽然它肯定地显示其年龄，但平台总是富有成效。但是C＃在功能集，支持以及微软与交叉PLAFORM UI一起将其行为一起进行，甚至可以最终获得更多跨平台。虽然拉撒路是那个尊重的双王之手。
如果你不能没有Delphi，使用拉撒路，开源替代品。 IDE在我看来，2019年比Delphis Xe Messes更稳定，它不会摧毁您的银行余额，它得到了强大的开发人员基础。
Dekphi是IT世界的伟大悲剧之一。回到90年代，这是一个十年的课程前面。它价格合理，哈哈德是一个巨大的开源Ecodystem的组件和图书馆，是生产和生成闪电快速可执行文件的富有成效和生成的闪电。 Visual Basic是它唯一的竞争，VB是可怕的。但随着时间的推移管理只是摧毁了整个产品系列，痴迷于神秘的臃肿的中间件和项目管理工具，没有人关心，它将价格推出如此之高，低端套餐将是初级编码器的薪水月份你将有望保持最新状态。
然后，微软偷猎的德尔普本来可能是非常截然的铅开发人员，他们建立了点阵和C＃，从Java，VB和Delphi中取得最好，并免费释放它。
Borlands的反应总是为了提高价格，并尝试通过出血所困扰系统的开发人员来淘汰失血。直到最终它被卖给了Embarcadero，谁刚刚做了更多相同的。
如果它没有对伊斯伯科的管理没有，Delphi可能一直占主导地位，而且它没有是一个真正的耻辱，因为在所有的Cruft下面，如果老化，语言，仍然是一个优秀的
回答 2 Delphi / Object Pascal目前是根据Tiobe指数和上升的14E最受欢迎的编程语言。在您更密切地检查其他语言之前，这听起来不令人印象深刻。
所有更广泛使用的编程语言都是开源的。Delphi / Object Pascal是Tiobe列表中的第一个，它不是开源，甚至相当昂贵。如果您忽略开源/免费语言，那么Delphi / Object Pascal是世界上使用的＃1使用语言。在90年代中，当开源不常见甚至是非存在的，Delphi在Tiobe指数中展示＃1。
我认为，Delphi仍然像90年代一样受欢迎，但是从那时起，全球程序员的数量是指数增长的，而且他们中的大多数是现在使用的免费工具。然后我知道6个程序员，今天我可以姓名至少150. Delphi的市场显着减少了，但仍然数百万今天正在使用它。
回答 3 我的第一次商业开发经验是涡轮帕斯卡/对象帕斯卡尔。我没有继续使用Delphi，但我知道那些做了很多人。自从&#39;92以来，我没有触及对象帕斯卡，但我已经注意到了英国（小）德尔福发展社区的发展，仍然有联系。
主要原因是
我甚至没有提到帕斯卡（以及德尔福）的广泛看法是一种玩具语言，它对教育仅有用。在正确的时间内制造的正确选择，可能已经被撤消了。
Borland在公共网上不是一件事的时候发表着名，开源很少知道（又清楚），大多数开发工具都是非常昂贵或共享软件（便宜但业余）和DOS是最常用的操作系统在PC上。它没有很好地应对窗户的到来，更不用说其他所有变化。 Borland的主要产品（廉价但优质的开发工具，IDE，Smart Linking）停止了独特或有吸引力。机会错过了。 Delphi落后于市场/思维份额。
我假设你喜欢Delphi，并认为这是一个很好的语言。这是美德无所谓。
采用计算机语言的运气和时间更重要。 Delphi运气不好，时间差。它不太可能得到第二次机会。
回答 4 Delphi是迄今为止开始编程的最佳选择：
回答 5 Pascal / Delphi（Embarcadero Delphi社区，Embarcadero Delphi Rad Studio 10.3.1）和免费Pascal / Lazarus-IDE在程序员社会中的非官方活动中非常受欢迎。
非官方，程序员喜欢帕斯卡尔/德尔福/免费帕斯卡尔/拉撒路，但官方，他们从不承认使用这种技术，他们羞辱。
Pascal / Delphi程序员从来没有把那种信息放在CV中，他喜欢或使用Pascal / Delphi。
Delphi / Pascal Programmers羞辱Delphi / Pascal，并投入使用Microsoft C＃，Python，PHP或今天酷炫，非常受欢迎的CV。</description>
    </item>
    
    <item>
      <title>Windows 7和Freedos的替代操作系统是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-are-the-operating-systems-that-are-alternatives-to-windows-7-and-freedos/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:05 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-are-the-operating-systems-that-are-alternatives-to-windows-7-and-freedos/</guid>
      <description>Windows 7和Freedos的替代操作系统是什么？ 回答 1 原始问题：Windows 7和Freedos的替代方案是什么操作系统？
目前支持：Windows 8.1，Windows 10，Windows 11以及任何当前支持的Linux发行版以及任何当前支持的BSD UNIX的味道。Freedos不是一个操作系统;它更像是一个臃肿的文件加载器。
回答 2 理论上是，或只要您的计算机保持工作。 Microsoft现在已停止支持Windows 7，仅向您支付年度订阅的人提供安全更新。此订阅将在未来3年内同比增加。微软可能会扩展它，具体取决于它的商业意义程度。
您无需订阅安全更新订阅以使用Windows 7进行，但每个月都允许您的计算机可能具有越来越多的漏洞，因为它们被发现和利用。这使网上银行和购物非常有风险，以及一般在线使用，包括电子邮件。
如果您要断开互联网的Windows 7机器，并且对已安装的软件感到满意，您可以很高兴地使用它来说视频或照片编辑多年。无论是明智的，还是另一个故事。
回答 3 Windows 7和Freedos的替代操作系统是什么？
个人和商业计算机最受欢迎的替代品是Mac OS和Linux。但是，世界上有许多用于各种设备的操作系统。
回答 4 基于10天的经验：
pros
cons
编辑：
回答 5 Windows 7免费下载Microsoft网站.Windows 7捕获是，您必须在30天内激活它。之后，它是合法的，不是免费.But。围绕Daz称为Windows 7装载机的程序，这很容易和直接使用。实际上它是Windows 7的裂缝，这是避免其复制保护系统的裂缝。所以，从技术上讲，你有你的操作系统，免费运行。法律上，你不拥有操作系统。如果您在家庭计算机上使用它，您可以（并且很可能会遗漏此问题，但如果您必须在学校，在学校，大学的计算机上安装Windows 7，那么它更明智的购买法律许可证工作或学习。警察可以来问你（或，最有可能，你的当局）你是否拥有所有软件的许可证，并且可以强加一项罚款，即将被你的同事，但是你的同事，老板或者你的老师。
回答 6 非常仔细阅读此操作如果您是操作系统的新手，请非常仔细地仔细阅读。如果您是操作系统的新手.Edit 1.29 2019年8月
我要感谢大家的欣赏我的弗兰克和大胆的评论，你们所有人都知道它已经写过了一年了，我已经写了这个答案，许多人拒绝了我，并问我有什么改变或发展的答案Windows 10在这个时间内使用了Microsoft在W10上发布了几个更新&amp;hellip;所以，所以，来自Microsoft的这个产品有常规更新。但是我们必须调查的实际事实是这些更新对于您的操作系统非常有用？Microsoft提供的大多数更新修补程序是为了1）只是为了收紧其许可使用，2）收集有关产品和第三方产品的更多信息.3）要开发广告的更多收入.4）将客户绑定与产品绑定或为用户制作OS监狱。（由于不必要的安全更新，这也将与OS绑定您的宝贵数据，如果您不够小心。 ）5）部分无意中间谍在其用户，谷歌这样做，yandex是这样做的，为什么微软必须留在后面，所以他们决定，让我们做到!!!和微软本身证实他们的新愿景不是提供完美的产品，所以他们正在提供Windows 10作为服务，所以我们都知道一个完美的产品可以持续一生，但生活的完美服务是一个神话，所以微软所做的是，它过度运行并摧毁了它的使用审查。新的更新.IM仍然不满意，对Windows 10 Pro，Windows 10 Pro令人失望.IEVEN以自两年以来，在我的Office PC中强制使用这款恶魔操作系统，并使我的生活非常悲惨，通过微软的故障或目的完全缺陷.1）半频道更新真的没有帮助，一旦在System驱动器上运行，在低内存上运行，有或没有安装更新。虽然我将我的所有数据存储在D：驱动器上，但是另一个故事。我必须手动删除那些愚蠢的更新。其他c：drive将停止.2）有除了在没有开始按钮的用户播放W8.1时，在W10中添加了W10的W10中没有变化，在W10中加入了W10，在没有启动按钮的情况下，在W10更新中为W10更新的W7相比，有一些自定义，请在W10更新中添加了一些自定义。 3D图形用户界面。但是我不知道为什么W10下降他们的图形到二维看起来像徽标，图标和界面，它很糟糕，当我突然从我的个人XP或Windows 7切换到Office Windows 10 PC.I感觉我正在看一个克隆的Linux发行版，试图模仿微软Windows但失败了.Microsoft损失了它的原创性这真是太苛刻，但这是真理。错误而不是完全终止进程它将锁定背景中的过程和关闭应用程序。如果您打开Internet Explorer，您将只能获得无响应的空白用户界面。我们必须签署系统并必须签署再次登录，在最坏的情况下重新启动是必要的。 Microsoft没有解决他们的问题.Printer大多数时间都行为，当您从内置默认图片App.Windows照片查看器中打印到Windows 7是千倍于此rappy应用程序。如果您需要更多功能，我们需要购买更多功能Microsoft升级或最新的Microsoft Crappy Office Suite，它也是云基于云和Internet连接的基础。 ，其他IS可执行应用程序控制面板在桌面模式下工作.Microsoft在这两种模式中提供了相同的选项，但它们使用了两个并行应用程序来绕过用户设置.YES，Microsoft已变得非常狡猾!!! 6）BitLocker Drive ENC从一开始就通过W10打开了回收，所以你不能使用第三杆备份软件备份操作系统，首先要禁用，加密，这将需要很长时间，取决于你的硬盘大小.7）Microsoft Edge浏览器非常无用为什么甚至他们都在W10中添加了它。我们可以使用Chrome或Firefox而不是具有非常丰富的功能和高度自定义。互联网资源管理器8向上所有较高版本都变得非常多，并且Active X功能甚至就像它使用的工作一样在IE中，所有领先的行业应用和教育机构使用Active X，这就是他们更喜欢Windows XP，Windows 7.</description>
    </item>
    
    <item>
      <title>在c &#43;&#43;中使用printf是一个不好的做法？</title>
      <link>https://xiangqingw.github.io/posts/is-it-a-bad-practice-to-use-printf-in-c/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:05 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-it-a-bad-practice-to-use-printf-in-c/</guid>
      <description>在c ++中使用printf是一个不好的做法？ 回答 1 我们在这件事上有两种思想。
好的
打印f的一些非常严重的优势。其中一个最明显的是它可以允许比iostreams和机械手更紧凑的格式化。例如，让我们考虑这样的代码：</description>
    </item>
    
    <item>
      <title>在C / C &#43;&#43;中，为什么人们声明指向int * x而不是int * x？</title>
      <link>https://xiangqingw.github.io/posts/in-c-c-why-do-people-declare-pointers-as-int-x-instead-of-int-x/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:05 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/in-c-c-why-do-people-declare-pointers-as-int-x-instead-of-int-x/</guid>
      <description>在C / C ++中，为什么人们声明指向int * x而不是int * x？ 回答 1 在C / C ++中，为什么人们声明指向int * x而不是int * x？
C / C ++并不意味着什么。 C和C ++是两种不同的（但相关的）语言。没有C / C ++语言。我会假设你的意思是c和c ++。
编译器不关心你是写入int * x或int * x。令牌之间的白色空间是微不足道的（除非你需要至少一个空间来分隔两个令牌，那不是这里的情况）。
编写INT * X的那些程序员这样做是因为它遵循语言语法。同样，如果您真的想要，您可以编写A + B * C，但编译器将忽略空格并将其视为等同于A +（B * C）。
在C中，通常的样式是将*与变量名称相关联：int * x，主要是因为kernighan和ritchie使用了这种风格。 （Dennis Ritchie发明了C语言; Kernighan和Ritchie共同写出了语言的原版。）
另一方面，在C ++中，最常见的样式是写入int * x。这是，据我所知，完全是因为Bjarne Stroustrup，C ++语言的创建者更喜欢这种风格，并在他的书中使用它。
INT * X表单更紧密地跟随语言语法。宣言的基本意义</description>
    </item>
    
    <item>
      <title>在Golang设计精确的互联网速度测试的技术和软件组件是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-are-the-technical-and-software-components-for-designing-an-accurate-internet-speed-test-in-golang/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:05 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-are-the-technical-and-software-components-for-designing-an-accurate-internet-speed-test-in-golang/</guid>
      <description>在Golang设计精确的互联网速度测试的技术和软件组件是什么？ 回答 1 如果使用标准HTTP客户端IO.BYTEREADER [https://pkg.go.dev/io#bytereader]可以被覆盖，以便在单独的通道上提供元数据，遥测和统计数据被客户端接收到数据。可以在不需要外部库或组件的情况下构建核心功能。
回答 2 独立行行性和并发性。
Internet速度测试应指示您的系统可以从因特网上的源同时接收多少，然后单独发送到目的地。这应该独立于系统性能的限制以及每个远程系统的任何拥塞及其与Internet的连接尽可能多。毕竟，您正在尝试进行互联网速度测试。
这对你的解决方案意味着什么？
在用户结束时，它意味着同时发送到多个合作伙伴或接收来自多个合作伙伴，优选地在不同的线程上。合作伙伴理想地应在世界各地的多个连接的数据中心。这个想法是让一切忙碌并发。
回答 3 正如其他人所指出的那样，oOkla等速度测试网站在其测试站点和设备之间测试了速度。虽然他们称之为互联网速度，但它真的不是。这是您的设备与他们之间的那一点的速度，希望您可以获得最快的速度。这就是为什么每次使用OOCKLA运行速度测试时都会获得不同的速度，以及为什么不同的速度测试站点会产生不同的结果。
连接到站点下载文件时，您可能会与OOCKLA相当远地连接到一个站点，并到执行的服务器，而不是简单地运行速度测试。虽然大多数速度测试站点在非常快的连接上，但许多下载网站不是。许多下载站点也在承诺中严重，导致他们为您的下载提供服务，以及许多其他人更慢。
您真正的互联网速度是您和您连接的设备之间最慢的链接。它不能更快​​。
回答 4 我会同意，但我也知道他们的使用通常是不确定的，以你关心的任何东西发表评论。例如，可以使用AT＆T获得22 kbps，因为您的ISP绝不是AT＆T正在缩短您或以其他方式欺骗您。只是当时交通的状况。
回答 5 许多ISP都有自己的速度测试工具。虽然他们可能不会坚持，但他们肯定会敦促您专门在这些平台上测试您的互联网速度。
这是技术解释：
通常这些速度测试平台，ISP建议在内部开发，更重要的是，它们托管在最佳或最近的服务器上。
观察到这些速度测试平台几乎绝不允许您选择远程服务器。这是因为这些平台被锁定到某个遥控服务器..在现实中。
附加额
许多ISP都有自己的速度测试工具。虽然他们可能不会坚持，但他们肯定会敦促您专门在这些平台上测试您的互联网速度。
这是技术解释：
通常这些速度测试平台，ISP建议在内部开发，更重要的是，它们托管在最佳或最近的服务器上。
观察到这些速度测试平台几乎绝不允许您选择远程服务器。这是因为这些平台被锁定到某个遥控服务器..在现实中。
此外，这些平台不允许在测试期间设置时间。
速度测试平台省略了很多大量的测试参数，例如Ping，延迟，抖动和相当于显着影响结果的引擎盖下的智能度量。
从本质上讲，ISPS巧妙地强迫您对其在高度锁定和不可配置的平台上进行速度测试，其范围和功能严重。
他们可能会这样做，以获得最佳或最佳结果。
但是，还有一种更合理的原因：
ISP无法保证或接受由第三方速度测试平台提交的测试结果的绝对真实性，完整性，道德和技术方面。
速度测试广告行：Reliance Jio Moves Metropolitan Magistrate，Esplanade，孟买对抗Airtel和Ookla - Et Telecom
此外，第三方测试平台旨在提供更深入的深入和深入详尽的概述正在测试的互联网连接的条件。大多数ISP都不希望他们的客户能够高度了解服务并了解更精细的方面。
结论：第三方和/或流行的速度测试平台可能会或可能不会为您提供准确的结果，但您的ISP宁愿相信他们自己开发的工具。
所有图像源：屏幕截图。
回答 6 速度测试仅在给定时刻测量因特网（机器和测试机器）的任何两个给定点之间的网络吞吐量。这考虑了机器和测试机器之间的所有链接，结果取决于整个链中最薄弱的链接。这两个点之间的网络路由可能在任何时刻都改变，你会得到不同的结果。如果您使用Wi-Fi，则尤其如此，因为连接质量不断变化。如果你想看看两点之间的路线是什么，请使用像TRACEROUTE这样的工具查看它在大多数情况下拍摄多少跳，它可能超过15.这可能会一下子测量很多链接而且这些链接中的任何一个都可能是瓶颈。
需要考虑的另一个因素是每个测试应用程序可以使用来自另一个的完全不同的测试方法。
此外，通常测量的是HTTP传输的平均吞吐量。它不会为您提供有关非HTTP协议可用的速度的任何有用信息（例如RTMP）。它下载并上传特定大小的文件，并计算需要多长时间。你最终得到的是那个转移的平均速度（它可能，并且可能已经做到了，在测试期间的不同时间越来越慢）。虽然很好地给您一个粗略的连接性能概念，但它绝不是对WAN连接速度的准确测量。准确衡量的唯一方法是将测试服务器放在ISP的路由器上和您的客户端上，其中只有一条路线。
如果您要在路由器上放置测试服务器（如IPerf）和笔记本电脑上的客户端，您可以测量Wi-Fi连接的吞吐量 - 并且您可以发现当您的计算机时连接在300Mbps（或无论您的PHY率是什么），您的实际吞吐量将小于那个。客户端和您自己的家庭网络之间的Wi-Fi连接可能是整个链中最可变的链接。
回答 7 要回答您的直接问题 - 下载和上传文件并测量时间是完全如何完成的。更多的工作是制作一个漂亮的客户，贝尔斯和吹口哨，如实时反馈和图表。在上载中下载中的任何故障，需要由于网络故障而导致重传的重传 - 这是一个准确的网络流量如何在损失连接上执行的准确表示。
在我脑海中对互联网速度测试有两个挑战：
秘密的额外使用快速使用它是由Netflix托管的 - 这意味着它是一个SpeedTest，也表明ISP是否正在对Netflix进行困扰，如果您的SpeedTest.Net导致您的速度很大快速结果。 Netflix的强大CDN网络与主要交换点和各种ISP位置有关，意思像其他速度测试，在大多数情况下，它将在地理上和拓扑上靠近您的测试设备。
回答 8 一点都不。它完美的是做到它需要的东西。</description>
    </item>
    
    <item>
      <title>如何轻松击败YouTube算法？</title>
      <link>https://xiangqingw.github.io/posts/how-can-i-easily-beat-the-youtube-algorithm/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:05 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-can-i-easily-beat-the-youtube-algorithm/</guid>
      <description>如何轻松击败YouTube算法？ 回答 1 你没有。任何导致您“击败算法”的方法都不会以您打算的方式工作。让我们看看为什么。
检查诈骗网站。明显的。不要访问承诺销售您订阅者或观点的网站。不那样工作。你不会获得有机内容，你不会成长，你不会学习。
短裤。似乎是一个简单的方法，在youtube上变大，对吧？ YouTube的算法真的向人们推动短裤，他们每六秒视频获得成千上万的景色！不仅如此，它并不难！错误的。如果您正在寻求擅长YouTube或赚钱，那么短裤实际上是不可能的利润。您可以在视频上获得每百万只汇率的折扣;虽然10分钟+视频的一百万只观看率大约十大盛大。此外，通常，短裤通道获得更少的后续交互，例如订阅，观看其他视频等。
经常发布。很明显，这些日子的YouTube是越来越多的数量，而不是质量。这似乎是“击败算法”，但不是很长。每天上传两次以上是不可能从业余创造者开始的，你会非常快速地耗尽想法。增长率停滞不前，你会失去激励，并且算法最终将推动你的相关性。
那么实际工作是什么？好吧，如果你只想击败算法一次，你可以尝试做一个涉及以0.25速度播放视频的技巧。这样，您可以获得400％的受众保留。然而，这只是一个故障，你永远不会成功毛刺。唯一的方法是努力工作，专注于制作内容，并且可能在其他平台上发布。悲伤地，Tiktok，已成为YouTube增长的跳板。如果你愿意，那就拍摄了这一点。击败算法没有简单的方法。
回答 2 许多新的YouTubers努力让自己在你的管世界中知道。除非你知道什么，如何以及何时执行内容，否则你可能很容易在你的管百慕大三角丢失。
这个我在网上找到的人超级成功，并有一个免费的培训网络研讨会。他展示了他如何破解你的管算法并增加他的订户和销售。使用这些简单的提示和技术，人们正在变得更好。点击此处查看免费培训。
回答 3 2）排名。较小的视频子集
Google将于2016年更改了YouTube算法，以由他们的人工智能公司深入思考的新手。它使用深度学习神经网络来优化用户预期的手表时间。
该算法有两个步骤，两步都使用多层神经网络。
1）候选生成。这为来自YouTube的整个视频语料库中的用户选择了几百可能的视频。它使用了基于视频的粗略个性化标准，这些标准也通常被观看类似视频的人，以及人口统计数据的相似性。
2）排名。每个视频的较小的视频子集每次被评分为预期的手表时间。这使用了数百个功能来尝试预测手表时间。例如用户在同一频道中观看的视频数量，在观看视频之前搜索查询，用户在同一主题上观看视频。
使用两个阶段的部分原因是因为问题的规模。 YouTube有大量的视频快速更新。这意味着例如，刚刚在所有视频中运行第二阶段算法是至关重要的。
在我看来，这两个阶段算法具有此标准的算法导致YouTube推荐短期上瘾视频，选自一小集流行视频。
虽然它使用复杂的预测算法，但它具有非常不熟练的标准，这些算法是优化的。想想从拯救的蹒跚学步获得电视推荐，而不是说专业的电视评论家。
谷歌论文有关该算法的全部详细信息：YouTube建议的深神经网络
回答 4 假设您正在观看新闻或其他视频，您喜欢视频的一点，您也必须与您的朋友分享此类，但您不知道如何
YouTube在全球和印度拥有20亿用户，根据印度的时代报告是26500万。 YouTube已经提供了很多功能，使其易于使用。
但我知道youtube的一个技巧。它肯定会帮助你。
在这里我想举一个例子，
假设您正在观看新闻或其他视频，并且您喜欢视频的一点，并且您也必须与您的朋友分享这个，但您不知道如何将其发送特定点。
然后这个技巧对你有所帮助
遵循此方法： -
打开YouTube App&amp;gt;选择要播放的视频&amp;gt;单击“共享”按钮&amp;gt;单击“复制”按钮&amp;gt;将链接粘贴到您想要的位置&amp;gt;复制链接？T = 00m00添加此秘密公式（键入所需的时间）向您的朋友展示视频）&amp;gt;发送它
你可以看到上面的照片。我分享了一个令人印象深刻的伎俩。
您可以看到视频从链接中提到的时间开始。你应该肯定会试一试。对你有用。
我希望你从中获得一些知识
谢谢
回答 5 确保在频道和视频中使用一些相同的核心YouTube标签，以便您可以更好地了解您的类型和内容和频道类别。它还使YouTube算法更容易显示在其他视频的推荐部分下的视频。
当您播放30秒或更长时间时，YouTube将视图视为计数。现在，如果视频短30秒，所以youtube会根据完整的视频播放计数。&amp;hellip;重播视频将提供计数。如果您观看了50次视频，则将添加50个视图到总数。
回答 6 你好朋友！！
主要目标不是击败算法并成为它的朋友。
有5个点进入yt算法，
我们将一个接一个地完成它，
视频标题是重要的，因为它是youTube的算法将如何知道搜索关键字进入其搜索引擎时的搜索。所以当你为视频提出标题时，请记住。它应该是正确的关键词。如果您在TI中置于Brocolli健康益处
你好朋友！！
主要目标不是击败算法并成为它的朋友。
有5个点进入yt算法，
我们将一个接一个地完成它，
视频标题是重要的，因为它是youTube的算法将如何知道搜索关键字进入其搜索引擎时的搜索。所以当你为视频提出标题时，请记住。它应该是正确的关键词。如果您在标题中展现了Brocolli Health效果，视频是关于在餐厅销售食物，那么人们将不看得更多。这将降低您的参与率，YouTube算法将永远放弃您。所以做适当的关键词研究。
2.描述
是的，描述很重要。通常观察到，该算法将在描述中占用前两到三个关键字，并将视频排列。您可以随时聘请Fiverr上的某人为您完成所有这些工作，或者如果您没有这样的事情，您可以自己做这件事。正确地在你的第一个句子中选择你的一句话，你完成了！
3.缩略图
如果您是该字段中的新手，请确保您的缩略图有一致性。您的第一个视频艺术不应该说5种愚蠢的方法来让自己泄漏自己，下一个视频有完全不同的艺术，其中有一张Godzilla的图片。不，如果你是新的，那么一致性很重要。有一张你的照片和一些艺术描绘了视频可能的建议。然后又一张你的照片再次在其他视频中有一些东西。 （每个缩略图中的一张照片可能只是做正确的事情）
4.视频中的单词
现在这是一些有争议的东西，但它存在，请记住，也要说出与视频中的关键字研究匹配的单词。这使您在同一利基中的其他人的小杠杆。
5.视频标签。
在您的利基中其他执行视频的建议列表中获取视频的最简单方法是利用它们的元标签（可以使用自由的社交刀片插件找到）。不要复制元标签，花费一般并指向利基。而另一半应该是你自己的。您的标记应该是这样，即使您只显示标签，您应该能够讲述视频的内容。例如，如果视频是关于训练狗坐在狗身上，那么标签可能是训练狗，狗，坐着，宠物狗，狗训练等。你明白了。</description>
    </item>
    
    <item>
      <title>是否可以在youTube视频中创建文本，该视频可以在播放时间由Google App Script修改？</title>
      <link>https://xiangqingw.github.io/posts/is-it-possible-to-create-text-in-a-youtube-video-that-can-be-modified-by-google-app-script-at-playback-time/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:05 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-it-possible-to-create-text-in-a-youtube-video-that-can-be-modified-by-google-app-script-at-playback-time/</guid>
      <description>是否可以在youTube视频中创建文本，该视频可以在播放时间由Google App Script修改？ 回答 1 不。
一旦视频导出并上传，文本是固定的，没有应用程序可以更改它。即使它可能是，这样做就会违反YouTube的服务条款;禁止对现场视频播放器的任何干扰。
回答 2 如果我们接受面部值的陈述，它听起来好像谷歌的创始人想要大胆和实验，以及当前设置中的某些东西会阻止发生这种情况。
但是我的一部分认为这也可能为另一个目标服务。所有的辉煌和创造性的东西都是不可避免地与在线广告业务相关联。我开始认为整个在线广告市场即将发生爆炸。
在最重要的市场中，用户将开始阻止令人讨厌的跟踪广告。最重要的网站具有最佳内容仍需要获得报酬。和最好的方法是纠正并嵌入他们希望保留的广告商。他们将不再将钥匙的网站移到注入广告的外部公司。其他内容创作者将转向订阅或微押。
我认为在线广告市场已达到顶峰，并且可能会显着崩溃。谷歌的所有聪明的东西都可以跟踪用户，并阅读更好的目标广告的电子邮件将无关紧要。
如果我是对的，这确实发生了，谷歌作为广告的主要矢量，将失去收入。也许足够的收入来吓坏投资者。
这些家伙很聪明。也许聪明地看到了什么即将来临。
我想知道这个举动是否是一个索德。对角线移动，允许天才的东西住在这里，以及毒性的广告业务在那里。如果是一个子弹来了。这是躲避它的完美时间。
回答 3 我不这么认为。如果它暂停，它正在缓冲。获得更快的互联网连接，或在不同时间观看以较少的拥堵。在发生这种情况时快速下载视频并观察线路。没有缓冲，没有暂停。
请记住，现在有YouTube上的DEF视频&amp;hellip;&amp;hellip;即使是4K。单击右下角的齿轮，弹出菜单会让您设置分辨率。使其降低，问题应该消失。
回答 4 您无法在YouTube合作伙伴计划中之前。一旦获得批准，您可以将卡添加到视频中，但存在某些限制。以下是一篇有更多详细信息的文章：https://www.internetmarketingninjas.com/blog/content/heres-how-to-link-from-inside-youtube-video-build-traffic-from-youtube/
回答 5 2.降低
视频中的文字参与受众，并帮助他们更好地保留视频内容。在我们查看正确的视频编辑软件之前（我将在下一节谈论），让我们来看看基本类型的文本和图形，以添加到YouTube视频：
 intro / autro：介绍是在视频的前几秒钟内添加的动作图形或文本动画元素。它可以携带视频的标题或要突出的任何事实。
在视频结束时播放的标题动画。作为最佳实践，建议提供与相关的呼叫行动。
2.减少三分之一：视频帧的下部区域，其中包含像扬声器名称，指定，位置等的信息。
3.字幕：标题是一种通信（实时）所说的文本标题的类型。 YouTube与其中一个渠道合作伙伴进行了A / B测试，发现具有英语标题的视频看到的观点增加了4％。
4.徽标：找到使用核心值正在派生核心值的徽标来加强品牌的智能方法。
谈到选择软件添加文本和图形时，重要的是考虑您拥有的专业视频编辑体验的水平。
最终Cut Pro和Adobe效果是一些最强大的视频编辑软件可供添加文本和图像，并获得专业的质量输出。但要设定期望，它并不简单:)
学习该工具需要很多时间，它主要由专业视频编辑器使用。您需要一台笔记本电脑/桌面，其中至少有8GB RAM，为此类软件顺利工作。
如果您正在寻找自己或使用小团队创建视频，请查看基于Web的视频创建工具的Typito。它也被称为“视频的帆布”。其拖放界面允许您快速创建具有美妙文本效果，图形和视频的吸引视频。
您还可以选择从社交媒体视频行业中一些最好的200多个文本动画模板中的任何一个（如CNN，Buzzfeed，AJ +）使用
Typito可以自由地开始。
作为组建本产品的团队的一部分，我很想知道您尝试Texito的经验，并在以上述样式创建视频时，了解如何符合您的期望。  回答 6 关于YouTube的一个有趣的事实是每隔一分钟上传超过300小时的视频，每天都观看超过50亿个视频。这些数字是惊人的。
YouTube有时需要一段时间才能在上传之前需要一段时间的原因是因为它需要以能够基于Internet连接速度提供不同的带宽的方式处理它。
例如，如果你在1080p做一个截截面，那么1920 x 1080那么YouTube将首先&amp;hellip;&amp;hellip;
回答 7 有许多程序允许您这样做：PowerPoint，Keynote，iMovie，MovIeMaker，后效应，动作5，Acrobat Reader等任何程序，允许您在屏幕上放置文本并在页面之间移动。运动图形程序，如后效果和动作5让您做文本的疯狂动画，但这不是必需的。
回答 8 实际上很简单&amp;hellip;&amp;hellip;
我是艺术YouTube频道的所有者，所以我的大多数视频都包括音乐。但是，我已经谈过并为我的视频写了许多脚本。
首先，我创建视频。这是必不可少的，因为在您开始写作之前希望有一个完整的视频。
其次，您将视频打破到：
介绍：您介绍自己，您的频道和视频。我经常在记事本上写下这个。
第一个身体：这里是你介绍你的主题的详细信息。谈论它是什么，为什么你做到了，也许是事实。在一张纸上写下弹丸点
实际上很简单&amp;hellip;&amp;hellip;
我是艺术YouTube频道的所有者，所以我的大多数视频都包括音乐。但是，我已经谈过并为我的视频写了许多脚本。</description>
    </item>
    
    <item>
      <title>软件工程师的好耳机有多重要？</title>
      <link>https://xiangqingw.github.io/posts/how-important-is-a-good-headset-for-a-software-engineer/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:05 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-important-is-a-good-headset-for-a-software-engineer/</guid>
      <description>软件工程师的好耳机有多重要？ 回答 1 我没有拥有过的发展耳机。
我在走路时拥有一些廉价耳机，在散步时进行电话卡，这是在需要呼叫工作时重复使用。
所以&amp;hellip;&amp;hellip;丝毫不重要。
回答 2 除非撰写音乐或使用健全的生产：毫无意义。认真地，我一直在35年来编程超过35年，从来没有需要耳机，因为谁的录音没有必要声音。如果您处于音频制作或在语音识别等特色，那么是的，良好的耳机是势在必行的 - 如果没有，它根本不需要
回答 3 不重要。你想思考，没有音乐轰炸自己。它不会让你的同事更好。
回答 4 这取决于。
你的会议在哪里。
在我的职业生涯早期，我在团队在同一位置工作的地方。我们在一个房间里举行会议，每个人都在同一个物理位置和使用的白板，纸张翻转垫和架空投影机。我不需要耳机。如果呼叫超过一两分钟，我们会停止和去参加会议室。
现在我为跨国公司工作。我的团队遍布整个地方。我们远程进行所有会议。我是我的时区唯一一个我团队的唯一成员。是的，Comfy耳机是必须的。我使用高质量的桌面麦克风，以及一名演播室优质的头部手机。耳机实际上是用于录音工作室的（一个以上的录音工程师，我在过去推荐的推荐&amp;hellip;&amp;hellip;以及在大写的工程师和使用它们的记录录制工程师）。它们也不是非常昂贵的。
所以对我来说，现在是非常重要的。
回答 5 这些答案是由程序员编写的。我会尽力为一对伟大的演员为行业局外人员制造一位伟大的工程师。
回答 6 软件工程是一个良好的职业选择吗？
为了谁？
对我来说，这是一个优秀的职业选择;对于我的妻子来说，这将是可怕的。对于我父亲来说，这是一个优秀的职业选择;对于我的妈妈来说，这将是可怕的。对于我哥哥，这是一个优秀的职业选择;对于他的妻子来说，它也很好。
周围有许多不同的人，同样的职业建议不适用于每个人。
我知道它最初需要好，
这在很大程度上是一个准确的陈述。
在目前的经济气氛中，希望软件设计的人数大大超过了人数
软件工程是一个良好的职业选择吗？
为了谁？
对我来说，这是一个优秀的职业选择;对于我的妻子来说，这将是可怕的。对于我父亲来说，这是一个优秀的职业选择;对于我的妈妈来说，这将是可怕的。对于我哥哥，这是一个优秀的职业选择;对于他的妻子来说，它也很好。
周围有许多不同的人，同样的职业建议不适用于每个人。
我知道它最初需要好，
这在很大程度上是一个准确的陈述。
在目前的经济气氛中，希望软件设计的人数大大超过了能够进行工作的人数。还有许多&amp;rsquo;Wannabe&amp;rsquo;软件开发人员：只有在那些被感知的薪水中进入该领域的人，与进入该领域的人相比，其中大多数人都是可怕的无能为力，因为它们是有问题的解决方案，他们是对计算机和计算的解决方案系统。这些人不会超越他们的同龄人。他们可能会发现这个领域令人沮丧。
软件开发人员的长期补偿前景在很大程度上与一个人的表现能力相称，并以该订单进行谈判能力。
&amp;hellip;但如果你看看大多数公司的管理董事，他们就是MBA的人。
是的。
你为什么这么认为是？
许多人进入软件开发的人，为任务的爱而无法进入事物的管理方面的领域。他们整天都会抱怨糟糕的管理，但大多数人都不会出去成为管理者自己。俗话说，你错过了100％的镜头你不接受。
许多人进入软件开发的人因为他们听到它是一个利润丰厚的领域，没有实际提高自己的知识和技能。
获得MBA是某种Shibboleth;社会证明应该是“负责”。它允许那些收到它来绕过大部分“在战壕中的工作”，并直接进入行政和管理角色的工作场所。经历这些计划也允许学生以“重要”人士扮演政治和刷牙练习。
与所有人所说，对于那些在政治上和触摸街上智能的人来说，获得MBA绝对不是成为常务董事的唯一途径。一个不需要的需求
（1）适当的一套野心
（2）一套相应的目标和里程碑
（3）清晰知道何时改变粘性，以及
（4）履行事物的韧性。
无论如何，这些都是我对此事的思考;我向你致敬你去结束。
如果您发现它有用，请给它一个俯视，如果您认为这是无用的，则为次要，如果您有话要说，则为评论，如果您认为其他人应该看到它，则为分享。谢谢！
回答 7 我所知道的软件工程师乘坐和大而不富裕。我们得到了很好的报酬，但不是默认的富人。变得富裕是一个不同的东西。
首先，Tech Into Tech的良好付费软件工程师将在60,000美元至150,000美元之间，取决于他们住在美国的位置。世界各地，这个数字变化了很大。所以，让我们立即牢记我们的号码。
这很高，但你的平均医生每年赚189,000美元，你的普通律师每年赚135,000美元。所以&amp;hellip;
回答 8 从整个堆叠开发人员的角度看几十年和十年：
荣誉奖
C - 除非您可以在C中编程，否则您也不是真正的程序员，但它赢得了很多工作前景。
C ++ - 你可以用它做任何事情，但这是一个陡峭的学习曲线。</description>
    </item>
    
    <item>
      <title>什么结合了理论计算机科学和统计数据？</title>
      <link>https://xiangqingw.github.io/posts/what-combines-theoretical-computer-science-and-statistics/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:04 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-combines-theoretical-computer-science-and-statistics/</guid>
      <description>什么结合了理论计算机科学和统计数据？ 回答 1 一种可能性：用于NP完成组合优化问题的随机算法。
回答 2 我不确定你是理论上的计算机科学的意思，但很多统计数据处理了处理具有未知分布的数据的方法，并且这不可避免地需要计算机。某些类型的数据科学需要了解统计和算法（并且通常是这两者的新技术的发明）。
回答 3 一个示例是：机器学习缩减。学习减少背后的关键动机是，我们弄清楚如何解决一堆简单的机器学习问题，所以我们可以使用那些解决哈哈
我的猜测是，许多人因为它的数学优雅而感到有趣。算法设计对很多人也有趣。
事实证明，（理论上导向的）机器学习可以提供大部分相同的东西，但更实际相关。因此，许多人（我所包括）找到机器学习中的问题更有趣。
一个示例是：机器学习缩减。学习减少的关键动机是，我们弄清楚如何解决一堆简单的机器学习问题，所以我们可以使用这些来解决更难的机器学习问题吗？如果我们对更简单的问题有一些学习保证，我们是否可以构建一个减少，以便保证升降机更难的问题？
回答 4 这取决于你想要做的工作是否强调理论或计算机科学。理论计算机科学的某些部分深且抽象，从数字理论，离散几何，拓扑和代数绘制。理论计算机科学的其他部分侧重于寻找施加严格思考的方法，以应用计算机科学中的问题。如果你想做深刻和抽象的工作，你真的需要数学接地。它对您对计算中的真实世界问题很重要。如果你想影响实践，它对你对实践的深刻理解非常重要，并且很多影响都可以通过数学上的算法来通过算法，只是不是那么深。
当然，一些最大的工作都是&amp;mdash;数学上深刻而实际上很重要
作为计算机科学与物理学的本科生。我这样做，通过占据一系列履行两个专业要求的数学课程（并最终满足数学学位要求）。我学习的几乎没有与我的理论计算机科学工作有关;我的算法工作从未融合过。我几乎忘记了我在抽象代数，拓扑，差分几何和数字理论中学到的所有这些。另一方面，我所研究的计算机科学对帮助我了解我开发出开发的算法来解决的许多应用问题。
回答 5 我不会在理论计算机科学的算法，复杂性或其他主题上提及本科教科书。除此之外，一些高级书籍如下：
（研究生算法）
（优化）
（可能性）
（复杂）
（线性代数/矩阵/机器学习/凸优化）
（量子）
（特殊主题）
注意：所有书籍都不基于TCS，其中一些包含TCS所需的非常有用的工具包（集中/不平等等）。
回答 6 而已。我确实采用了一些组合的学期和审计的线性代数
这取决于你的研究。
背景：我目前正在等待我的顾问批准我的博士论文;如果他在几周内生病了。我的研究是图形算法。在我的博士之前，我做了一位基于研究的大师，也在图表理论领域。
作为一个本科的人，我有很多数学 - 自从我的专业是计算机科学，我几乎要求在数学中进行次要。自从我开始学校，我已经使用了代数，图表理论和对数。
而已。我确实采取了一些学期的组合物和审计的线性代数，但我实际上从未为我的研究使用过它们（尽管我的COLMINATICS类的一些问题已经提出我的PHD级算法类）。由于我的专业是算法，我需要能够计算运行时间，这需要基本代数和对数，因为我专门研究图形算法，我显然需要了解图形理论。如果你不明白大哦的符号，请坐下来用cormen等，直到你这样做;您必须了解渐近运行时如何工作。
但即使它不直接适用，背景材料呢？无论您选择哪个主题，您都需要知道如何进行数学证明。这意味着你需要采取离散数学 - 它可能有另一个名字（我的本科大学最初称它为IT算法），但它是一个教导你如何做证据的课程。负责我决定去参加学校的课程（以及我以后最终教学三年）是计算机科学的基础，涵盖有限的自动机，图灵机等，但最重要的是教导您证明事物，更重要的是，如何不证明事情 - 如何避免邋ins的思考。
所以肯定首先学习做证据。之后，找一位专门从事你喜欢工作的教授，并问他或她需要什么样的背景。理论计算机科学是一个巨大的领域，它不可能让你拥有一切的背景 - 找出你对自己感兴趣的东西。
但了解代数，算法。和证明。
回答 7 这是一个深刻而有趣的主题。它不需要任何其他用途或理由。
但如果你坚持，你怎么看待Logistic回归？ SVM？天真的贝叶斯分类器？在线凸优化？提高？红黑树？快速傅里叶变换？吉布斯抽样？套索？
所有这些都是有用的方法在理论上是激励的：它们与概述了它们应该表现出良好表现的条件的数学论点。
我认为您可能等同于具有复杂性理论的理论计算机科学。这是理论计算机科学的重要组成部分（一种也是用方式有用的方式），但理论也很重要，例如机器学习和算法和数据结构。
最好的算法倾向于具有扎实的理论内在的内限，通常是由理论者发明的，或者理论者是第一个解释他们为什么工作的以及他们的局限性是第一个。
回答 8 以下区域将使用统计数据 -
数据分析 - 大以及小公司在研发中投入了很多，并为数据科学家和数据工程师提供巨大的支付。
机器学习 - 再次依靠有吨的数据感，统计发现在MLP中使用。
算法交易 - 统计将在投资公司使用的交易模型的算法设计和测试中发挥非常重要的部分。
医疗保健 - 分析各种基因组序列并收集数百万数据点，为医疗保健行业提供支持，为药物检测和疾病战斗提供支持。</description>
    </item>
    
    <item>
      <title>从应用程序中获取代码是否是违法的，更改接口和一些后端的东西，然后卖掉它？</title>
      <link>https://xiangqingw.github.io/posts/is-it-illegal-to-get-code-from-an-app-change-the-interface-and-some-of-the-back-end-stuff-and-then-sell-it/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:04 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-it-illegal-to-get-code-from-an-app-change-the-interface-and-some-of-the-back-end-stuff-and-then-sell-it/</guid>
      <description>从应用程序中获取代码是否是违法的，更改接口和一些后端的东西，然后卖掉它？ 回答 1 是的，除非应用程序是公共领域的开源代码，否则它可能是一个版权违规，以便执行您的建议。您也可能需要源代码来重新编译它。没有源代码，几乎不可能这样做。
回答 2 在几个自由职业网站中，我只会提到t
在今天的世界（我会说欲望）的世界里，与大多数人的供应（收益）相比，更多。每个人都想用更少的努力和更快的方式赚取额外的钱。我对你来说都是好的和坏消息。好消息在今天的时代，与前一次相比，有更多的机会可以赚取额外的机会。和坏消息将在最后分享。
经过彻底的研究，以下是实现您轻松赚钱目标的机会列表，如果您对此做好准备。
1.自由工作
出于几个自由网站，我只会提到前5名。如果您有内容写作，Web开发，社交媒体管理，图形设计，或简单地作为母语的良好命令。您可以轻松创建您的帐户，并深入了解如何前进。
Fiverr.
Toptal.
linkedin
春
自由职业者
2.网站和应用测试
这样你就可以通过测试网站和应用程序赚钱。您应该有足够的知识和专业知识作为测试员被接受，一旦您通过短暂的测试后，您将开始接受投资您的时间和知识来获得报酬的机会。
3.尝试进行调查
有几个网站与客户一起参与，以代表他们推出调查。注册他们赚钱或礼品卡。
4.博客
如果你喜欢写作，这是最好的和蓬勃发展的机会。加入联盟网络/程序后，您将在博客中包含链接以购买产品或服务时获得报酬。
5. vlogging.
如果您是一个很好的演讲者，并且喜欢探索新的地方或最近购买的任何东西，如Smartwatch，最新的手机，或者是宠物作为宠物。创建频道后，捕获视频并在YouTube上上传它们。一旦你成功地获得了很多观众的注意力。通过对视频的广告，可以利用Google Adsense，Amazon Associate计划等赚取很多钱。
6.成为影响者
简单的几个步骤：选择一个利基字段，选择一个平台并开始今天开始。在所选利基做适当的家庭作业对于声誉建设来说是重要的。一旦享有盛誉，准备担任品牌大使
7.加密货币投资
这个机会是我最简单的赚钱方式的最后一个。加密货币的投资可以让你过夜，但在另一边，没有适当的家庭作业和市场知识的机会。这可能会花费非常沉重的损失。基本上，风险越大，收益越大。
您也可以通过采矿加密货币赚取。此过程是更简单的选择，您可以通过您的手机开始挖掘，或者您可以在昂贵的设备上投资巨额以获得占用的数量。天空是极限，你投资高性能采矿硬件，结果越高。
现在，如果你没有做好准备或不愿意为它做好准备，就没有更容易或更快地赚钱的方式。每个机会
技能集，资源，努力，以及最重要的是您选择的待办事项的一致性。除非您认真追求任何充分的奉献，否则您无法通过以下任何方式取得成功，以新的技能学习能力，最重要的是，饥饿成为一个成功的人。
以下是一些链接，如果您想学习新技能，波兰语技能或获得支持：
摄影PhotoJobz |获得报酬拍照！
电子书未经授权的联盟 - 错误页面
在线工作https://93ff781ftdnfx-wn19jvxj53-j.hop.clickbank.net/
在线写作作业https://b2abajzd07x1snn7eizry3-bzl.hop.clickbank.net/
获取付费使用Facebook，Twitter和YouTube获取付费以使用Facebook，Twitter和YouTube
回答 3 我认为回答这个问题我们应该从抽象开始，我们经常将其作为设计模式称为设计模式，并且在此特殊情况下设计模式MVC。这代表了模型，视图和控制器，并且在许多上下文中的前端是视图（用户看到的），后端是控制器（工作是什么），数据库或其他永久数据存储是模型（什么存储稍后的信息）。我喜欢建立中间 - 出于含义，我首先考虑我的应用程序需要做什么（如，登录用户，或更新帐户信息，或运行查询等），然后构建它将用于完成此操作的业务逻辑。在这样做，它可以帮助我定义我需要存储的东西（模型），前端将如何与Back-End.Now交互，详细介绍了前端和后端的集成方式。视图需要多种形式，但在它的心脏上，在Web上，它是HTML，JavaScript和CSS.A给定视图（如您的主页，或Accou NTS页面或部分视图（也许是您的标题或页脚）可以集成到您的框架（与Ruby中的Ruby中的ERB模板，或Django中的Django模板），或者它可能完全分开（并且可能与之写入前端JavaScript框架，如角骨折或骨干网或备用骨架）。这意味着在前一个例子中，视图与框架集成的情况下，作为对后端的要求（我会回来的稍后），返回的是后端引擎预先呈现的HTML，可能会或可能不会使用来自控制器的值，并且甚至可以使用模板语言进行逻辑（如Ruby的Erb模板）在Django的Rails或Django模板，如上所述）。在后一种例子中，一切都是HTML，CSS和JavaScript（可能是JavaScript框架），这改变了后端将数据返回到前端的方式。现在，对于重要的部分：前端真正与后端通信的前端如何？前端始终拨打电话，意味着GET或POST请求一般。可以通过用户单击一个链接，以响应一些事件（在JavaScript中）或被动地（在JavaScript上的计时器上）进行主动地进行呼叫。 .a get请求是它将传递到URL本身的后端的所有值的请求（如MyWebSite.com/someservice?somekey=somevalue&amp;amp;anotherkey=anothothothevalue）。在此示例中，当呼叫成为时对后端的SomeService端点进行GET请求，并通过了参数某个键和另一个键，其中包含值somevalue和另一个value.a post请求是它将传递到请求中编码的后端的所有值身体。在这种情况下，您可以调用myWebsite.com/someservice，但是值将在请求体本身中编码。这是填写表单的情况下，在这种情况下，请求正文是多零件编码的内容。这也可以主动地（例如，用户提交表单），被动地（例如，表单响应于填写的所有字段或在计时器上提交）（例如，前端检查后端在表单中的某个值，每隔5秒使用后端验证它）。这是答案的肉：通过与页面的用户交互，在JavaScript中侦听事件，或者使用JavaScript作为定时事件，从前端到后端进行呼叫。在我们拥有的所有三个案例中一个选择：通过同步或异步的请求通常意味着用户对响应作出请求并等待响应。通常意味着在背景中进行请求，并且页面（或页面的元素）是指的收到请求的响应时更新。通过XML HTTP请求（XHR）完成了同步请求，您可以使用普通的JavaScript或任何JavaScript框架（甚至jQuery使这个非常容易）。下一个大问题是，怎么样后端是否从FR接收到呼叫ont-end，知道如何处理这些信息？这会发生什么：后端从前端接收呼叫（如上所述，我们将使用Get请求作为示例），并且它将分开请求，分类以下内容：
然后，它需要这种信息来适当地路由请求，也通过请求身体。我的途径是什么意思？
回答 4 我个人认为前端工程师做了一个非常重要的工作。后果只会成为一个非常大的产品的问题（在开始时，你可以是愚蠢的，它不会导致问题）。另一方面，糟糕的UI可以在其婴儿期内杀死另一个良好的项目。前端工程师还必须处理用户界面非常主观的问题，而且通常没有正确的答案。在后端，事情往往更黑白。
有了这一说，我希望我们有更具性能敏感的前端工程师。通过在客户端上实现的越来越多的网站，前端将为许多站点添加到后端的许多站点。
回答 5 它更像不同的职业。这是一个数学家还是艺术家难道？如果你想擅长它，这两种时候都需要一个巨大的时间。我在两者中有初级背景，我发现困难。
后端发展就像是数学家一样。您大多要提出需要大量焦点和调试的逻辑功能。你真的不关心结果的样子，但它需要返回正确的值。您必须确定，您使用正确的数据，函数和循环。否则，即使您使用简单的公式s =（（a * b）/ 2）s =（（a * b）/ 2），您的代码也会很慢。 。</description>
    </item>
    
    <item>
      <title>如何使用算法和流程图将数字从°Celsius转换为°华氏度和从kg到磅的数字？</title>
      <link>https://xiangqingw.github.io/posts/how-can-i-use-algorithm-and-flowchart-to-convert-a-number-from-celsius-to-fahrenheit-and-a-number-from-kg-to-pounds/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:04 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-can-i-use-algorithm-and-flowchart-to-convert-a-number-from-celsius-to-fahrenheit-and-a-number-from-kg-to-pounds/</guid>
      <description>如何使用算法和流程图将数字从°Celsius转换为°华氏度和从kg到磅的数字？ 回答 1 算法
步骤1开始
步骤2阅读摄氏度的温度输入（例如c）
STEP3 F =（9 * C）/ 5 + 32
STEP4在华氏度中打印温度是f
Step5停止
流程图
现在自己尝试下一部分
提示：1 kg = 2.2磅
回答 2 该算法是一个简单的乘法和添加，无需流程图。
适用于温度的摄氏：</description>
    </item>
    
    <item>
      <title>学习算法是否使一个更好的程序员？</title>
      <link>https://xiangqingw.github.io/posts/does-learning-algorithms-make-one-a-better-programmer/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:04 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/does-learning-algorithms-make-one-a-better-programmer/</guid>
      <description>学习算法是否使一个更好的程序员？ 回答 1 是的。
如果您不知道现有算法（以及与它们相关的数据结构），则不知道如何分析算法，并且在它们之间智能选择，并且您不知道在需要时正确地实现它们（有时需要），从长远来看，您将与专业的软件开发人员有艰难的时间。
回答 2 算法是程序员写的东西！
学习算法的定义绝对是一件好事！
回答 3 最终，算法是关于执行一系列逻辑/数学步骤，如果独立，则是一个程序，无论在什么级别的抽象。所以问题下降到荒谬。
你可能的说法是程序员是一个编码器。但我们有软件，它将根据规范和算法编写程序/代码。所以你的程序员很快就会被灭绝。
回答 4 这可能是科技产业中最棘手的问题之一。一个常见的说法是学习算法，数据结构，设计模式，&amp;hellip;更好地制作一个程序员。好吧它并不完全正确。例如，他们自己的学习算法不会让你成为一个更好的程序员，但学习算法和理解何时使用它，并且确切的用例是计算的技能。这就是为什么他们自己的算法不够，ID建议您学习算法，然后通过解决问题和编码问题来应用它们
回答 5 学习它会迎接你可以遇到的某些问题，因为如何衡量它，它将教你一些可以用来解决它们的常见模式。所以是的，算法的研究会让你成为一个更好的程序员，我肯定。
回答 6 考虑到编程有用的软件必然涉及实现算法，我要说..是的。你有特定的学习吗？书学习&#39;？街头学习？当我15岁时，我胆怯地在C中实现了插入，并且毫无知的思考我发明了它。这在技术上是一种学习的形式，虽然非常粗糙，并且没有加注。
回答 7 大多数程序员需要在其职业生涯中实现数据结构和算法的重要性。原因是对这个主题的简单知识有助于我们随着更好的程序员和大师计算机科学。另一方，面试官使用DSA来测试候选人在面试期间。它为他们提供了一种简单的方法来评估解决问题的技能，基本的CS基本面和思想过程。掌握问题解决，纸张或白板可以是练习，解决方案步骤和伪代码的方便工具.writing下降算法步骤和必要的细节可以帮助我们在设计中.Mastering数据结构和算法需要动机，适当的指导，努力工作和一个连续学习计划。如果有人想要开始一个很棒的旅程，那么回答这些问题：
如何在算法和数据结构中开发长期兴趣？如何准备一个持续的学习计划来破解编码访谈？如何在给定的时间内为编码面试做好准备？让我们深入探讨这些问题的答案！步骤1.制造长期动机
长期愿景至关重要！我们需要思考和探索：为什么学习数据结构和算法对于技术行业的职业生长至关重要？每个错误或错误都有珍贵的学习，我们需要为UPS和Down做好准备.Oonce我们有数据结构的基本知识和algo我们对主题的兴趣会增加越来越多.Step 2.算法的概念和复杂性
准备思想后，我们的第一个目标是准备一个在DS algo中重要的基本主题清单。我们可以特别关注真实的应用来理解使用情况案例思维
算法拼图，避难所，计数，数量理论，排列，复发，基本概率
编程基础知识
数据类型和变量控制语句循环迭代，函数属性，指针，数组，字符串，类，对象
算法基础知识
复杂性分析：输入大小，最差案例分析，时间复杂性空间复杂性，Big-O符号
递归的想法：属性，递归问题的模式，如分裂和征服
排序算法：泡沫排序，选择排序，合并排序，快速排序，属性和排序Algo的比较
搜索算法：二进制搜索，指数搜索，插值搜索
哈希的想法：散列函数的属性，基本操作（插入，删除，搜索），使用哈希解决问题的模式
第3步：找到一个好的导师和学习社区
我们的下一个目标应该是找到一个好的导师。导师可以成为一个具有良好概念理解和解决问题的人的人。你可以通过观看YouTube视频或注册课程来开始学习它。我会建议你挑选在线课程因为它们是有效的，你会得到一个真正的简洁的道路。在线DSA课程有很多选择，我会推荐最佳的市场，即LogicMojo.let看到为什么我推荐你的LogicMojo是什么让它独特？即使您是一个新鲜的或经验丰富的它涵盖了每个主题准备结束。在3-4个月的问题练习中，如果您按顺序遵循所有主题，您可以完成为遗址采访的完整准备。本课程在我的准备期间亲自帮助。所以值得一提。其他好处也是在那里，您可以在那里检查他们的网站.Step 4.Practice问题是您的钥匙。在这个Covid时，所有采访都发生了所有面试在线.below我提到了DSA的完整教学大纲
线性数据结构
属性，基本操作，递归问题和现实生活应用程序
阵列：1D阵列，2D阵列，动态数组
链接列表：单键链接列表，双链接列表，Circular LinkedList
堆栈，队列和dequeue
非线性数据结构
二进制树：属性结构，DFS（预订，秩序，邮政，BFS遍历另一个问题解决模式
堆：属性结构堆建筑模式解决，现实寿命应用
高级数据结构：属性，结构，基本操作：Trie，段树，二进制索引树，n-ary树。
回答 8 我假设你至少知道一个编程语言和对象/指针的概念。我将提到算法和数据结构增加难度顺序。
首先从线性数据结构和算法开始。
然后移动到基本算法：
然后人们可以学习一些流行的算法技术：
然后出现一些典型的非线性数据结构：
然后你可以了解图表：
到这个时候，你已经很好地编程。你会比大多数本科生CS学生做得更好。如果您想了解更多并深入阅读更多。
前进树和图：
提前字符串算法：
提前数学：
一般提前主题：
回答 9 算法明确指出了解决问题的方法。
您想了解有关算法的两件事：
如果您编写未解决问题的代码，或者它解决问题但使用资源效率低下（例如，它需要太长或使用太多的内存），那么您的代码并不真正有帮助。</description>
    </item>
    
    <item>
      <title>微软会让Windows开源吗？</title>
      <link>https://xiangqingw.github.io/posts/will-microsoft-ever-make-windows-open-source/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:04 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/will-microsoft-ever-make-windows-open-source/</guid>
      <description>微软会让Windows开源吗？ 回答 1 我认为微软永远可以或将制作Windows开源。首先，产品最有可能包括从其他供应商获得许可的部分，那些许可协议可能根本不允许翻转代码。其次，它可能不会有微软的兴趣，让他们的竞争对手看他们如何建立产品。
仅当您希望贡献者与您合作（查找和修复错误，构建附加组件等）时，才能打开源代码是有道理的。最后，未开始开放的软件产品通常不会以简单的方式为用户和贡献者参与的简单方法构建，并且代码评论可能不会像所需的那样普遍且清晰。
回答 2 虽然在过去我可能会嘲笑这个想法，但现在看起来像微软正准备这样做，以便仍然是他们有利可图的方式（因为他们需要一些其他收入来源来替换什么是窗户带来的东西）。很少有暗示。
回答 3 制作Windows开源将没有超越政治的实际影响。它太大而且太复杂，因为它是三十年的发展的产品，被妥协，紧急修复，方向的变化，失败的实验，兼容性黑客和文档故障混淆。
Borland试图开源Firebird，而人们喜欢这个想法，没有人可以做任何事情，因为它在较小的规模上有上述问题。
回答 4 我经常说这个，我没有重复它的问题。
它永远不会发生。
毫无疑问，微软将继续震惊（一些）人，甚至更加友好，并且可以对开源人群更加友好和途径。我完全希望看到微软代码的各种（精心挑选）部分变得开放。正如其他人所说，这很容易解释。 MS正在利用开放来源，以自己的利益。这不一定是坏事。双方的福利。
但是有一个简单，不可避免的事实 - 一个开源梦想家经常忘记的事实。公司出于单一原因存在：利润。 Windows许可是Microsoft估计每季度4BN的大量块。你不会活着看一下厕所里的公司抛出的利润 - 除非这样做，否则它可以做得更多。
重复，永远。
回答 5 它可能根本不会伤害它们。
考虑：
1.它们可以在Copyleft许可下打开源窗口，使他人难以制定操作系统的专有版本。但由于微软将保留其版权，因此他们不会受到许可证的Copyleft规定的限制。所以微软可以做他们想做的事。微软将继续拥有熟悉Windows核心的工程师的优势，因此他们与代码一起使用的能力&amp;hellip;
回答 6 不，我不这么认为。它们支持在Windows上运行的开放源应用，框架等以及在云中运行，但Windows源本身可能不是他们想要分享的东西。
回答 7 微软有一个非常强大的s
这是微软的一个非常关键的时间。 Windows（Desktop Editions）中唯一可畅销的零件似乎是GUI（在Linux世界中我们称之为de）和文件资源管理器。我认为即使Microsoft开源核心内核，Linux也只会从中取出位和部分（也许驾驶员相关的动力系统和驱动程序，DirectX等）。 Windows和Linux早期开始在内核级别中的合作更好。我认为微软知道，在他们摆脱维护专有操作系统的责任之前，他们必须确保为Windows为Linux运行的应用程序。
微软有一个非常强大的供应链。即使他们开源内核，他们也能够向政府，企业，大学，一些最终用户的支持销售对OS的支持。
微软拥有一些可行的产品，EX。 Azure，Microsoft Office，SCCM，Microsoft SQL Server等。我认为他们计划专注于这些。
随着远程服务器的关注，力量非常强大。微软不能永远打击它们。但是，如果他们合作，他们可以在服务器和超级计算机空间中具有更大的份额。
我认为微软已经有谦卑，了解情况的重力。他们目前与Linux基金会和规范密切合作。他们为oin添加了近60,000项专利。制作.NET Framework，PowerShell，Detours，PerfView，ProcDump等开源。似乎他们是什么。
回答 8 我可以看到它们将Windows 3.x和Windows 9x释放为开源。但我没有看到任何基于NT的人这样做。
Windows 9X没有看到一天的光明，并且可能对某些人来说可能不会有很多用处，但如果它被释放，我不会介意维护叉子&amp;hellip;&amp;hellip;与底层DOS模式有自由。
Windows 3.x在大多数情况下只是一个Dos shell，因为它只是耗尽它。</description>
    </item>
    
    <item>
      <title>我在哪里可以在初学级别项目上练习我的编码技巧？</title>
      <link>https://xiangqingw.github.io/posts/where-can-i-practice-my-coding-skills-on-beginner-level-projects/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:04 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/where-can-i-practice-my-coding-skills-on-beginner-level-projects/</guid>
      <description>我在哪里可以在初学级别项目上练习我的编码技巧？ 回答 1 Geeksforgeeks练习http://geeksforgeeks.org
对于一个新手程序员，学习逻辑到代码是获得编码信心最有效的方法之一，无论编程语言如何，我们都可以从最小的技术行李中学习它。
讽刺是，在大多数教育设置中，对于初学者水平，他们不会妥善培训这项技能。因此，许多人在一开始就失去了信心。
学习者可以完成相关理论，在1或2周内开发逻辑技能，但基于该理论可能需要1-2个月的问题解决问题。这样的投资是值得的。为什么？
学习逻辑建筑为学习高级编程奠定了良好的基础，更快。学习将成为自我激励和可数。每个学习者都想要这个。请检查以下帖子以获取更多详细信息。
mohmad yakub·10月11日&amp;lt;/ span&amp;gt;
10月11日&amp;lt;/ span&amp;gt;
回答 2 您应该编程，而不是编码。编程正在将问题置于适合问题的语言中，而不是进入机器或面向机器的语言。编程是通过把东西放在他们的想法中，以他们思考问题的方式来清楚的是，如果这是做其他事情，那么做另一件事，直到这是这样的事情，而不是跳跃，或者这一步骤组成较小的步骤&#39;（调用一个例程 - 抽象）。并且您应该考虑正在处理的值和类型，而不是由存储在一起的位置或如何通过表示值（变量名称）的名称来访问它们。不要通过地址或指针访问值。您正在为自己和其他程序员编写一个程序，而不是最初为机器 - 实际上也是通过编程而不是编码服务的最佳服务。
这是编程的基本原则，总是记住它。 “程序员”在忽视这一点的时候堕落为编码器，并发现自己在跳跃和指针的机制中捆绑在一起。他们的“程序”变得难以遵循，不灵活，甚至在机器上运行甚至不太最佳。
IAN JOYNER·JUL 29 &amp;lt;/ SPAN&amp;gt;
7月29 &amp;lt;/ span&amp;gt;
编码正在考虑以原始方式编程。编程是复杂的思考。谨防编码语言，这些语言与更高级别的语法打扮。这些&amp;rsquo;狼在羊皮的服装&amp;rsquo;误导&amp;rsquo;编码者&amp;rsquo;认为他们正在进行编程。
短暂的答案
当编程在练习时会记住这些基本面。虽然您可以为自己编制练习练习，但没有像有一个导师有助于应用这些基本面的导师，这可能似乎难以开始。如果导师不同意我在上面写的内容，请找到另一位导师。
更多基础：
IAN JOYNER·1Y &amp;lt;/ SPAN&amp;gt;
1y &amp;lt;/ span&amp;gt;
这是一本书，将通过大规模和高级计划开发来帮助学习基础知识。
回答 3 这5个项目将为您提供稳固的编程基础。
您可以在Codepen或JS Bin上构建这些单页应用。他们将帮助您练习HTML5，CSS，JavaScript，您甚至可以投入AngularJS或反应。他们还强迫您恢复敏感设计，JSON API，并利用您的浏览器本地存储。
随机引用机器
敏捷的用户故事：
完整的详细信息和演示视频
栩栩如生的口袋计算器
敏捷的用户故事：
这5个项目将为您提供稳固的编程基础。
您可以在Codepen或JS Bin上构建这些单页应用。他们将帮助您练习HTML5，CSS，JavaScript，您甚至可以投入AngularJS或反应。他们还强迫您恢复敏感设计，JSON API，并利用您的浏览器本地存储。
随机引用机器
敏捷的用户故事：
完整的详细信息和演示视频
栩栩如生的口袋计算器
敏捷的用户故事：
全部详细信息和演示视频（http://www.freecodecamp.com/challenges/zipline-build-a-javascript-calculator）
无与伦比的Tic Tac Toe
敏捷的用户故事：
完整的详细信息和演示视频
露营新闻浏览器
敏捷的用户故事：</description>
    </item>
    
    <item>
      <title>我应该为图像/对象检测的客户收取多少费用？</title>
      <link>https://xiangqingw.github.io/posts/how-much-should-i-charge-a-client-for-image-object-detection/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:04 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-much-should-i-charge-a-client-for-image-object-detection/</guid>
      <description>我应该为图像/对象检测的客户收取多少费用？ 回答 1 让我们只是说你想支付你的月度账单，所以最少的是你的每月费用。
其中包括您的租金，食品，互联网和计算机成本除以12.加上您的自我。
这就是你如何计算最低金额，你应该向客户收取任何费用，任何东西都会让你的工作变得更少。
使用上述方法决定每小时收取多少费用，如果您每周5天工作8小时。您应该能够赚取等于您的每月费用的金额。
注意：程序员赚取大量资金，超过最低工资。不需要少收费。我会收取500美元或莫
让我们只是说你想支付你的月度账单，所以最少的是你的每月费用。
其中包括您的租金，食品，互联网和计算机成本除以12.加上您的自我。
这就是你如何计算最低金额，你应该向客户收取任何费用，任何东西都会让你的工作变得更少。
使用上述方法决定每小时收取多少费用，如果您每周5天工作8小时。您应该能够赚取等于您的每月费用的金额。
注意：程序员赚取大量资金，超过最低工资。不需要少收费。我将收取500美元或更长期的费用取决于数据客户端有多少或者我在项目上工作多少小时。
回答 2 我认为你不正确地考虑定价模型，因为每个物体检测的收费是需要为一些客户提供每一个零分数的每一个次数，对其他客户的费用显着更高，而且您将不会产生明显更高的费用知道哪些直到他们随着时间的推移。
我建议您代表您的一些广泛的研究，因为确定SaaS提供的价格不是一个简单或小的主题。尝试使用如何为谷歌提供如何价格SaaS并选择学术链接，而不是销售教程。
回答 3 您应该收取您的客户准备支付的最高金额。
您通过根据您的CODB进行谈判（开展业务的成本）来确定。
祝你好运。
回答 4 为计算机愿望创建高质量数据集对于具有强大的模型性能至关重要。除了收集与部署的条件相似的图像，仔细准确地标记图像是必不可少的。
为了有效地标记图像，下面的帖子贯穿策略，以确保您的数据集尽可能高的质量。虽然低于最佳实践通常是真实的，但重要的是要注意，标签指令高度依赖于手头任务的性质。此外，为一个任务标记的图像可能不适合另一个任务 - 重新标记并不罕见。最好地想到一个数据集及其标签，因为活着的东西：不断变化和改善，以适应手头的任务。
在每个图像中标记每个感兴趣的对象
建立计算机视觉模型，以了解感兴趣对象的像素模式。因此，如果培训模型以识别对象，我们需要在图像中标记该对象的每个外观。如果我们没有在某些图像中标记对象，我们将向我们的模型引入错误的否定。
标记整个对象
我们的边界盒应附上一个感兴趣的对象。标记只有一部分对象会使我们的模型困扰着全对象构成的内容。
标签闭塞对象
由于在照片中阻挡它的东西，闭塞是当物体在图像中被部分地疏忽。它最好标记均匀的对象。此外，通常是标记闭塞对象的最佳做法，因为它是完全可见的 - 而不是仅绘制物体的局部可见部分的边界框。
创建紧密边界盒
边界盒应紧张在兴趣的对象周围。 （但是，你永远不应该有一个如此紧张的盒子，它正在切断物体的一部分。）紧张的边界框对于帮助我们的模型来说至关重要，精确地，哪个像素构成图像的对象与图像不相关的部分。
保持清晰的标签说明
不可避免地，我们需要向我们的数据集添加更多数据 - 这是模拟改进的关键元素。像主动学习一样的策略确保我们在智能地度过我们的时间标签。因此，具有清晰，可共享和可重复的标记指令对于我们未来的自我和同事创建和维护高质量数据集是必不可少的。
这里讨论的许多技术应该包括：标记整个对象，使标签紧密，标记所有对象等。在比少于更具体的侧面，它总是更好的。
回答 5 我回答了给你疑问的好处 - 你没有问，所以你可以尝试在机场和一些建筑物的条目中击败安全X射线系统。
X射线系统由于与周围环境的对比度而检测到事物。例如，在人体中，难以检测一些材料，因为它们的化学组成在X射线衰减中与周围组织非常相似。像木材这样的有机材料可以使X射线探测身体中的木材滑动。许多塑料是相似的。这就是塑料植入物和装置（如宫内器件，皮下避孕植入物和许多导管）的原因将包括放射线电质材料，使它们在X射线上可见。通常，具有比软组织更高的材料或更低，衰减将使它们更容易检测。
注意，材料的X射线衰减也取决于X射线本身，特别是所使用的X射线的能量。临床实例是用于放射治疗的γ（高能）辐射。试图用那些X射线进行诊断图像是非常困难的，因为高能量有效地介断衰减，因此所得到的图像对比度非常低。
帮助这种情况的一种方法是使用双能X射线系统。这些使用两个不同能量的X射线。通过减去所得到的图像，通常可以定位对象，因为它们具有在所用的两个能量下具有不同的衰减。该技术可以与一些胸部X射线系统一起使用，并且可以使产生的图像主要显示胸部或大部分肺组织的骨骼。与传统的胸部X射线相比，这些图像看起来非常奇怪;放射科医师不习惯看到没有骨骼的胸部图像，只有肺部和周围的软组织，但没有骨骼结构。这是Google搜索结果的链接，显示了这些图像的示例：
一些CT扫描仪现在可以使用双能成像来允许一些诊断研究进行，而无需使用静脉内对比或减少所需的金额。
通过双能X射线系统使物体无法检测到（通常更难检测到）比传统的单能X射线系统更困难。是的，对于那些读到这是谁知道X射线物理的人，我知道X射线源不是单色的。利用X射线管的能谱是一种方式实现了双能系统。
回答 6 TASQ是一个Web应用程序平台
在机器学习和AI开发中，数据标签的各个方面至关重要。您需要一个结构化的培训数据，即ML系统可以从中学习。
创建准确标记的数据集需要很多努力。数据标签工具非常方便，因为它们可以自动化标签过程，这尤其繁琐。
最重要的是，这些工具使整个数据集创建过程能够更轻松的协作和质量控制。您可以从任何类型的数据中获得一个准确的培训数据集，您可以使用ML管道连接。
TASQ是一个具有数据标签服务的Web应用程序平台，以及多种数据类型的探索。我公司使用它们进行对象检测和标记自主驾驶软件。
它们为每种可能的数据类型提供数据标签：文本，图像，视频，音频，时间序列，多域数据类型等。结果数据集具有高精度，并且可以轻松使用在ML应用中。该工具可从任何浏览器访问。它分为在每个浏览器上运行的预编译js / css脚本。还有一个要将Tasq UI嵌入到您的应用程序中的功能。
为了执行准确的标签并创建优化的数据集，此工具：
好处是：
回答 7 伟大的问题，我们有一个文档描述如何在这里准备自己的数据集以培训探测器：Tensorflow /型号</description>
    </item>
    
    <item>
      <title>科学家和开发人员/工程师之间的智力上有什么差异？</title>
      <link>https://xiangqingw.github.io/posts/what-is-the-difference-intellectually-between-a-scientist-and-a-developer-engineer/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:04 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-the-difference-intellectually-between-a-scientist-and-a-developer-engineer/</guid>
      <description>科学家和开发人员/工程师之间的智力上有什么差异？ 回答 1 科学家是在实验室工作的人，并确实携带型尖峰蛋白的放射学研究以及他们附加到人类细胞的地方，也许如何阻止该工程师是那个读到这一点的人，并说我们可以从中制定对抗
回答 2 科学家主要由好奇心和工程师推动解决问题。否则两者都必须非常擅长应用数学和了解复杂的抽象理念。
这是一个泛化的地狱，但这是问题所要求的。
回答 3 计算机科学与计算机工程/软件工程之间的差异就像比较苹果和橘子。
科学是对理解我们的现实的物理和自然现象的研究和观察。通过科学假设，我们制定科学知识。另一方面，工程是科学知识的应用，以提高我们的现实。
假设，计算机科学是Apple和计算机工程/软件启动器是橙色。逻辑上讲，计算机科学和计算机工程/软件工程在“计算机”的区域内本质上可关联，就像苹果和橘子属于相同的集合或名为“果实”的组。
两者都属于相同的领域和相同的软件工程保持。人们经常混淆所有三个领域。实际上，计算机科学是群体中最具理论的。
计算机工程涉及计算机和电子产品中硬件和软件的集成。另一方面，软件工程涉及软件的开发，开发和维护。
计算机科学两种工程领域都存在共同的交叉点。实际不同的是计算机科学消除了对硬件的过度担忧，对编码不太感兴趣。计算机科学家应对一系列紧密对齐数学家的研究兴趣（通过计算）。计算机科学是苹果。它涉及了解计算理论，人工智能的行为，人工智能，密码学/加密货币，算法，机器学习以及大量的酷炫的东西，与上层数学（超越微积分 - 我不会破坏您可以研究这）。
计算机科学的范围比信息技术（IT）和软件开发更进一步。一旦您获得编程语言采集的感觉，学士学位在计算机科学中的相关性就会逐渐消失，这是软件工程最重要的技能。事实上，计算机科学最多主要教授三到四到四种编程语言。那里有一整个编程语言。祝你好运。
回答 4 作为职位，程序员，软件开发人员和软件工程师可能意味着给定公司希望他们意味着什么。有些地方称之为创建软件工程师的人，其他人称之为开发人员，仍然是其他人称之为程序员。
轶事，我注意到了具有这些标题的模式，然而，公司倾向于使用不同的标题，具体取决于他们的软件和技术如何作为竞争优势。一般来说，我认为大多数顶级科技公司认为软件成为他们的核心产品调用这些人软件工程师。我工作了那个价值软件的地方，但将其视为另一个职业（银行家，科学家等）的支持职能倾向于称这样的人软件开发人员。看到软件和必要的邪恶的公司称他们为程序员。再次，这纯粹是我个人观察，没有任何硬数据，所以用一粒盐带。
因此，除非我们谈到使用多个标题的特定公司（我不知道任何此类公司），否则这些职位之间没有任何根本差异。但是，编程，软件开发和软件工程之间存在差异，这可能会解释为什么有些公司倾向于另一个标题。
编程是将人类可读要求转换为机器代码的任务。这是编写源代码的物理行为，使软件能够执行其预期功能。从这个意义上讲，它是软件开发过程中的最低级别任务。
软件开发是创建软件的过程;从需求采集，任务创建，冲刺规划，编程，单元测试，集成测试，可用性/验收测试等。它包括通过将其作为产品传递给软件系统的结束到底。
软件工程是三个最广泛的工作。计算机科学与数学理论应用于本发明，设计，研究，开发，维护，改进和软件创新[1]。它意味着令人担忧的是软件本身，更多关于解决问题的信息。有时，良好的软件工程师可以解决问题而不需要写入任何新的代码。有时解决问题意味着协调以复杂方式交互的多个软件系统的开发。有时软件工程意味着删除代码，弃用服务和设计下一个系统以占用它的位置。
[1] 但无论他们给你什么职称，总是把自己视为一个软件工程师。
脚注
回答 5 正在精神上严谨构建建筑物？
取决于您构建的两个中的哪一个。
这两个都很美好，但其中一个绝对需要更多的努力和科学。 [1] [2]
[1] [2] 很多取决于：
脚注
正在精神上严谨构建建筑物？
取决于您构建的两个中的哪一个。
这两个都很美好，但其中一个绝对需要更多的努力和科学。 [1] [2]
[1] [2] 很多取决于：
在结束答案之前，我将分享一个有趣的角度，就为什么软件工程更加智力严谨，至少以一种方式。
没有人会要求民间工程师在建筑物的建筑物中插入一个新的5楼，已经有10个地板，已经走了10层，将其他地板转移起来。
没有人会要求机械工程师在发射前一周改变汽车设计，使驾驶员座椅面向侧面。
它是智力严谨，因为一个人想要它。
编辑1：添加图像链接
脚注
回答 6 你是谁
这个问题可能已经被问到1000次，将来将在未来1000次被问到。
这两个领域都是有利可图的，可转让的，相对的需求，所以金钱和机会不会是任何你决定的问题（也许软件工程有轻微的边缘，因为它是如此广阔的空间。
这是一个没有客观答案的问题。您需要确定您想要自己追求哪个领域。我选择了软件工程，以便我喜欢它的简单原因，并在我的空闲时间做了它，因为在我闭切到足以获得报酬。
你选择的是不一定必须给你魔法追随你激情的陈词滥调类型的感觉，但你应该对此感兴趣。无论哪种方式你选择，都记得你的选择不一定是永久性的，如果你发现自己没有由你的原创选择实现的人，你可以随时改变职业。
知道这一切，任何一种路径都会很困难。工程是一个艰难的领域，具有许多障碍，许多挑战，以及许多困难。你会在某些时候感到聪明，你会觉得在其他时候觉得一个完整的白痴。这是完全正常的。只要你对工程领域感兴趣而不只是为这笔钱做这件事，我就会在困难时期暂时坚持。我意识到这一段是一方而不是直接回答你的问题，但我觉得每个崭露头角的工程师都应该预先预示。
如果你喜欢我的答案，请帮我赚取距离并跟随我的更多答案。
回答 7 程序员，编码器和开发人员参考基本相同的专业人士，它具有历史性意义。从时期我们有人尽可能快地编写一条代码。打字是最重要的技能。输入，处理和输出都是如此重要的。
软件工程师将工程学科应用于软件。设计，测试，度量标准的模式，应用于可重复生产，测试和使用软件作为技术的过程。
回答 8 首先，最重要的是让我们承认这些名称在企业世界和学术界广泛使用，以引用人们在IT职业中的任何东西。使用模糊，遵循任何标准。如果组织可以选择一个标签并在他们花哨的地方坚持它，他们几乎不会害羞地避开这一点。但是，如果一个人尝试纯粹主义者描述，以下是一些人会同意的那样。程序员是任何作为专业人士，业余爱好者或业余爱好者的人计划的人。发光通常有一个内涵，人们参与发展在组织/产品的上下文中，特征或要求与测试员或运营人员更明确定义。通常，开发人员还执行一些测试，测试仪也有一些发展，但是每一个软件工程师都是不同的，对于预计在利用技术时为他们提供解决方案的人来说是一个专业的标题和最佳实践已知软件生命周期高效。例如，一台软件工程师实际上可能无法每天编程（虽然大多数好的人），例如，如果他们正在服务管理角色。计算机科学家虽然是完全不同的区域。它是指人们学习最多的计算的主要理论方面的角色。计算机科学是数学的分支。一位良好的计算机科学家可能不是一个好的程序员/开发者/软件工程师，反之亦然，尽管它们很可能。</description>
    </item>
    
    <item>
      <title>为什么我们无法从巴贝尔诅咒中出来并团结在一种语言下？</title>
      <link>https://xiangqingw.github.io/posts/why-are-we-unable-to-come-out-of-the-babel-curse-and-unite-under-one-language/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:03 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-are-we-unable-to-come-out-of-the-babel-curse-and-unite-under-one-language/</guid>
      <description>为什么我们无法从巴贝尔诅咒中出来并团结在一种语言下？ 回答 1 为什么我们无法从巴贝尔诅咒中出来并团结在一种语言下？
这不是它真正发生的方式。Babel的故事是一个传奇。整个世界永远不会发出一种语言。这样的事情是不可能的，因为语言处于恒定的变化状态，而整个世界将无法协调变化。
回答 2 创世纪11（KJV）
4，他们说，去吧，让我们为我们建立一个城市和一个塔，其顶部可能会到达天堂;让我们让我们成为一个名字，以免我们在整个地球的脸上散落出国外。Gatible Gateway通道：创世记11：1-9 - 詹姆斯国王版
在圣经的洪水之后，人们开始重新迁移地球。但是，他们集中在一个地区，而不是在整个世界上分发，并决定建立巴布尔塔。在Nimrod的统治者中，一大群人开始建设一个塔。这是一个想到这是一个巨大的金字塔，这是一个巨大的浪费时间。金字塔是一个很好的例子，是一个很好的例子的极端傲慢。花了几年来构造每个金字塔，使用奴隶制来实现它。为什么菲律罗斯有这么多骄傲这种进攻建设项目？金字塔是否有利于整体埃及社区？No.It只是一个极端虚荣的建设项目。它是浪费时间，能源和资源。刺激的塔塔是巨大的浪费时间。这个建设项目的使命宣言，是向别人（和上帝）展示人类可以自己获得伟大，而且他不需要上帝。塔对人类可以伸出的想法来说是一个隐喻没有上帝的帮助。苏奇是男人的哈布里斯。禁止的词是指另一个门/上帝，这是另一个进入天堂的隐喻。依靠主进入天堂，塔塔象征着另一方面被人的作品偷偷进入天堂，而不是主的作品（通过他的恩典，通过耶稣基督）。清楚地没有回到天堂。只有一种进入天堂，这是由父亲的父亲恩典，通过耶稣基督在十字架上的救赎作品是耶稣的最后赎罪牺牲了抹去了我们所有的罪，从而让我们进入天堂。所以，上帝扼杀了他们的语言并导致他们的语言在世界各地的驱散。这是什么？这是什么？在伊甸园中召回，亚当和夏娃被伊甸园中搬走了。他们被驱逐出来，因为他们希望变得比他们更重要，成为众神。我们在这个欲望中看到了我们对于电力，与魔鬼（撒旦）平行，谁想要不仅是上帝，也高于上帝。这个主题在整个圣经的账户中被发现。曼并非满足于他所拥有的东西，并且总是渴望和垂涎更多。禁止塔，揭示了一个人类权威人类的危险。所有人都在一个独裁者（nimrod）。所以，如果这个独裁者成为邪恶，那么邪恶会在整个人中传播。然而，随着人们在多个领导人和国王中分布在世界各地的国家，这使整个世界变得更加困难，通过一个腐败的领导者成为邪恶。这是耶稣呼吁形成多个独立教会的耶稣而不是在一个权威的原因。这将有助于防止所有教会的腐败，通过毒害一个单一的权威，在一个权威结构下决定所有教会。我们认为这项机制与美国宪法，我们在政府权力建设中建立了支票和余额.T他是耶稣指挥他的门徒们在许多不同的人和国家传播福音的原因。门徒们更喜欢伸展向犹太人讲道，但耶稣希望他们能够寻求外邦人。耶稣的部门不存在使福音局限于一群人。耶稣事工的全部目的是在整个世界中传播福音。这就是为什么耶稣命令门徒离开该地区并迁移到遥远的地区。如果门徒没有散​​发自己，摧毁基督教，因为它只是在当时的刚刚的状态。但是，通过将这个词传播到众多，这些种子也又进一步传播并在整个剩余时间内传播世界上有一些意见，禁止塔的塔没有发生。攻击创世纪的有效性1.Did上帝在六天内创造了宇宙，并在七分之一圣经洪水实际上发生了？嗯，是的。魔鬼想要攻击圣经。他想要伪造它。
回答 3 根据圣经账户，诺亚的后代讲述了不同的语言
这是一个常见的解释性谬误。阅读常规历史书时，您不会成为它，但由于人们希望在圣经中找到错误，他们过于阅读。
创世纪的结构是在返回该特定遗传学开始的地块之前向（然后）目前的族裔术语呈现给（那么）。你在讨论很多孩子的讨论中看到了这一点。
你不能得出结论，这些家谱都发生了，然后是下一个故事，也不是文本状态，也不暗示它。
根据圣经账户，诺亚的后代辐射不同的语言（创世纪10）。 Genesis 11然后返回以考虑语言差异的近似原因，因为它应该似乎令人惊讶的是，如果每个人都在演讲相同的语言中，那么就是这样。
如果这是一个发出的结构技术，你可以被误解误导它，但它在成因中发生了几次，因此是一个一致的风格特征。
考虑到“州”这个词的使用也值得。 Genesis并不是说Babel塔前有许多语言。它是解释器的推断，而不是文本中的陈述。保持这些单独的是重要的。随后的学者可能对您对文本的分析感兴趣，同时不同意您的结论，但如果您将结论与文本分析混合，则必须丢弃整个研究。
回答 4 不。
故事背后有一些主要想法，以及混合语言的课程：
今天的人们学习不同的语言，如果他们学习他们在世界上沟通和合作，并且和/或了解其他人和他们的意见和观点，并不遵循塔楼建设者的脚步。
但是，如果他们是学习语言，以强迫一个人的人，而不是允许对意见或不同的意见，和/或他们的目标是团结起来愚蠢或彻底的错误，那么他们还没有吸取的教训塔楼塔。可能g-d对他们生气吗？这取决于他们在做什么。我可以看到他会在哪里失望，甚至恶心。我们拥有所有这些资源和进步（就像砖上的砖头），建立辉煌的发现和合作和维修，以及世界上真正伟大的伟大事物的潜力，然而，我们使用它们来控制别人，控制资源（甚至将它们从其他人身上杀死并杀死它们），建立帝国，提升事物和人类的财富，不要改善世界，帮助人类，而是控制和摧毁它。
我们不需要语言再次或其他洪水摧毁世界;人类自己正在这样做。
回答 5 人类是如何发言不同的语言？它是否与圣经从巴斯特塔有关？
通过世代的语音传输自然地发展不同的语言。随着群体分开，不同的方言发生不同的发展，直到他们不再是相互懂事。
Babel Tower的圣经故事是一个不一定的人解释它们周围世界的预定尝试，并将所有有效性作为分数或占星术的解释。
回答 6 圣经，都是老
因为以色列部落的上帝不是我们目前对宇宙的全部强大创造者和统治者的想法。他只是专注于他自己的人，而不是世界上每个人，就像有一个扮演SIM游戏的人只是帮助一个文明。他感到威胁到现在事情发生了;他是一个嫉妒的上帝，并非常清楚地知道游戏应该如何去。
你可以从亚当和前夕故事中看到，伊甸园的花园属于这个上帝，虽然他们是这个上帝所做的第一个男人和女人，所以在该隐找到了一个妻子的城市。
圣经，旧约和新约，是众神与犹太人的关系的故事。他的意思是他们拥有一个上帝，而不是崇拜金黄小牛，例如或邻近的神。从这一点（意识到犹太教和基督教的其他人）也让我们对我们只有一个神的想法。
当然，我可能是完全错误的。
回答 7 好吧，也许你没有注意到，但圣经上帝并不是太聪明，而且总是犯错误。然后他责怪他的创作，惩罚他们。
回答 8 记得，全能的g
第一语言可能是几个世纪以来的希伯来语的基本形式。 （创世纪11：1。）例如，现代希伯来语在其字母表中使用Aramaic风格的字母。今天大多数犹太人都没有阅读古老的希伯来语写作风格的摩西，约书亚，塞缪尔，大卫等犹太人，今天犹太人通常从希伯来语模仿文本中读取与滨崎字母。
当积极的猎人尼姆罗德开始建立他的帝国时，&amp;hellip;&amp;hellip;在亵渎他的博物馆，他将塔城为bab-él或bav-él意思是上帝的门户。所以，他没有用那些音节发出意义混乱。
请记住，全能的上帝已经命令诺亚后裔在洪水之后散发并重新填补地球。 （创世纪第9章）但是尼姆罗德雄心勃勃地统治着较小的男人作为他的奴隶，&amp;hellip;&amp;hellip;所以他可以建立他的王国城市和连通道路。尼姆罗德不是上帝的追随者，但是在&amp;hellip;&amp;hellip;或反对上帝面前。 （创世纪8：10-12）Nimrods项目不是由上帝赐予的，而是&amp;hellip;&amp;hellip;后来被诅咒。怎么会这样。？
上帝邀请了一些帮助的天堂，与他一起，争夺（重新编程）人类大脑在塔城工作的人类大脑演讲能力代码&amp;hellip;&amp;hellip;因此为他们创造了新的语言。创世纪11：7&amp;ndash;8。这导致了一个主要的分裂因素。 （别忘了&amp;gt;那时没有口译员或双语 - 字典然后没有！）
然而，出现，因为一些剪影后代对他们的上帝顺从，他们可能没有在塔所在的地方工作。谢蒙斯后代Peleg当时地球被语言成为&amp;rsquo;划分&amp;rsquo;的时间。 （创世纪10：21-25。）因此，他们的希伯来语保持不变。
另一个因素是希伯来语中的许多人，地点和事物只对讲希伯来语的人有明确的意义。例如，Eden意味着愉悦。亚伯拉罕这个名字意味着国家的父亲。这些含义不受大多数​​其他语言理解。
上帝改变了来自Bab-él（上帝的门户）的城市王国的发音给Babel意义混乱，&amp;hellip;&amp;hellip; Babble&amp;gt;巴比伦。！创世纪11：1-1-9。
从那时起，语言发生了一些改变，其他人已经混合形成新语言。例如，英语来自盎格鲁斯，暂时定居在德国和荷兰。英语的基础结构是普通西式德语/荷兰人，拥有4,000+英国语言加上希腊，拉丁，德国和荷兰语的许多其他词。
好消息&amp;gt;在未来的整个世界中，在众神王国政府归结为消除所有政治统治者并消除所有虚假宗教之后只会说一种语言..那么上帝将永远在地球上建立真正的和平与安全。 ，根据耶利米31：31-33。另见Zephaniah 3：8-9;丹尼尔2:44和诗篇37：vss 9-11 + 29;加启示录21：1-5.</description>
    </item>
    
    <item>
      <title>为什么有些人在学习HTML，CSS和JavaScript之后难以设计一个网站？</title>
      <link>https://xiangqingw.github.io/posts/why-did-some-individuals-find-it-difficult-to-design-a-website-after-learning-html-css-and-javascript/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:03 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/why-did-some-individuals-find-it-difficult-to-design-a-website-after-learning-html-css-and-javascript/</guid>
      <description>为什么有些人在学习HTML，CSS和JavaScript之后难以设计一个网站？ 回答 1 您会发现很难在学习语法后使用HTML，CSS和Javascript建立一个网站，因为实际上，您从未使用过。您没有使用代码设计网站，您可以使用代码开发一个网站。此外，在页面上查看语法远远不同于自己写入代码线。
一旦您开始使用您了解到的内容，那么才能才能建立一个网站。我的意思是它只有意义。让我问你这对你愿意与刚刚学会如何射击他们的步枪但从未看到战斗的战争？或者你宁愿与学习如何战斗的队伍战斗，并同时积极地战斗？同样的事情要用于开发网站。
回答 2 如果您只学习了JavaScript的基础知识，如您所说，我会忽略像jQuery等jQuery等库，或骨干，反应或角度的框架。建造一些东西。使用HTML，CSS和Vanilla JavaScript（Plain ES5 / ES6）JavaScript和Web API）。
实际使用它在对您的级别相对复杂的内容中使用它来测试JavaScript的知识。如果你还年轻，有很多时间，而且不需要在未来几个月内获得网络开发人员工作，然后减速并花一些时间使用核心技术在没有帮助的情况下使用核心技术了解Web开发的更强理解上面提到的工具（图书馆和框架）。
真的，如果你首先得到这个东西，学习框架或库变得更容易，而且你也将理解何时何种以及为什么要使用库或框架。
回答 3 我不喜欢的是，当人们试图聪明时，给出没有逻辑的愚蠢答案。很多人都说否，你只是只用HTML，CSS和Javascript限制自己，这只是雄辩。
想象一下，有人问鸡，土豆和绿色沙拉足以满足全甘醇餐吗？然后有人说嗯，不&amp;hellip;&amp;hellip;你需要汤，你需要沙漠，你需要面包棒&amp;hellip;&amp;hellip;这是2020次改变了
Bla Bla Bla Blaaaaaaaaaaa
但如果有人不喜欢汤，沙漠和面包棒怎么办？您是否知道这个世界上有多少网站完全在HTML和CSS（没有JavaScript）？
许多！许多网站非常简单，人们为​​此付出代价。如果人们为此付出代价，那么为什么没有HTML，CSS和JavaScript足以进行全职工作？逻辑在哪里？
我做网络设计，我遇到了不知道编码的人。我永远不会忘记我在LinkedIn上遇到的那个女孩，她为一家公司工作了多年，她没有Clue如何编写CSS。
她是怎么做到的？有一些平台，类似于每月支付的Wix。您可以与他们建立网站，她还使用一些软件&amp;hellip;&amp;hellip;只是用鼠标 - 拖放。
她把钱作为一个web开发人员！不，这不是最低的薪水！客户对她所做的事情感到满意！
伙计，相信我&amp;hellip;&amp;hellip;当有人开展业务时，业务为每年200 000和本业务的所有者有很多东西，有许多需要支付的事情。
&amp;hellip;&amp;hellip;其中一个是网站。当本业务的所有者支付网站并表示需要有一个联系人页面时，它需要使用图片&amp;hellip;
你认为他会对JavaScript提供该死的吗？如果你告诉他javascript，他也会说我的儿子也看着星球大战
我个人编写CSS，HTML，JavaScript和PHP。然而，许多客户告诉我，我希望你制作一个Wordpress网站，他真的告诉我我会付钱给你，停止编码并用鼠标拖放拖放
客户支付的费用是什么！这就是世界的作品。
当你们都聪明，开始说话，我只是uuuuuuugh
有些人已经掌握了每一个JavaScript库和平台。从Bootstrap到.pug或框架的一些其他荒谬的名字，他们没有作为开发人员赚钱。
你知道为什么吗？因为他们可以编码，但他们无法工作，他们不拥有作为一个好设计师的技能。
去，访问网站，任何美丽的网站.Automobili lamborghini - 官方网站| Lamborghini.com是一个很好的例子。
查看设计，并尝试将其与此设计一起制作漂亮，只有HTML，CSS和Jabba脚本。
如果您失败，那么没有框架，库或Flippidy-Flip-Flop将有助于您。
回答 4 当你有轮椅时，你为什么要走。
休息，你可以得出意思😁😁
让我们最简单的答案：WordPress提供某些免费定制，因为深入自定义，您需要手动或雇用编码器来自定义。使用HTML，您可以自己写一切和设计。
此外，WordPress进入存在，以便即使他们不知道如何使用它，最大的人也可以使用它。由于WordPress，许多博主收入或网站运行而不具有零编码知识。
回答 5 假设您正在谈论构建前端开发人员技能，而不是学习使用像Node.js这样的东西，使用JavaScript的点是在浏览器中提供行为并操纵DOM。因此，您需要在页面上拥有足够的HTML来为您提供行为行为的东西。但是，如果您计划执行DOM YOUD的许多操作，请在页面上进行下一到没有HTML。您真的不需要知道任何CSS能够使用JavaScript，但有时候您将在DOM中操作的时间将是CSS属性/属性信息。
有了上述所有，ID都喜欢重新聚焦一点。 HTML和CSS并不是很难学习的，并且您不需要研究整个参考手册，了解如何使用它们的一般概念。一般来说，只要围绕它们，并开始与它们一起练习建筑网页。您可以，也应该同时学习JavaScript。这不是必须顺序完成的东西。它很好地同时学习所有三个。
回答 6 但是，如果您尝试构建
如果您只需要自己的网站，而且您不介意支付年费的费用，那么它可能是一个相当不错的解决方案。在过去的几年里，WIX平台已经走了很长的路，并提供了合理的各种各样的特色，尽管它总是会在某些方面的某些方面受到限制。它最适合简单，静态网站，也许有几十页。你肯定不会能够建立一个非常复杂的东西，就像一个大型电子商务网站或大公司网站。它对小企业，个人网站和类似的乐趣。
但是，如果您尝试为生活建造网站，试图向其他人销售网络建筑服务，或计划在Web开发领域工作，学习HTML，CSS和JavaScript绝对是强制性的。你不能在简历上与Wix平台进行经验丰富，并希望获得一份工作。
回答 7 贾
网页由三个不同的世界组成。这些范式中的每一个都使用不同的语法与浏览器通信：
HTML告诉像这样的浏览器的东西是一个段落，即主要标题，这是一个视频，即图像等。
CSS告诉像这样的浏览器的东西应该是红色的，应该是蓝色的，这个段落应该去右上角，使这个段落更大胆等。
JavaScript告诉浏览器在用户点击此按钮等时将打开此消息的弹出框。</description>
    </item>
    
    <item>
      <title>从数字集{0,1,2,3,4,5,7,5,9}组中可以创建多少个5位数字，以便使用每位数字一次，a）编号可被2，b）可被默认号码已被5，c）号码从3开始，7次以7结束？</title>
      <link>https://xiangqingw.github.io/posts/how-many-5-digit-numbers-can-be-created-from-set-of-numbers-0-1-2-3-4-5-7-8-9-so-that-every-digit-is-used-once-and-a-number-is-divisible-by-2-b-number-is-divisible-by-5-c-number-starts-from-3-and-ends-at-7/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:03 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-many-5-digit-numbers-can-be-created-from-set-of-numbers-0-1-2-3-4-5-7-8-9-so-that-every-digit-is-used-once-and-a-number-is-divisible-by-2-b-number-is-divisible-by-5-c-number-starts-from-3-and-ends-at-7/</guid>
      <description>从数字集{0,1,2,3,4,5,7,5,9}组中可以创建多少个5位数字，以便使用每位数字一次，a）编号可被2，b）可被默认号码已被5，c）号码从3开始，7次以7结束？ 回答 1 零。
数学联盟是指套装的操作。一个对象是a∪ba∪b的元素，如果它是aa或bb的一个元素。 （在数学中，除非另有说明，否则总是包容性，因此包括属于AA和BB的元素。）
这意味着，除非您决定实际设置，否则占据数字的联盟是胡说八道，所以要对这个问题进行任何意义，我们必须看看自然数的设定理论建设。在通常的结构中，0 =∅0=∅，没有元素的集合，并且自然数被递归地定义为n + 1 =n∪{n} n + 1 =n∪{n}。我将备用这个施工中的数字看起来像什么样的细节（明确地写一段时间），但从这种结构中遵循，如果m，n∈nm，n∈n，n∈n与m≤ nm≤n，然后m⊆nm⊆n，因此m∪n=nm∪nn= n;一世。即，数字联盟是他们的最大值。它肯定不是这种结构下的总和，产品或替代（在任何碱基中），或者在任何其他情况下（因为它必须满足n∪n=nnən= n）。
这意味着可以从问题中提到的数字的任何联盟创建的最大数字是99.但是99不是任何基础中的五位数字;即使在二进制中，也是最小的五位数字，是10000TWO = 3210000TWO = 32。 （除非我们想谈论五位数的非整数数字，否则这些数字的任何联盟都将是一个整数，所以即使没有帮助。）
回答 2 没有任何。
如果数字在7中结束，则它甚至不是（不能可分解2），不能可分解5（只有0或5结束的数字以5）以5个以来）。
回答 3 使用J编程语言，蛮力方法：
可以从数字{0,1,2,3,4,5,7,8,9}中创建多少个5位数字，以便每位数字使用一次：
生成所有5位数的所有5位数唯一的整数，将它们存储在ns（n start）中计算它们，并列出计数：
#ns =。（＃〜9999＆&amp;lt;）10＃.n = 5 perm 10
27216.
使用数字0-9有27,216位数字整数，其中所有5位数都不同。）
&amp;laquo;&amp;lt; &amp;raquo;&amp;gt;
a）NS中的5位数整数中有多少由2可分开？
#na =。（＃〜2＆|）ns
13440.
A）的答案是，有13,440个五位整数，所有数字都是独一无二的，而且
使用J编程语言，蛮力方法：
可以从数字{0,1,2,3,4,5,7,8,9}中创建多少个5位数字，以便每位数字使用一次：
生成所有5位数的所有5位数唯一的整数，将它们存储在ns（n start）中计算它们，并列出计数：
#ns =。（＃〜9999＆&amp;lt;）10＃.n = 5 perm 10
27216.
使用数字0-9有27,216位数字整数，其中所有5位数都不同。）
&amp;laquo;&amp;lt; &amp;raquo;&amp;gt;
a）NS中的5位数整数中有多少由2可分开？
#na =。（＃〜2＆|）ns
13440.
A）的答案是，有13,440个五位整数，所有数字都是唯一的，其可被2可分开。
&amp;laquo;&amp;lt; &amp;raquo;&amp;gt;</description>
    </item>
    
    <item>
      <title>我是31.我是一个程序员，我开始放慢我的技术和编程技巧。我应该在2021年改变我的道路或继续学习吗？</title>
      <link>https://xiangqingw.github.io/posts/i-am-31-im-a-programmer-and-ive-started-slowing-down-on-my-technical-and-programming-skills-should-i-change-my-path-or-continue-learning-in-2021/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:03 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/i-am-31-im-a-programmer-and-ive-started-slowing-down-on-my-technical-and-programming-skills-should-i-change-my-path-or-continue-learning-in-2021/</guid>
      <description>我是31.我是一个程序员，我开始放慢我的技术和编程技巧。我应该在2021年改变我的道路或继续学习吗？ 回答 1 你好，
所以我一直在编写50多年的代码 - 我还没有放慢速度。例如，我在过去3年中挑选了Python，Angular和CypeScript。
我怀疑你减缓了你的挑战。我发现，当我试图做一些困难的时候，我花时间研究，学习，然后尝试不同的方法 - 所以这是帮助我留在游戏中的困难问题。
发现或尝试有趣的挑战 - 写一些会有趣或有用的东西。我最新的新项目是一个自我强加的项目，我继续我的孙子（我正在教授Python） - 编程覆盆子PI PICO定制硬件 - 我们正在制作万圣节/圣诞灯秀 - 嗯，我们正在加大为了它。
这只是一个例子 - 找到你想做的任何事情并尝试它 - 了解你需要的任何东西。
成为创意很有趣 - 一切顺利
回答 2 现在，如果您的公司中还有其他团队使用您不了解的其他技术，那么这是一个有效的理由，以了解他们中的一些，但为了学习而学习
停止殴打自己！你正在制定一些不切实际的期望。我在31岁时处于确切的职位。我开始在社区学院占据课程，以填补我的开发知识。他们中的大多数我从未真正使用过，所以除了智力锻炼外，这是浪费时间。在您在到达那里之前，我们没有必要的发展技能没有必要的意思。
现在，如果贵公司中还有其他团队使用您不了解的其他技术，那么这是学习其中一些的有效理由，但为学习而学习是无菌运动。
回答 3 这取决于你的目标！你对编程无聊吗？你在寻找一条新道路吗？
我在你的年龄周围开始了我的网络发展职业。我现在44岁，刚刚开始学习JavaScript。我觉得我迟到了，绝对不是！
我想为自己工作，可能会留在我公司，直到它发生，所以我真的不需要学习JavaScript。但我这样做是为了让我的大脑活跃。我喜欢编码和学习新的技巧并找到解决问题的解决方案。
如果它漂浮着你的船，不要停止！
回答 4 你是唯一可以回答这个问题的人，因为你是唯一知道你想做什么的人。
回答 5 进行根本原因分析。
你为什么放慢速度？
所有这些等等，可能是一个潜在的贡献因素。
一旦你发现你的前三名是什么，那么你就知道对你最有意义的是什么。
回答 6 试图找出让你减速的东西，如果你不断做同样的工作多年，你肯定会感到无聊，试着切换到新的项目，帮助你学习新技术并帮助你的职业生长。
研究趋势主题，可用资源并利用这些，并尝试改进技能，并更新您的个人资料。它将开辟更多的机会，并尝试进行一些示例项目，这将是一个额外的优势。
永不放弃，只要找出问题并继续学习是什么，你肯定会克服这个问题。
一切顺利。
kno.
试图找出让你减速的东西，如果你不断做同样的工作多年，你肯定会感到无聊，试着切换到新的项目，帮助你学习新技术并帮助你的职业生长。
研究趋势主题，可用资源并利用这些，并尝试改进技能，并更新您的个人资料。它将开辟更多的机会，并尝试进行一些示例项目，这将是一个额外的优势。
永不放弃，只要找出问题并继续学习是什么，你肯定会克服这个问题。
一切顺利。
了解更多有关职业指导主题检查并遵循空间。
职业指导和自由职业者&amp;lt;/ span&amp;gt;
vinodh Ramu是一个贡献者&amp;lt;/ span&amp;gt;
回答 7 如果您想继续在技术流中，那么唯一的方式就是继续学习。永不止步。
我想，第一个要做的事情就是问自己想要的东西。
回答 8 嗨，希望你做得好。那里有很多课程追求，但只有少数人会给你一个良好的职业生涯。</description>
    </item>
    
    <item>
      <title>数据科学家是否使用面向对象的编程？</title>
      <link>https://xiangqingw.github.io/posts/do-data-scientists-use-object-oriented-programming/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:03 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/do-data-scientists-use-object-oriented-programming/</guid>
      <description>数据科学家是否使用面向对象的编程？ 回答 1 在TEC中的大型机器学习码条
在大多数情况下，没有。
就像Satvik Beri说，功能规划对于典型的数据科学管道非常有用，而性能比代码可维护性更为重要。数据科学家一般不适用于大型码名。他们编写小脚本和原型。
然而，大多数数据科学家使用机器学习库，其中许多都大量使用OOP，至少是用Python编写的那些。主要例外是r，这是一种纯粹的功能语言。一个严格在R和SQL工作的数据科学家将永远不会触摸OOP。
在科技公司的大型机器学习码条中，我怀疑OOP也很普遍，但这些主要由机器学习工程师和数据工程师开发。
回答 2 我避免它喜欢瘟疫。有许多工具可以使用（r，matlab）谢天无常地包含很少的OOP。这是我陷入困境的主要原因之一，直到我的小组在我必须在Python中编程时找到软件工程师。
回答 3 当然，了解OOP的一些概念，但是你
一般来说，没有。
如果您正在编写必须快速的机器学习代码，您将使用高度矢量化的代码。您将围绕性能进行大量决策，这些性能不会整齐地对应封装和接口。
如果您正在编写数据流水线，功能编程更好：您通常正在占用少量输入数据集并产生少量的输出数据集。并行化非常重要。像不可变性和幂的概念会让你的生活更容易。
当然，了解OOP的一些概念是有用的，但您可能不会使用大部分时间。
回答 4 面向对象的编程具有它的好处。它创建可重复使用的代码，这些代码围绕着良好的理解模式。优点是，一个新的开发人员更容易理解这些模式以工作在现有代码上。它还允许其他项目使用一个项目。从本质上讲，当您正在进行OOP时，您正在构建构建块，然后您正在连接那些构建块。如果您的构建块足够通用，则可以快速创建新的内容。
OOP的缺点是很难学习，并且需要大量的前期设计。如果您没有Buildics块开始，则必须开始构建这些块。并建造积木很难正确。
结果是，OOP对于居住多年和年多年的系统非常棒，并且在团队正在构建可以重用彼此的代码的不同应用程序的情况下。
换句话说，OOP非常适合工厂的商店。想象一下，你有一个玩具厂，一周制作玩具卡车，玩具飞机第二。如果创造了玩具卡车的工厂可以将玩具飞机商店变成过夜，这不会很好。您可以移动机器并调整它们以获得您想要的内容。这基本上是oop的所作所为。构建块，可以在大规模上转移以做新事物。
数据科学，OTH不是制造业。这是调查。它或多或少就像侦探工作一样。数据科学家有一个谜团来解决：SOEMTHECT，就像我如何预测甜甜圈像甜甜圈一样的人与咖啡有多少人？他们赶紧赶说是什么让人们喜欢甜甜圈。亨克：也许，甜甜圈与咖啡的偏好与客户的职业有关。 （我知道我知道&amp;hellip;&amp;hellip;坏警察笑话）然后，他们试图通过查看数据来测试他们的亨希是真的。如果数据与亨舍匹集，那么他们可以构建使预测的模型。然后他们测试模型以查看它是否准确预测。
在这种情况下有什么作用的是一堆建筑块，数据科学家可以用来测试他们的猎人。快。数据科学家们又擅长设计那些构建块，但它们擅长使用其他人设计的建筑块来帮助他们回答问题？这些构建块需要设计成在比例下处理大量数据。他们需要快速扭转一些东西。当您发现它不会准确地使预测丢弃时，没有必要给出型号漂亮的OOP结构。无论如何，您将抛弃型号，直到右转型号。
这就是为什么数据科学家不使用OOP自己;它太耗时了，并从实际做实验中夺走了焦点。它们确实使用使用OOP设计的框架。
回答 5 是的，我愿意。我还使用工厂和策略模式等设计模式。使用OOP允许我的代码可维护。它还使得将项目移动到生产方案。
例如，查看以下代码，其中我使用出厂模式创建各种动物的实例，然后调用虚拟成员函数make_sound（）：</description>
    </item>
    
    <item>
      <title>是否有免费软件清理不会影响系统文件或注册表的Windows操作系统？</title>
      <link>https://xiangqingw.github.io/posts/is-there-a-free-software-to-clean-the-windows-operating-system-that-does-not-affect-the-system-files-or-the-registry/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:03 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-there-a-free-software-to-clean-the-windows-operating-system-that-does-not-affect-the-system-files-or-the-registry/</guid>
      <description>是否有免费软件清理不会影响系统文件或注册表的Windows操作系统？ 回答 1 基于10天的经验：
pros
cons
编辑：
回答 2 如果你想打扰任何一个
不可以。您实际需要删除注册表项的唯一时间是由特定注册表项遇到的特定问题。当您研究或以其他方式发现冒犯的注册表项时，您已经知道在哪里寻找它，您只需使用本机Regedit“工具修改或删除它。
这是一种常见的误解，在现代时代，这些注册表清洁程序实际上做了一些神奇的益处。我的电脑运行缓慢，清洁我的注册表的时间没有很长一段时间没有真正的真相。
如果您想为您和您的金钱部分方式的任何这些注册表清洁器打扰，那么找到一个，最好是自由的，实际向您展示它打算清洁的情况，而不会进行任何改变。这样你就可以自己看，无论是什么意味着什么都持有任何优点或价值来搞乱。他们通常不会，但它至少是一个关于注册管理机构的更多的体现方式。
回答 3 你可能不应该触摸服务
不要触摸系统32！我重复，不要触摸System32！这就是您如何销毁PC，无法销毁。不要这样做。 Syswow64也是如此。您触摸这些，您的计算机可能会失败启动，除非您完全重新安装操作系统或具有恢复密钥，否则切勿再次运行。
要减少WinSx的大小，请从Microsoft看到如何安全地执行此操作。但是，请注意，从WINSXS文件夹中删除文件或删除整个WINSXS文件夹可能会严重损坏您的系统，以便您的PC可能无法启动并使其无法更新。
您可能不应该触摸维修文件夹。您可以删除文件夹和文件，但很难找到它们而不会损坏其他任何东西。你可以像你一样，你可以真的毁了你的电脑。
我并不完全确定系统资源是什么，但我很确定它是运行操作系统（Windows）的空间。触摸这将很可能会打破您的计算机。
我的建议，不要触及这些，只需更多存储。你不太可能打破你的电脑并有问题。
回答 4 您需要知道为什么注册表发展。最初，在Windows 95中，我们曾经被称为DLL HELL。 DLL是&amp;rsquo;图书馆函数（实际上，动态链接库，他们的原始文件名扩展来自于来自的，这就是说，子程序和函数的函数存储库，彼此有一些关系。例如，像数学库一样，与平方根，随机数等相同的数学函数。在早期，人们将在他们自己的应用程序中将Microsoft Library函数（DLL）合并，以利用已经写入的不需要重新调整的代码。但有时他们会发现它们被认为是错误的，或者不合理的返回值，并恳请重写DLL来修复错误。作为他们善意的一部分，他们将替换相同命名的文件的Microsoft版本，因此我们可以从他们的掌握中受益。不幸的是，一个人的修复成为另一个人的错误，因此覆盖了相同名为的动态链接库（或DLL）文件变得猖獗。
您可能意识到该术语搜索路径，它是定义程序应该查找应用程序操作所需的文件的系统方式。您可能不知道的是，也是DLL的定义和已发布的搜索路径。首先要看起来与应用程序的EXE文件相同的文件夹或目录。接下来是Windows的子文件或子目录，&amp;lsquo;System&amp;rsquo;，然后是&amp;rsquo;System32&#39;，随着事情的发展，它是Windows将其自己的DLL文件放置的位置。当应用程序开发人员将修改其中一个Windows DLL以满足他们的需求时，开始出现问题，而不是简单地将他们的版本放入其应用程序文件夹中，他们会恳请系统中的同名DLL System32文件夹，以便其他人可以从他们的辉煌和仁慈中受益，以修复他们认为是现有DLL中的错误。当然，意见与错误是什么不同，什么是“修复”，另外，一些应用程序可能会对错误计数，然后在不再窃听时无法正常运行。 Chaos成为明显的结果。结果是dll地狱。
Microsoft解决方案开始在Microsoft开始采取积极方法来管理DLL时是否使用相同的文件名：注册表演变。当安装并尝试将DLL写入DLL搜索路径中的文件夹时（尤值系统和系统32）时，Windows会拦截写入过程，而是将DLL放入隐藏文件夹结构（如果我正常调用GAC）在它可以拥有自己的唯一位置，因此唯一的路径/名称组合，其中它不会干扰或与之混淆，或与具有相同名称的任何其他DLL（但不同的路径/名称）。然后Windows在注册表中创建了一个条目，其中应用程序及其潜在唯一的DLL将由该DLL的唯一路径/名称链接。然后，当应用程序启动并称为DLL时，调用将在注册表中查找唯一DLL的位置，并执行它而不是DLL搜索路径中可能存在的DLL（如果不在应用程序文件夹中）。因此，虽然应用程序将假设其对DLL的呼叫仅仅在DLL搜索路径中寻找它，但Windows实际上是查询注册表以查找其实际位置，然后将在那里打开它。因此，当每个应用程序可能唯一的DLL版本保留但不再干扰（或覆盖）同名DLL的​​任何其他版本时，DLL Hell都被避免了。
我应该注意，并非所有DLL都有DLL文件扩展;有许多文件扩展名与“动态链接库”相关，这给DLLS其文件扩展名。 Windows和Registry管理全部。
回答 5 魔鬼始终处于执行细节。
注册处本身并不是一个坏主意。事实上，我在第一次会议窗口之前始于我的程序中使用类似的解决方案。很少或从未使用的功能，诊断/调试支持函数不值得包含在GUI中，可以从注册表中启用与标志字段的一些神秘的二进制修改。这已经多次保存了我的一个$$：当它结果是一个小型功能没有在新的HW版本上可靠地工作，但是瘫痪了完整的系统并强调每个人，我立即解决了解决方案。只需转到控制台，发出标志-0x0c0840，并等待下一个版本。 Firefox和Thunderbird等应用程序具有类似的系统，成功齐全。 （关于：config）
分层，但不一定是逻辑的，大多数不是人类可读存储的配置信息也不是新的。 Amigaos实施了一个非常相似的解决方案。 （env：/ envarc :)与Windows注册表相反，Amiga Variant完全基于文件系统。这不是一个问题，因为时间的复杂性低得多，而Amiga文件系统从未有群集则，每个块都可以单独分配。在Windows上，注册表即使在早期的原始文件系统上也为小型配置数据提供了紧凑的存储，如FAT16。可能已经以更优雅的方式完成，但它（并且它仍然是）有效。
我相信，如果它已被正确使用，没有人会抱怨登记处​​。当某些事情不起作用时，我最初乐观，知道最容易有一个简单而且有效的工作注册机构黑客为我的问题。不幸的是，那里有不良的编程实践。例如。动态信息可以廉价地获得运行时，不应存储在注册表中只是因为从那里读取更方便。更改磁盘或重新安装某些内容后，信息将不一致，防止正常操作甚至Windows引导。然后在另一台计算机上进行黑客登记蜂巢。删除密钥通常可以解决问题。但这种和类似的问题是严重的滋扰。
这就是你摧毁一个好主意的方式。
回答 6 在罕见的时候，我用注册表弄乱，它是非常窥探的
就像在这里提供答案的其他人一样，我不使用程序化注册表清洁剂。通过这些工具的过去的经验一直在于，“清洁”将影响软件安装或系统本身的风险没有大的回报。
如果您的系统在多年后速度减慢，或者您有一个病毒或恶意软件感染，您希望“清洁”，您将更好地备份您的个人文档和文件，并重新安装系统和软件或在Windows 10中锻炼新的操作系统。
在罕见的时候，我用注册表弄乱，它是非常具体的目的，只有使用Microsoft文档进行更改。
在注册表之后，因为你觉得你的电脑很慢有点像是决定你要把控制器重新编程为你的燃料喷射，因为你不喜欢你所获得的天然气里程。可以做到吗？当然，但你得到的结果可能不是你想要的结果。
回答 7 取决于您需要的清洁类型。我个人不会因为我不希望注册表清理程序可能有权访问我的注册表并修改我的设置。如果您确定应用程序，如果您信任它，则只能使用一个。或者我会手动清理它或在线询问在线注册表清洁教程。
希望这可以帮助！
回答 8 Windows注册表项包含多个操作系统配置设置，并且对于系统应用程序和程序的正确工作至关重要。但不幸的是，随着时间的推移，他们累计堵塞了你的硬盘空间。不需要的注册表项对系统资源的不需要的负载使其使其缓慢而迟钝。
因此，我们需要一个很好的注册表清洁工具来微调我们的Windows 10设备，以使其全部运行。注册表清洁器不仅修理破损和过时的条目，还可以删除残留条目以提高系统性能。
这是我的建议。
它提供了一种通过删除垃圾文件，文件扩展名，DLL文件应用程序路径和注册表项来提高系统稳定性的简单方法。另一件事在其美丽中增加了它的创造备份能力。这种轻量级工具采用便携式设计，这意味着无需安装要求。</description>
    </item>
    
    <item>
      <title>有没有办法优化16位加法器（你可以使用更多的盖茨），所以它可以并行地做点什么或者其他东西将使其工作更快？</title>
      <link>https://xiangqingw.github.io/posts/is-there-a-way-to-optimize-a-16-bit-adder-you-can-use-more-gates-so-it-can-do-something-in-parallel-or-something-else-that-will-make-its-job-faster/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:03 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/is-there-a-way-to-optimize-a-16-bit-adder-you-can-use-more-gates-so-it-can-do-something-in-parallel-or-something-else-that-will-make-its-job-faster/</guid>
      <description>有没有办法优化16位加法器（你可以使用更多的盖茨），所以它可以并行地做点什么或者其他东西将使其工作更快？ 回答 1 有许多技术，包括携带潜行和携带选择方法。如果您正在进行大量的添加，您可能会考虑冗余编码，以推迟带有Carry-Save Adder。
很多，许多方法都在那里。
这个博客帖子有一个很好的调查：
回答 2 加法器是ALU（算术和逻辑单元）的核心。使用适当的逻辑，即使对于乘法或划分，也可以使用它进行比较。
鉴于在成像中，大多数像素是8位，您可以在并行地添加电路以在两组8位数字上运行。
回答 3 是的。使用携带看法发生器（CLA）。大多数ALU产品都有一个伴侣CLA。
回答 4 是的，我们的设计将以光速传播携带;不仅仅快，而且以光速为字面。
除了一个小细节外，这将是一种伟大的发明：我们正在使用继电器逻辑 - 大型机电继电器。
我们使用的继电器具有十分之一秒的切换时间。因此，涟漪加法器将显着慢 - 超过一秒钟传播携带。我们不想等待那久。
所以我的朋友重新设计了电路，使其作为携带和连接在阶段之间的携带和连接的功能，产生输出。随着电流可以去的速度，携带通过封闭的触点 - 光速。
结果是一个加法器，可以在恒定的一个门延迟中添加任何两个数量的多个比特。
当然，一个门延迟比任何合理的逻辑门更长的数量级数量多。如果可能有可能使用FET或某物使用相同的技术，但是您可以添加电容等，因此它不会像速率一样快（相对于栅极延迟）。
回答 5 基本上实现了一个完整的加法器，需要两个4：1 mux。
让我们从头开始。
要实现完整加法器，首先需要了解总和和携带的表达式。
这是表达式
现在需要将SUM的表达和携带在MUX树内。
对于Mux树计算，允许我们考虑Mux的以下参数。
I（0）到I（3）是所需的输入。
从上面的计算中，B和C被视为选择线（从上述完整加法器的真相表中取出）。
和T&amp;hellip;
回答 6 首先让我们看到半加法器。
在哪里
s =a⊕bs=a⊕b
c = abc = ab
现在FA增加了三位A，B和之前的携带孔。
这里，
s =a⊕bəcins=a⊕bəcin
cout = ab + bc + cacout = ab + bc + ca
现在FA可以使用两个如下实现。
在图中，p = a，q = b</description>
    </item>
    
    <item>
      <title>说你知道专家级别的所有编程语言/框架。您如何为您开始的每个项目选择一个？</title>
      <link>https://xiangqingw.github.io/posts/say-you-know-all-the-programming-languages-frameworks-on-expert-level-how-would-you-choose-one-for-each-project-you-start/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:03 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/say-you-know-all-the-programming-languages-frameworks-on-expert-level-how-would-you-choose-one-for-each-project-you-start/</guid>
      <description>说你知道专家级别的所有编程语言/框架。您如何为您开始的每个项目选择一个？ 回答 1 作为所有语言和框架的专家不会影响任何重要程度的决定。
在大多数情况下，您首先消除简单地完全没有建议的语言/框架。虽然这是一种技术决定，但它通常不需要语言或框架中的伟大专业知识。大多数情况下，它只需要最小程度的对语言适合和/或通常使用的任务类型的认识程度。
一旦您删除了完全不合适的候选人，重要标准只是很少是技术性的。除非该项目真的很琐碎，否则您的疑虑主要是能够找到足够人们在项目中努力工作的东西，并具有合理的保证，在项目期间仍然是案件 - 这可能对于一个大型项目，容易是5或10年或更长时间。
除非该项目很小，否则它不仅可能，而且完全可能在任何情况下使用多种语言和/或框架最终。
回答 2 作为一个在21多年以上的数十种语言和框架工作的人，我确信任何与我一样的经验。我会选择完全相同的方式，好像我不是多个框架和语言的专家。我会根据项目的业务需求和范围选择，我开始考虑项目的可用资源和目标。在编程项目中选择语言或框架是非常罕见的，以便在石头中设置。随着项目的进展和发展，有时可以使用该项目的语言和框架。您如何知道框架或语言永远不会实际上这一切。一个体面的工程师/程序员将非常快速地学习在特定项目上使用框架或语言时需要了解的任何内容，而不会成为该语言或框架的专家。这不是必要的。我曾在数百个，也许是使用各种语言，框架和工具的组合的数千个项目。从来没有一次我觉得我在项目开始后我使用的语言或框架有限。特别是与开源开放，很容易找到解决方案或用您正在使用的语言或框架解决问题。这实际上是专家如何成为专家！
在这种程度和专业知识，真正的问题不是要选择哪种语言或框架，但是如何选择哪个项目工作并使用您的专业知识？
这是我挣扎的人。我在工程科技解决方案中充分倾斜，我需要小心电力如何挥动，并确保我正在研究可以产生积极影响的项目或至少避免对此产生负面影响的项目世界。
回答 3 没人做！它是一个无意义的问题
回答 4 我从不挑吸。OFC有些人对你最喜欢的东西，但在一天结束时，我试图始终遵守共识，当我没有确定性时，它更多地培养怀疑而不是确定性^^。例如，我不会使用Spring for Matheraly Scale的东西。如果一个可交付的1个以上，我不会使用Go，等等。凭借好奇心和经验，您可以进一步绘制有关相关的心理排行。
回答 5 您必须根据项目的长期目标和运行时和计算约束来选择工具。
作为一个示例，如果您构建医疗设备，您有不同的约束，在启动下一个社交网络时。
我的目标是平衡开发人员体验，以确保有关更改的反馈尽可能快，您能够尽可能准确且快速验证功能。
我想自动化一切可能，以便CI / CD是一个障碍。
当您使用许多第三方依赖项时，您希望具有可预测的依赖性管理。
所有这些类型
您必须根据项目的长期目标和运行时和计算约束来选择工具。
作为一个示例，如果您构建医疗设备，您有不同的约束，在启动下一个社交网络时。
我的目标是平衡开发人员体验，以确保有关更改的反馈尽可能快，您能够尽可能准确且快速验证功能。
我想自动化一切可能，以便CI / CD是一个障碍。
当您使用许多第三方依赖项时，您希望具有可预测的依赖性管理。
所有这些类型的力量都将忍受您的项目，并将您推动您参加某些选择。
许多人仍将拥有自己的最爱，并给出相同的限制选择不同的选择。
语言和工具的可取性和普及驱动器采用并馈送循环。
对于一种突破的新语言，这是非常困难的，因为存在很多情绪惯性和现有的码条的投资。
我个人更喜欢类型安全的语言，因为它们帮助我避免了一系列错误。
我的个人观点是，Kotlin，Java，Groovy和Rust（TypeScript，直到Kotlin撰写Web和Kotlin / WASM达到时间），在实现最佳开发人员体验时，仍有很少的问题。
回答 6 选择从消除回合开始，直到剩下一些候选人。
提示：如果该技术的适当性需要研究，实验，概念证明，技术证明，认证，难以在您的域名中找到客户引用，那么它不应该是您的顶级偏好。
消除回合后，请考虑：
回答 7 大多数专业开发人员都知道多项编程语言和框架到公平程度。鉴于可交付成果，您可以为工作选择最佳工具。但在一天结束时，这是一个复杂的决策树，有利于利弊，在一天结束时，您的选择将受到时间的高度影响，团队能力以及您试图完成的整体目标。
回答 8 嗯，如果您背后有一个大规模的CodeBase，您只能在“专家”级别上维持3-4种语言。之后，事情开始变得有点模糊。您通常希望将自己限制在您的团队能够支持方面。为没有人使用的语言编写图书馆，没有意义。
如果你是自由职业者，你没有在你身后的团队，那么你选择了臀部和可维护的任何东西。
回答 9 大家好，
我是Sanaya Rajput，我想回答这个问题。在开始讨论之前，首先让我们了解Python。
什么是python？
Python是最受欢迎和解释的高级编程语言。基本上它用于Web开发，软件开发，数学，科学和数字应用程序。
如何学习Python？
如果要掌握Python编程语言。因此，您可以在线和脱机平台，您可以在这里加入和学习Python。如今，许多在线平台为Python提供了教程和视频。但你应该有好k
大家好，</description>
    </item>
    
    <item>
      <title>HTML如何（与CSS组合时）被认为是由其他人完成的，但不是其他人？如何（DIS）证明？</title>
      <link>https://xiangqingw.github.io/posts/how-is-html-when-combined-with-css-considered-turing-complete-by-some-but-not-by-others-how-is-it-dis-proven/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:02 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-is-html-when-combined-with-css-considered-turing-complete-by-some-but-not-by-others-how-is-it-dis-proven/</guid>
      <description>HTML如何（与CSS组合时）被认为是由其他人完成的，但不是其他人？如何（DIS）证明？ 回答 1 您必须在音乐会中真正滥用HTML（对于变量）和CSS（用于循环），以使它们完成完成 - 但仅在一起使用时，以这种相当滥用的方式。
JavaScript本身正在完成它自己的完整，但您没有将JavaScript作为问题的一部分。
在任何情况下，我相信那些不相信HTML + CSS的人正在完成完整的人可能无法建立一个完全从各个组件完成的东西。
回答 2 作为最后一点，大多数人理解和关心一个
要为特里，vladislav和克里斯托弗写了一个小笔记，如果你问我是否曾经问过完整，我会告诉你没有。为什么？我没有知道。我甚至不确定它有意义的区别。你可以理论上可以使用两者编写一个程序，但在实践中，没有人会。定义不是通用编程语言的东西，因为完成完成少数信息。例如，AWK是完成的。我看到了证据。我仍然不会在awk中编写一般目的。
作为最后一点，大多数人理解和关心图灵完整性意味着不知道HTML和CSS。
回答 3 很多东西都意外完成。HTML5 + CSS3是一个这样的示例 - 它们从未打算完成，他们不应该用于编写程序，但是&amp;hellip;&amp;hellip;你在一个大堆中抛出足够的复杂性，迟早变成了&amp;hellip;&amp;hellip;如果有的话，你必须有意识地努力避免一些系统变得完成&amp;hellip;&amp;hellip;
您可以在此处找到示例，所有这些都包含与其编写的解释和程序的链接，证明他们的图灵完整性：
回答 4 您证明它的方式是完成的方式是表明您能够编程（具有相对简单的要求）。如果可以，那就是。如果您无法在其中编写一个程序（取消输入的东西，则具有[未绑定的]可变状态，并且从此生成输出），那么它不是。
据我所知（是有限的）HTML和CSS都没有可编程。没有可变变量可以分配和随着代码运行而进行更改。没有州（没有变量），没有循环，它不是tc，不能。编辑添加：请参阅vladislav zorov的注释，看看如何创建一个州，这使得它完成完整。
所以，挑战说这是努力实施康威的生命游戏（蜂窝自动机仿真）的人。如果他们可以，它是tc。但没有状态和循环，他们将无法。
现在，也许有些人在CSS中创建了州，使其成为我不知道的变量的东西。如果是这样，那么组合可能是TC，因为这将允许您对其进行编程。
编辑添加：您在HTML / CSS中创建状态的方式并不明显，它们不是变量本身，但如何格式化字段，例如字段。它们是否突出显示了，但由于您可以查询和动态地改变此类属性，因此它们也可以作为比特（或磁带上的单元格）工作，即使它有点挂起以使其执行此操作，这就是为什么它不明显是一个人可以操纵。另一方面，大多数图灵机模型也不完全易于编程。它通常基本上是汇编语言以下的一个级别。
并注意该上下文中的编程不同于脚本。脚本可以任意复杂，让人们认为他们是编程。但是在语言有机会之前，您需要保存状态（以及制作程序循环的方法）。任意复杂性不是图灵完整性，但如果你可以做这两件事并且有条件你可以测试和做出不同的事情，那么即使语言看起来非常简单。
回答 5 一个误解人们对系统进行了完成的，是它们用作计算机。图灵完整性实际描述了问题，您所做的就是将其描述为TING-TREESS的物品的一些问题。通常情况下，问题是预测某些状态，如果减少了预测图灵机的停止状态的问题，则系统是图灵完成的状态，并且可以预测图灵机的停止状态降低到&amp;hellip;&amp;hellip;
回答 6 转向完整。您需要能够实现转动机。车床有状态（存储/磁带）和过渡（有限状态机）
HTML可以作为存储，而CSS可以是过渡。由于CSS具有所需的所有条件，因此您需要为您想要的任何类型的有限状态机定义适当的过渡。
没有CSS的HTML是静态的，所以无法实现转换。
回答 7 不仅是MINECRAFT正在完成，而且一个名为HANS LEMURSON的人采取痛苦，使用redstone在MINECRAFT内部实施一台工作电脑。
显然这对他来说并不足够酷，因为他的下一步是在Minecraft落实Minecraft，这是一个像上述计算机的顶部那样的MINECRAFT的游戏[1]。
[1] 这对整个新水平令人敬畏。
脚注
回答 8 我不喜欢的是，当人们试图聪明时，给出没有逻辑的愚蠢答案。很多人都说否，你只是只用HTML，CSS和Javascript限制自己，这只是雄辩。
想象一下，有人问鸡，土豆和绿色沙拉足以满足全甘醇餐吗？然后有人说嗯，不&amp;hellip;&amp;hellip;你需要汤，你需要沙漠，你需要面包棒&amp;hellip;&amp;hellip;这是2020次改变了
Bla Bla Bla Blaaaaaaaaaaa
但如果有人不喜欢汤，沙漠和面包棒怎么办？您是否知道这个世界上有多少网站完全在HTML和CSS（没有JavaScript）？
许多！许多网站非常简单，人们为​​此付出代价。如果人们为此付出代价，那么为什么没有HTML，CSS和JavaScript足以进行全职工作？逻辑在哪里？
我做网络设计，我遇到了不知道编码的人。我永远不会忘记我在LinkedIn上遇到的那个女孩，她为一家公司工作了多年，她没有Clue如何编写CSS。
她是怎么做到的？有一些平台，类似于每月支付的Wix。您可以与他们建立网站，她还使用一些软件&amp;hellip;&amp;hellip;只是用鼠标 - 拖放。
她把钱作为一个web开发人员！不，这不是最低的薪水！客户对她所做的事情感到满意！
伙计，相信我&amp;hellip;&amp;hellip;当有人开展业务时，业务为每年200 000和本业务的所有者有很多东西，有许多需要支付的事情。
&amp;hellip;&amp;hellip;其中一个是网站。当本业务的所有者支付网站并表示需要有一个联系人页面时，它需要使用图片&amp;hellip;
你认为他会对JavaScript提供该死的吗？如果你告诉他javascript，他也会说我的儿子也看着星球大战
我个人编写CSS，HTML，JavaScript和PHP。然而，许多客户告诉我，我希望你制作一个Wordpress网站，他真的告诉我我会付钱给你，停止编码并用鼠标拖放拖放</description>
    </item>
    
    <item>
      <title>什么是一个编程概念，你发现自己每天都在使用时使用？</title>
      <link>https://xiangqingw.github.io/posts/what-is-one-programming-concept-that-you-find-yourself-using-every-day-when-you-code/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:02 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-one-programming-concept-that-you-find-yourself-using-every-day-when-you-code/</guid>
      <description>什么是一个编程概念，你发现自己每天都在使用时使用？ 回答 1 当我12岁时，我开始自己编程。
我是怎么开始的？
在学校的明年有C ++，我想准备好。所以从图书馆阅读几个C ++书籍。根本没有代码。方法是错误的。不了解一件事并迅速失去兴趣。
下次我尝试过，我有一个编译器运行。是的。 Turbo C ++（请不要使用它）。我始于基础知识 - 简单的输入输出程序，如计算银行兴趣，显示金字塔，生成报告卡等。几乎没有数学，变量，条件，循环和功能。这就是它所做的一切。这一切都是最初需要的。
当我获得语法错误时，我不能谷歌它，就像你现在可以做的那样（所以没有堆栈溢出）。因为我没有访问互联网。我唯一的资源是编译器文档，书籍以及学校所教的内容。相信我，这并不容易。但这教会了我很多。
我对调试有任何了解。因此，如果发生分段错误，我用于添加一些输出语句并检查显示的最后一个输出。保持添加输出语句，直到我弄清楚错误发生的行。试验和错误方法。这没好玩，但再次教我很多。
如果像我们这样的人可以学习编程并从事职业生涯（几乎没有任何资源），那么这些天的编程
回答 2 变量。我似乎无法绕过它们。他们到处都是我的代码。
认真，简单。如果我可以提出一个聪明的LINQ语句和CRAM十行逻辑进入聪明的单线，我克制自己。通常那些聪明的单行队员不可能在三个月后拆解 - 甚至是我甚至在三个月后破译 - 只是导致长时间的维护时间。
他们看起来很酷，但实际上，他们不会更快地运行并使每个人包括你，那个写它的人更令人更快地跑得更快，并将它 - 了解它正在做的事情以及如何解开它。
同样，代码如下：</description>
    </item>
    
    <item>
      <title>什么是飞行脚本？</title>
      <link>https://xiangqingw.github.io/posts/what-is-a-flyway-script/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:02 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-a-flyway-script/</guid>
      <description>什么是飞行脚本？ 回答 1 Flyway脚本是一个文件，您可以将SQL命令放在数据库中以进行迁移或版本控制。
您为此脚本文件创建版本和Flyway控制此脚本的执行状态，确保只能执行一次。
有关更多信息，您可以看到：
回答 2 什么是脚本？
它的一些源代码可以在不需要将其预先编译成二进制可执行文件的情况下运行。
什么是脚本语言？
实现了翻译的任何语言。注意任何语言可以（理论至少）被编译以及解释。甚至有这样的例子：
解释器可以被归类为3个分支：
（1）一个扁平批量脚本runner。这只是脚本文件中的解释器读取命令，然后调用在每个命令中指出的那些函数/外部程序。这种类型的样本包括：
（2）在飞行中，编译源代码被读入JIT编译器 - 它将源代码转换为机器语言，何时运行。默认情况下，某些语言具有这些，例如，
（3）通常编译中间语言脚本语言（注意，即使将二进制可执行文件制作字面意味着转换）到另一种可以通过JIT编译器更新的语言编译。这些样本包括：
注意这些只是样本，如果我列出了所有Quora服务器可能太满了;）
它一般是否适用于程序？
不，它为一切。从控制台中的自动处理文件处理到登录/安装时的设置，通过向现有程序添加额外的功能/插件，以制作完整的程序，或者可以使用任何其他编程语言。
实际上，网页上的HTML / CSS / JS是程序中内置脚本解释器的示例。如果它没有这样的脚本能力想象中，您需要将每个网页预先编译到所有可能的客户端PC上的机器代码&amp;hellip;
脚本将始终具有其用途。倾向于说，当它不作为尽可能快地运行并尽可能少的资源使用时，脚本是一个很好的契合。从另一边：编译时会在使用中创造难以克服的问题，然后脚本是最明显的选择。
回答 3 选项不仅适用于剧本，而且适用于大多数文学属性 - 播放，小说，文章，真正的生活博物馆
从本质上讲，可以选择购买某事物的独家选项 - 在这种情况下，您的剧本，您和生产者已同意，通常一年到十八个月。
这样，生产者可以尝试设置和销售项目，而无需花费所有的资金，它将获取其所有权利，他往往没有，或者这将构成不可接受的百分比他的发展基金。
选项不仅适用于剧本，而是大多数文学属性 - 播放，小说，文章，真正的生活故事，它一定都有相同的想法。我们将支付前面的总权限的小百分比，出去，试图让它成立（这意味着让某人令人信服有很多钱来值得制作电影），如果我们这样做，而且得到很多钱，然后我们会彻底购买权利，然后你会拿到你的钱。
更常见的是，生产者将支付那个小型期权钱（原则上，它应该是谈判购买价格的百分之左右，这几天它更接近什么） - 然后出去，尝试在他到处购物工作可能会。如果他成功 - 欢呼！他不是更常见的，他没有。没有人做任何事情。正如他们所说，你的脚本一直在购物。你所看到的只是你为这个选项付出了什么，这可能是非常好的 - 而且可以去。欢迎来到大城市。
NMS.
回答 4 取决于你问谁;一般来说，那些说他们完全不同的人在编程前面有一个隐含的真实。
编程仅意味着在表单中编写计算机的指令（通过各种其他程序）可以运行自己。无论是编译还是解释，无论是存储在Web上，存储在磁盘上，存储为固件，或者键入内存中的短信（要粘在一点），如Bash子程序或旧的8位交互式基本&amp;hellip;&amp;hellip;或者只是为了跑一次，就像一个衬里一边的衬里）这是所有编程，而一些程序员可能会更好地获得报酬，而没有比任何其他程序更真实的编程形式。
脚本是一种编程类型，它不是一个非常明确的。它最初来自UNIX上的shell脚本，这不是与DOS批处理文件不同的所有内容 - 它旨在协调其他程序之间的内容，而不是直接编写应用程序。 40年前，当计算机既简单又较慢时，解释语言与编译的速度差异很大。所以原本进化的语言像shell脚本一样，但更好 - 例如perl或tcl-被称为脚本语言，最初主要用于那种协调。
OTOH，剧本的定义变得越来越含糊不明;早期的网络是基于CGI脚本，这些脚本是程序 - 有时小，但有时相当大 - 产生动态内容。几种现代脚本语言 - 最符合的Python和Ruby - 演变为现代面向对象语言，刚刚发生了一个解释的运行时。他们使用（一些）用于脚本样式任务，也适用于Web（Ruby / Rails）和数据科学（Python）的非常大的软件系统
有些人会将任何解释的语言视为脚本，但这似乎是在即时编译的这一天的一种严格的人工区分，以及像Java和C＃这样的语言，具有与解释的中间表示的编译步骤。
回答 5 从根本上</description>
    </item>
    
    <item>
      <title>你能否在没有实际学习的情况下通过课程？</title>
      <link>https://xiangqingw.github.io/posts/can-you-pass-a-class-without-actually-learning-anything/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:02 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/can-you-pass-a-class-without-actually-learning-anything/</guid>
      <description>你能否在没有实际学习的情况下通过课程？ 回答 1 作为伟人，我是纳西姆n taleb最好，我可以解释：
如果你忘记了你通过决赛的那一刻你所学到的一切，你都欺骗了这个系统，系统欺骗了你。
当然，这不仅是可能的，而且对我们大多数普通民众的默认设置是可能的。
NB我必须在中学传递阿拉伯语模块。对于上下文，我是一个民族普什图，谈到阿富汗，除了在向一个特定的亚伯拉姆信条支付唇部服务的社区中提出的人之外，没有任何与莱特或阿拉伯菲利克斯相关联。 TPTB为我决定，只许唇部服务不够好，我们必须是拉丁语的牧师。我通过最终的资格考试和字面意思，而不是比喻或隐喻 - 我记得这一天的唯一阿拉伯语是这句话是番茄。
可能还有很有用的人，就是说。
回答 2 绝对地。当学生A对学生b时，我听说过一次谈话，你曾经举行过谁？B说，我相信我会接受边缘。一个说，你为什么不服用z？他更容易！b回复，我想真的学到一些东西！
回答 3 当然是。
记忆内容与学习不一样。学习涉及积极的思考和理解。记忆只是记忆。
回答 4 这是可能的。特别是在那些容易的课程中。当然，它总是用它或失去我们所学到的任何东西。
回答 5 问aoc。她获得了经济学学位，并对经济学知之甚少。
回答 6 几年前，我的一名学生在我的一位学生中有一个学生告诉我们的团队，他们不知道如何代码，即使有两个编码课程作为我们所处的一个编码课程。然后两个几年后，我和他们在一起，我们不得不展示。基于他们的演示文稿，似乎他们仍然处于新生或二年级学生的编码能力，尽管我们是在高级阶级。至少在计算机科学领域，你可以通过废话，但一旦你接受了你搞砸的工作。绝大多数计算机科学技能来自您的空闲时间。
回答 7 是的，但谁将成为失败者？你，谁经过，但没有学到任何东西或者老师什么都没有赚来？
回答 8 如果您有关于课程内容的先验知识，并且常识良好，则可能会发生这种情况。
回答 9 我的一位老师告诉我一个困扰着我的故事，我的余生：
陶器老师将班级分成两半。
到了上半场，她说，你将花费学期学习陶器，规划，设计和创造完美锅。在学期结束时，会有竞争来看谁是最好的。
对于她说的另一半，你将花费你的学期制作很多锅。您的成绩将根据您完成的已完成的花盆数量。在学期结束时，你也有机会进入比赛。
钍
我的一位老师告诉我一个困扰着我的故事，我的余生：
陶器老师将班级分成两半。
到了上半场，她说，你将花费学期学习陶器，规划，设计和创造完美锅。在学期结束时，会有竞争来看谁是最好的。
对于她说的另一半，你将花费你的学期制作很多锅。您的成绩将根据您完成的已完成的花盆数量。在学期结束时，你也有机会进入比赛。
上半年课程扔进了他们的研究，规划和设计。然后他们设置了为竞争创建一个，完美的锅。
班级的下半场立即抓住了粘土的糊状物，开始搅拌罐。他们制作了很大的，小的，简单的和错综复杂的。他们的肌肉酸痛几周，因为他们获得了抛出这么多盆所需的力量。
在课程结束时，邀请两半都进入比赛中最完美的锅。一旦投票计算，所有最好的盆都来自于数量任务的学生。他们获得的练习使它们明显更好地比追求单身，完美锅的规划者更好的陶器。
在生活中，学习技能的最佳方式是制作很多盆。
更新：似乎我们发现了故事的起源&amp;hellip;&amp;hellip;也许。在艺术和恐惧中发现了一个非常类似的故事以及在百万富翁房地产经纪人提及。谢谢凯利钻！
回答 10 当我第一次开始在Quora上写作时，我的第一个帖子之一得到了354次观点。
就在几个月之后，我的Quora帖子之一539,900意见，11,200次上涨，并发表于Inc，Forbes和Fortune。
我写作成功的一个关键是能够更快地学习。
这是我的前10个提示：
学习是我们能够经历的最好的事情之一。当我们在精神上和身体上越来越大，它让我们感到活力。它给了我们一种成就感。它给了我们一种势头。它让我们激情。
希望这篇文章帮助了你今天学到了一些东西。;）
是的，这是官方的第一个在Quora Post中使用的表情符号。#theresafirstforeverything.
回答 11 当我还在高中时，我曾经和朋友一起乘坐了很多AP课程，那些聪明的人比我更聪明，比我更聪明。在此期间，我拿起了一些伟大的策略来学习更有效，虽然大多数情况下降到你在学习时花了多少时间。
在我生命中的那一点上一直是一个骄傲的拖延者，我真的不想花费任何时间学习，所以我有创意。后来，正如我在学院学习心理学，我们不得不采取赛修&amp;hellip;&amp;hellip;
回答 12 容易地。自1985年，我在课堂上没有学习课堂上的编程语言。
从那以来，我所学到的每种编程语言都来自阅读书籍或在线材料。
但只是学习编程语言，除非您了解其基础上的数学领域的概念基础 - 计算机科学 - 将意味着您并不像您一样强制或适应程序员。</description>
    </item>
    
    <item>
      <title>在为应用程序REST API实现API密钥身份验证时，最先进的艺术/最佳实践是什么？</title>
      <link>https://xiangqingw.github.io/posts/what-is-the-state-of-the-art-best-practices-when-it-comes-to-implementing-api-key-authentication-for-your-apps-rest-api/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:02 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-is-the-state-of-the-art-best-practices-when-it-comes-to-implementing-api-key-authentication-for-your-apps-rest-api/</guid>
      <description>在为应用程序REST API实现API密钥身份验证时，最先进的艺术/最佳实践是什么？ 回答 1 嗯，一般这意味着JWT，通常通过SHA512等东西签名。您可能会或可能不在意也可以加密令牌，但通常不需要。这些令牌通常被设计为在短时间内到期（我经常见过2分钟）。如果密钥由客户持有，则到期将更长，通常（在该案例中几个小时）。当您拥有正在进行密钥生成的API网关时，使用这种模型（然后在网关和客户端之间使用一些其他会话管理协议）。通常，这完全是一个或另一种类型的OAuth2流动，以建立客户真实性等。
显然，这里的主要考虑因素是确保用于签署令牌的密钥仍然是安全的。
回答 2 假设您的意思是使用API键签署请求，我将从头顶列出以下内容：
回答 3 RESTFUL API - 也称为RESTful Web服务或R
图像来源： - 谷歌
RESTful API是用于应用程序接口的架构风格，它使用HTTP请求访问和使用数据。该数据可用于获取，放置，邮寄和删除数据类型，这是指读取，更新，创建和删除有关资源的操作。
网站的API是允许两个软件程序彼此通信的代码。 API为开发人员写出了从操作系统或其他应用程序请求服务的程序的正确方法。
RESTful API - 也称为RESTful Web服务或REST API - 基于代表性状态传输，这是一种架构风格和经常用于Web服务开发的通信方法。
REST技术通常优于其他类似技术。这往往是这种情况，因为休息使用较少的带宽，使其更适合高效的互联网使用。 RESTFUL API也可以通过编程语言（如JavaScript或Python）构建。
六个休息API规则
为了完全受益于REST提供的功能，API必须遵循六个要求。 （嗯，技术上五是必需的，一个是可选的。）每个要求为快速和多功能API奠定了基础。
1.客户端 - 服务器分隔
在REST架构下，客户端和服务器只能以单向交互：客户端向服务器发送请求，然后服务器将响应发送回客户端。服务器无法使请求，客户端无法响应 - 客户端启动所有交互。
通过简化客户端和服务器之间的通信，RESTful API保持两个方便独立的。这样，在不担心影响任何其他服务器的情况下，客户端软件可以增长它们的构建，并且可以在不无意中影响客户端的情况下修改服务器内容。
2.统一界面
本指南表示所有请求和所有响应都必须遵循公共协议或格式化其消息的方式。应用程序和服务器用各种不同的语言编写，没有中间人在没有中间人一起工作的巨大工作。统一界面是任何与任何REST API通信的客户端的通用语言。
没有标准化的通信，软件之间的翻译请求和响应将是一个完全杂乱。轻微的差异将导致信息困扰和丢失，并且应用程序必须在API更新时更新他们的请求流程。统一的界面消除了这种可能性。
对于大多数REST API，这种通用语言是HTTP或超文本传输​​协议。 HTTP没有专门为休息而创建。相反，休息采用此通信协议作为使用它的应用程序的标准。
要使用HTTP与REST API，客户端以特定格式发送可能看起来熟悉的请求。例如，对视频数据的YouTube API的请求如下所示：
阅读更多： - 为您的移动应用程序开发选择第三方API的10个提示
回答 4 第二个是模型方法，也称为规范方法，NewsData.io新闻API是一个例子，它从规范和/或开始
RESTful API设计的方法可能有所不同，但有五个基本的API设计元素可以帮助指导工具选择难题并解决RESTful API设计问题。
有两个主要的途径来设计RESTful API。
一个是开放的过程方法，这是最常见的。此方法侧重于支持API设计过程的步骤和工具，几乎没有或没有对要生成的API的性质的约束。
第二种是模型方法，也称为规范方法，NewsData.io新闻API是一个示例，它以RESTful API的规范和/或模型开头，并支持该模型的调整RESTFUL API。每个项目特定的界面。随着蜜蜂变得越来越普遍，这种策略正在获得地面，但并非没有其并发症的份额。</description>
    </item>
    
    <item>
      <title>如何使用RSA私钥连接到SSH？</title>
      <link>https://xiangqingw.github.io/posts/how-do-you-connect-to-ssh-with-an-rsa-private-key/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:02 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-you-connect-to-ssh-with-an-rsa-private-key/</guid>
      <description>如何使用RSA私钥连接到SSH？ 回答 1 您只需使用私钥代替密码。使用SSH或OpenSSH的CLI，您只需使用-i命令行参数和文件的路径;通常SSH客户端位于GUI中，因此您使用GUI选择器选择密钥文件（可能需要转换为不同的格式; SSH，OpenSSH和Putty是三种主要格式）
回答 2 私钥只是一个数字，随机挑选。对私钥的所有权和控制是用户控制与相应比特币地址相关联的所有资金的根源。您可以查看我的（生物）如果您需要，请帮助私钥用于通过证明交易中使用的资金所有权来创造花费比特币所需的签名。私钥必须始终保持秘密，因为向第三方展示它相当于让他们控制通过该密钥保护的比特币。私钥还必须备份并保护免于意外损失，因为如果它丢失，则无法恢复，并且由它所保护的资金也是永远丢失的。
回答 3 安全shell（SSH）系统可以配置为允许使用不同类型的身份验证。通常的身份验证要求您使用密码进行身份验证，但您也可以使用公钥加密进行身份验证。您通过生成SSH密钥对来执行此操作，由公钥和私钥组成。您将私钥保留在您自己的系统上，或在您的连接系统上，您将公钥复制到您的系统连接到。 （请注意，这些密钥仅用于身份验证目的，并在建立连接后播放任何角色。）
N.B .:以下逐步方向用于UNIX / Linux系统。
要利用公钥身份验证，首先在自己的系统上生成密钥对，命令：ssh-keygen -t dsathis在主目录，id_dsa和id_dsa.pub下的.ssh目录中生成一对文件。 id_dsa包含私钥，而id_dsa.pub包含公钥。 （键使用数字签名算法。）将公钥文件复制到目标系统，例如使用以下命令：scp〜/ .ssh / id_dsa.pub user@targetsystem.example.com：〜（youll必须使用您的密码。）
现在将SSH作为正常运行，并使用以下命令：cat id_dsa.pub &amp;raquo;〜/ .ssh / authorized_keysthis将文件（公钥）的内容附加到sshs授权_keys文件中，其中包含所有公共列表可以对此用户帐户进行身份验证的键。
现在退出并SSH回到目标系统。如果您正确完成了这一点，则不会提示您输入密码，因为公钥系统将对您进行身份验证。 （如果它不起作用，您可能需要使用密码登录，然后使用命令Chmod 600〜/ .ssh /授权程序更改授权_keys文件的权限。或者您的服务器管理员可能会在不使用该系统上配置SSH公钥身份验证。）
生成密钥对时可以使用其他选项;您可以使用不同的公钥算法和/或密钥长度，并且您还可以在公钥上设置本地密码，您将在每次要使用它时将其键解锁，作为添加的安全措施。由于这可能是笨重的，所以称为SSH代理的程序也存在，这将缓存您的密钥并将它们呈现给您代表访问的服务器，因此您只需进入本地密码“一次。
还有一种其他类型的SSH密钥也使用。每个服务器都有自己的公钥/私钥对，并且您访问的所有服务器的公钥都存储在您的.ssh目录中的文件中已知的文件中。连接到服务器时，SSH检查是否有服务器公钥;如果没有，它会显示一个提示，允许您验证要连接到该服务器，然后如果继续连接，则将公钥存储在已知_hosts文件中。如果您拥有公钥，但它无法成功解密与该服务器私钥加密的服务器发送的挑战（例如，如果服务器密钥已更改），则SSH显示错误消息，并不允许您连接，如这可能是篡改连接或服务器的人的标志。 （它也可能是良性的;例如，如果已重新安装服务器操作系统，则服务器SSH键可能已更改。）要解决此问题，您可以编辑已知的_Hosts文件并删除错误的公钥（通常会删除错误消息）指出，可以找到错误键的文件的行），并允许服务器在下次连接到它时向您发送新键。
回答 4 公共关键密码学的整个基础是基于您提出的问题。它只是因为从公钥的私钥的提取是计算地不可行的，即公钥密码系统是安全的，因此使用。
让我通过RSA密码系统演示这一点。
这里关键是（n，p，q，a，b）（n，p，q，a，b）。
公钥是（n，b）（n，b），私钥是（p，q，a）（p，q，a）。
n = p * qn = p * q {其中p和q两个是大的primes}。
AA选自1,2，&amp;hellip;&amp;hellip;，φ（n）-11,2，&amp;hellip;.，φ（n）-1。这里φ（n）φ（n）是欧拉的总函数。
计算BB，使得AB≡1Mod（φ（n））ab≡1mod（φ（n））。
现在你被赋予公钥
公共关键密码学的整个基础是基于您提出的问题。它只是因为从公钥的私钥的提取是计算地不可行的，即公钥密码系统是安全的，因此使用。
让我通过RSA密码系统演示这一点。
这里关键是（n，p，q，a，b）（n，p，q，a，b）。
公钥是（n，b）（n，b），私钥是（p，q，a）（p，q，a）。
n = p * qn = p * q {其中p和q两个是大的primes}。</description>
    </item>
    
    <item>
      <title>如何在Google中获取主要搜索结果并自动将其放入.txt文件？</title>
      <link>https://xiangqingw.github.io/posts/how-do-i-take-in-the-main-search-result-in-google-and-put-it-into-a-txt-file-automatically/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:02 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-i-take-in-the-main-search-result-in-google-and-put-it-into-a-txt-file-automatically/</guid>
      <description>如何在Google中获取主要搜索结果并自动将其放入.txt文件？ 回答 1 我不认为有一个主要的搜索结果 - 一个在t
我使用OneNote和OneNote Clipper扩展（适用于大多数浏览器）。当我选择搜索结果的文本时，我要保留我可以右键单击并发送给OneNote。 OneNote中的说明将在答案中保留任何链接的可点击性质 - 当然，这是使用Google（或任何搜索引擎）进行网络搜索的原因 - 获取页面的链接。将其发送到文本文件将删除链接的可点击性质，将其作为文本作为文本，您必须将其复制和粘贴到浏览器中使用。
我不认为有一个主要的搜索结果 - 顶部的一个是最常见的广告。下一个可能不是我认为最好的。然后我仍然必须保存我喜欢的那个并删除另一个文本文件。
回答：如何在Google中获取主要搜索结果，并自动将其放入.txt文件？
回答 2 谢谢你的ata。
您可以将护目镜响应（您认为主要）分享到设备上的笔记本。这取决于您在设备上的应用程序。如果你有记事本或笔记等。
希望这可以帮助。
回答 3 谷歌推出并测试了又称人们卡的虚拟名片。这看起来像是下面的截图。
看起来很酷吗？
人员卡可以包括网站链接，与社交档案，教育，工作，联系信息以及您可以将其设置为公众的任何其他信息的链接。
当您搜索名称，如果他们有一个人卡，您将在搜索结果中看到一个姓名，专业和位置的部分。该部分可以被删除，看看完整的卡片。看看下面的截图。
现在，如何创建一张卡片？
谷歌推出并测试了又称人们卡的虚拟名片。这看起来像是下面的截图。
看起来很酷吗？
人员卡可以包括网站链接，与社交档案，教育，工作，联系信息以及您可以将其设置为公众的任何其他信息的链接。
当您搜索名称，如果他们有一个人卡，您将在搜索结果中看到一个姓名，专业和位置的部分。该部分可以被删除，看看完整的卡片。看看下面的截图。
现在，如何创建一张卡片？
人们牌只在印度提供，并将很快推出其他国家，或者您可以随时使用VPN为自己创建一个。
除了排名自己的名字之外，还需要很多努力，也有很多选择。
您可以尝试在您的姓名中购买域，并为在Google上搜索名称的人员提供，或使用LinkedIn或Quora在搜索结果中以上面的屏幕截图为自己排名。
确保您的名字脱颖而出，如果您有一个名人名称，那么它最好购买域并优化它。如果不是，您可以优化您的LinkedIn和Quora配置文件以使自己出现在搜索结果上。
如果你发现它很有用，请覆盖..
回答 4 没有免费的API来提取Google搜索结果，但您可以使用充当API的URLFetch方法来呈现Google Serps。
您无法创建脚本或机器人来刮除/爬网谷歌搜索结果，因为谷歌将从几个请求后禁止爬行。
您可以使用Google自定义搜索API（2018年4月已弃用）或URLFETCH方法实现这一目标。这些是谷歌刮的两种官方方法。
在下面的教程视频中，我解释了如何刮伤或获取Goog &amp;hellip;
回答 5 是的。
我正在使用这些类型的操作，根据自己的要求：
具体搜索条款：视频，新闻，图像，地图，书籍，航班，应用程序。
根据时间范围：
更具体的：SafeSearch过滤器，Google Instant Predictions，私人结果
用于自定义搜索结果：高级搜索
我和你分享一个道德方式来操纵你的谷歌搜索结果。希望它对你有所帮助。
谢谢你的询问。
问候，
Avishek Mondal。
是的。
我正在使用这些类型的操作，根据自己的要求：
具体搜索条款：视频，新闻，图像，地图，书籍，航班，应用程序。
根据时间范围：
更具体的：SafeSearch过滤器，Google Instant Predictions，私人结果
用于自定义搜索结果：高级搜索</description>
    </item>
    
    <item>
      <title>您如何找到具有递归解决方案的最长常见的子字符串（字符串，算法，递归，动态编程，开发）？</title>
      <link>https://xiangqingw.github.io/posts/how-do-you-find-the-longest-common-substring-with-a-recursive-solution-string-algorithm-recursion-dynamic-programming-development/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:02 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/how-do-you-find-the-longest-common-substring-with-a-recursive-solution-string-algorithm-recursion-dynamic-programming-development/</guid>
      <description>您如何找到具有递归解决方案的最长常见的子字符串（字符串，算法，递归，动态编程，开发）？ 回答 1 最初，阅读这一点以了解解决方案。
嗯，现在让我们代码递归解决方案（在CPP中）。
int解决（int i，int j）{
if（i == n || j == m）返回0;
if（dp [i] [j]！= -1）返回dp [i] [j];//如果访问此状态
if（s [i] == t [j]）返回dp [i] [j] =求解（i + 1，j + 1）+ 1;
返回dp [i] [j] = max（求解（i + 1，j），解决（i，j + 1））;
}
如果您对代码有任何疑问，请评论。
回答 2 在回答您的问题之前，为什么要从递归解决方案创建迭代解决方案？时间复杂性？不，它恰恰相同。可怕性？我说递归解决方案在阅读时更有意义。表现？没有太大差异。由于缓存未命中，迭代解决方案可能会更好。但它真的有巨大的差异吗？我不这么认为。或者由于递归导致堆栈空间耗尽？通常不会发生这种情况，除非有人设置了堆栈限制，除非要更少。
无论如何，回答你的问题。这一切都取决于递归如何创建迭代解决方案。
如果是1D DP真的很容易。例如，考虑系列F（n）= f（n-1）+ f（n-2）+ &amp;hellip; + f（n-k）f（n）= f（n-1）+ f（n- 2）+ &amp;hellip; + f（n-k）。迭代解决方案可以写作：
对于i = 1至n：对于j = n-1至n-k：dp [i] + = dp [j] &amp;lt;/ ol&amp;gt;，dp [n]：</description>
    </item>
    
    <item>
      <title>生锈将在谷歌替换C &#43;&#43;吗？</title>
      <link>https://xiangqingw.github.io/posts/will-rust-replace-c-in-google/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:02 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/will-rust-replace-c-in-google/</guid>
      <description>生锈将在谷歌替换C ++吗？ 回答 1 简单的答案，不，它不生锈，甚至没有任何威胁c ++的语言，这只是几个原因
还有很多其他原因，让我们下次保持:)
快乐的c ++ ing
编辑1：
谢谢罗伯特格伦蒂斯特建议一个非常强大的原因：因为它是ISO标准。旋转大学＆c
简单的答案，不，它不生锈，甚至没有任何威胁c ++的语言，这只是几个原因
还有很多其他原因，让我们下次保持:)
快乐的c ++ ing
编辑1：
谢谢罗伯特格伦蒂斯特建议一个非常强大的原因：因为它是ISO标准。通过旋转的大学和计算机专家组，C ++已成为，仍然是演变语言。结果是一种非专有，但快速，但可维护的语言，具有巨大的粉丝底座和经过验证的结果。
回答 2 而我是AG
此讨论似乎每年都有几年为什么X语言需要替换C / C ++，这次参数符合内存安全性。没有人愿意承认，在不安全内存中使用的每种情况下，都是程序员部分的编程错误。溢出，重新使用释放指针和索引是错误，它们被称为绑定检查器的最重要的工具所捕获。
此外，它不像假设的内存安全语言没有自己的安全问题，所有这些都是由同样的程序主错误发出的。
虽然我同意生锈是一种伟大的语言，可以提供以前吹捧的内存安全语言，如Java，Python或Ruby，C / C ++无法替换的速度缺乏缺乏。在编译的字节码时需要速度和效率，如操作系统，存在某些区域。
如果我在谷歌趋势上比较生锈与C ++，这就是我得到的。 C ++击败了死亡。每个C ++的槽都像匕首穿过锈，把它钉在地板上！ C ++似乎拥有它自己的UPS和Downs，但在过去的5年里，它保持了一个非常稳定的趋势。
rust是一种伟大的语言，但主要问题是世界上的大部分行业和公司都不喜欢重写他们的代码，正如你可以看到的tiobe - 软件质量公司c ++即将到来第四位，这次从顶部到位！ ！而且锈病甚至不是十大。
虽然Rust很棒，但我不喜欢在我的项目中使用它，因为大多数伟大的图书馆仍在使用C / C ++开发，以及通过Rust包装C / C ++代码的点。
IM游戏引擎开发人员，我真的很想将发动机转发生锈，但我必须在大多数C / C ++代码中写一个包装器!!!不幸的是Rust太年轻了。
在C ++中，您将类写入抽象内存访问。在编码这些类时，请在这些类上依赖于每次呼叫步骤中的内存。它与Rust - Youd将您的工具包装到一个安全API中的所有不安全的用法，仍会收获借阅的所有优势。
所以，是的，我认为生锈对这些领域有益。它始终难以编写低级别代码，而RERRES让您将更多的复杂器卸载到编译器。所有不安全的代码都将是本地化的，而您使用测试和文档以证明不变。
C ++是一种很好的语言，您可以获得很棒的性能，可以使用丰富的功能库构建超快速应用程序。您可以从GUI应用程序构建各种应用程序到3D图形，游戏，桌面应用以及硬核心计算机视觉应用程序。
另一方面，Rust也很快。它可以在任何地方使用C ++可以使用它。它有一个卓越的社区，大多数人都是内存安全！ Rust的并发能力通常被誉为优于C ++，而开发人员则渴望抓住此功能的生锈！这就是为什么生锈是赢家。
回答 3 截至2015年，谷歌在约20亿行代码中。[1]其中许多我假设是用C ++写的。</description>
    </item>
    
    <item>
      <title>有人是某人是房间里最聪明的软件工程师/开发人员的一些死亡赠品？</title>
      <link>https://xiangqingw.github.io/posts/what-are-some-dead-giveaways-that-someone-is-the-smartest-software-engineer-developer-in-the-room/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:01 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/what-are-some-dead-giveaways-that-someone-is-the-smartest-software-engineer-developer-in-the-room/</guid>
      <description>有人是某人是房间里最聪明的软件工程师/开发人员的一些死亡赠品？ 回答 1 前1％的软件工程师每天都做某事，其他99％不做。我一遍又一遍地看到这个，差异是惊人的。
我有一个朋友，这很容易考虑一个前1％的软件工程师。作为这个例子，我必须分享一个故事&amp;hellip;&amp;hellip;
当我的朋友和我见面时，他正在对我的团队进行面试。他有点散乱，但在那种辉煌的方式。显然，他可以编写和建立许多事情。他是一个建设者。
他还收集了&amp;hellip;&amp;hellip;爱好。
我们最终坐在彼此相邻，我基本上
前1％的软件工程师每天都做某事，其他99％不做。我一遍又一遍地看到这个，差异是惊人的。
我有一个朋友，这很容易考虑一个前1％的软件工程师。作为这个例子，我必须分享一个故事&amp;hellip;&amp;hellip;
当我的朋友和我见面时，他正在对我的团队进行面试。他有点散乱，但在那种辉煌的方式。显然，他可以编写和建立许多事情。他是一个建设者。
他还收集了&amp;hellip;&amp;hellip;爱好。
我们最终坐在彼此旁边，我基本上会让他疯狂地在我对软件工程和建筑的疯狂想法来回来回。至少是我的乐趣。
在六个月之后，他被任务（在很大程度上由自己）建立了一份信用卡处理API，如条纹或留言。这个项目没有资源，超出他的时间和足够的预算来进行认证审核等。
随着一个超级辉煌的帮助，它最终完成了一些架构和沿途的编码，其中两个人设法建立一个令人难以置信的支付平台，在AWS上运行。我相信他们是第一个以PCI兼容，认证和安全到运行后端平台所需的方式，不仅仅是使用别人的平台。
无论如何，这两个家伙实际上都是顶级的开发人员，正如你想象的那样，几年后正在努力建立一个移动支付的支付平台。
现在我想到了，这两个人都有与其他1％的开发人员见过的相同习惯。 （道歉中断意识流）
那么我一直看到在软件工程师的前1％的习惯是什么？
他们总是建立一些东西。不只是在工作。在工作之外。总是建设。
这些是每天在他们的日常工作中编写代码的人，然后回家并在他们想要存在的其他东西上写下代码。我也是那些人之一，所以我知道它是关于什么的。
我认为这是一种创造或制作东西的某种痴迷。在过去，人们会建造汽车或房屋或这样的东西。现在，这是代码。对于我们众多，这就是我们所做的。
从外面唯一奇怪。如果你每天写代码，那就正常，就像一个寒冷的冬天天的温暖的模糊毯子。
而且我在其他领域看到这种痴迷的行为。像勒布朗·詹姆斯，迈克尔·乔丹和科比布莱恩特那样的顶级NBA篮球运动员在达到MVP状态后，每天都以练习和训练而闻名，每天都越来越闻名。
沃伦自助餐，谁是世界上最富有的人或世界上最富有的男人，几十年来每天都要投资和发展他的业务。他仍然留着一整天读书。没有必要。他想要。他必须。这是他的生命的工作。
我喜欢了解吉他球员，因为我也弹吉他。可能是几十个与最好的球员的采访，像John Mayer，Steve Vai，Robben Ford，Joe Bonamassa等的人。他们都每天都在弹吉他。通常他们每天都会播放几个小时。这是他们喜欢做的事情。
所以，那些让某人做他们做的事情是为了做到这一点而做的痴迷。训练他们已经是最好的。仅仅是因为他们必须的东西。
这是他们的生命的工作。
这就是我认为在任何领域中的1％，包括软件工程。当它是你的痴迷时，当你的生命的工作时，当你做的事情是你做的事情，无论你想做什么，无论有人告诉你要做什么，你想学习和学习。
这是一个高价编程人员共同的质量。这确实是一个罕见的事情。
 武器
P.S.我也在其他地方写下代码和职业问题&amp;hellip;&amp;hellip;  回答 2 哦，还有另一件事。房间里最聪明的家伙不是那个说他所在的人，而不是那个人认为他是。
回答 3 更聪明的人要求非常好的澄清问题。
他们通常对请求背后的真正意图有疑问：&amp;lsquo;你真的需要什么？&amp;rsquo;
他们会质疑前提：我们真的需要建立吗？我们不能使用这种更简单的方法吗？
他们会质疑边缘案例：如果在周末下订单会发生什么 - 它是否仍然有资格获得折扣？
他们会质疑证据不支持的事情：你只是说是我们的服务器摔倒了。为什么你这么想？
智能开发人员在团队环境中也往往更灵活，
更聪明的人要求非常好的澄清问题。
他们通常对请求背后的真正意图有疑问：&amp;lsquo;你真的需要什么？&amp;rsquo;
他们会质疑前提：我们真的需要建立吗？我们不能使用这种更简单的方法吗？
他们会质疑边缘案例：如果在周末下订单会发生什么 - 它是否仍然有资格获得折扣？
他们会质疑证据不支持的事情：你只是说是我们的服务器摔倒了。为什么你这么想？
我发现，智能开发人员在团队环境中也往往更灵活。当有很多方法做某事时，如果他们看到，总的来说，他们都非常高兴地随着任何体面的方法，总的来说，球队正在进入它。
考虑这种剪断和保持指南，以便伪造它，这是直到你的制作;）
回答 4 特殊程序员倾向于具有以下属性：
回答 5 在我上一份工作中，我的铅软件工程师可能是我合作的最聪明的人。
困扰着我的事情是他如何将挑战倾听每个人的想法，甚至鼓励那些尚未说过的人陷入困境。
即使他已经有了一个解决方案（他通常在蝙蝠脱离），他恳切地希望从房间里的每个人那里学到一些东西，从来没有假设他是最好的方法。
我有一种感觉，态度是让他在房间里最聪明的人。
回答 6 你好！</description>
    </item>
    
    <item>
      <title>谁是一些最糟糕的计算机程序员？</title>
      <link>https://xiangqingw.github.io/posts/who-are-were-some-of-the-most-badass-computer-programmers/</link>
      <pubDate>Sun, 23 Jan 2022 22:08:01 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/who-are-were-some-of-the-most-badass-computer-programmers/</guid>
      <description>谁是一些最糟糕的计算机程序员？ 回答 1 我绝对喜欢这个帖子！原因;我个人不知道编程的第一件事。然而，像钢琴一样，我真的很敬畏这些上帝的人才。现在为真理和我无耻的要求。我的小企业Groubal拼命地需要世界上最好的编码人员来帮助我们完成下一个最好的事情！rjdoner@groubal.com.
回答 2 你们 &amp;hellip;
致DeataMation编辑的一封信，第29卷，1983年7月7日。我相信这是由Ed Post，Tektronix，Wilsonville或USA的编写（和版权）。
回到美好的旧时代 - 计算机的金色时代 - 很容易将男人与男孩（有时称为真正的男人和乳蛋饼在文献中）。在此期间，真正的男人是那些了解计算机编程的人，乳蛋白是那些没有那个人的人。一个真正的计算机程序员表示，像Do 10 I = 1,10和abend（他们实际上用大写字母谈话），你理解的），以及世界其他地区表示，像电脑一样对我来说太复杂，我无法与电脑有关 - 他们如此顽固。 （前面的工作[1]指出真正的男人与任何事情无关，并且不怕是非人格的。）
但是，像往常一样，时间变化。我们今天面临着一个小女士可以在微波炉中获得电脑的世界，12岁的孩子可以吹掉真正的男人，玩小行星和Pac-man，并且任何人都可以买到自己的个人计算机。真正的程序员有灭绝的危险，被垃圾80年代的高中生所取代。
明确需要指出典型的高中初中Pac-Man球员和真正的程序员之间的差异。如果这种差异明确了，它将给这些孩子渴望渴望 - 一个榜样，父亲的形象。它还将有助于向雇主解释真正的程序员，为什么用12岁的Pac-Man球员替换其工作人员（以相当大的薪水储蓄）取而代之的错误。
从人群中讲述真正程序员的最简单方法是他（或她）使用的编程语言。真正的程序员使用Fortran。乳蛋白蛋白州使用帕斯卡。吉斯卡尔设计者的尼克劳斯·斯·斯·克服发表了一个谈话，他被问到了一次，你怎么发表你的名字？他回答说，你可以用名字打电话给我，发出威慑，或者用价值叫我，价值。可以通过这条评论立即讲述Nicklaus Wirth是一个乳蛋糕。唯一由真实程序员认可的参数传递机制是逐个值返回，如IBM / 370 Fortran G和H编译器中所实现的。真正的程序员不需要所有这些抽象概念来完成他们的工作 - 他们对一家Keypunhion，Fortran IV编译器和啤酒完全满意。
如果你不能在Fortran中做到，请用汇编语言进行。如果你不能用汇编语言做到这一点，它不值得做。
回答 3 这是所有时间前10名Badass计算机程序员的列表 -
 Dennis Ritchie（C编程语言的参数）
他创建了今天在各种软件应用程序，嵌入式系统开发，操作系统中使用的最常用的C编程语言，并影响了最具现代的编程语言。 Linus Torvalds.
Linus Benedict Torvalds S Finnish American软件工程师是Linux内核发展背后的主要推动力。它的创作本身归功于他，他后来成为了Linux内核的首席架构师，
这是所有时间前10名Badass计算机程序员的列表 - Dennis Ritchie（C编程语言的参数）
他创建了今天在各种软件应用程序，嵌入式系统开发，操作系统中使用的最常用的C编程语言，并影响了最具现代的编程语言。 Linus Torvalds.
Linus Benedict Torvalds S Finnish American软件工程师是Linux内核发展背后的主要推动力。它的创作本身归功于他，他后来成为了Linux内核的首席架构师，现在是项目的协调员。
Bjarne Stroustrup.
蒂姆伯恩斯 - 李</description>
    </item>
    
    <item>
      <title>Second Post</title>
      <link>https://xiangqingw.github.io/posts/second-post/</link>
      <pubDate>Sun, 16 Jan 2022 17:54:00 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/second-post/</guid>
      <description>second blog </description>
    </item>
    
    <item>
      <title>First Post</title>
      <link>https://xiangqingw.github.io/posts/first-post/</link>
      <pubDate>Sun, 16 Jan 2022 17:07:08 +0800</pubDate>
      
      <guid>https://xiangqingw.github.io/posts/first-post/</guid>
      <description>Hello world </description>
    </item>
    
  </channel>
</rss>
